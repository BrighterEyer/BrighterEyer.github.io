[{"title":"[移动网页] 汇总","url":"/2019/06/26//articles/2019/06/26/1561506710000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/jasmine-95/p/7235186.html\" target=\"_blank\">移动端页面开发的两种方式</a>\n```\n使用js对网页进行缩放\n\nfunction bodyScale() {\n    var devicewidth = document.documentElement.clientWidth;\n    var scale = devicewidth / 640;\n    document.body.style.zoom = scale;\n}\nwindow.onload = window.onresize = function () {\n    bodyScale();\n};\n```\n<a href=\"https://blog.csdn.net/Venus_j/article/details/81056542\" target=\"_blank\">移动端web开发笔记</a>\n","tags":["移动网页"]},{"title":"[移动网页] 地图","url":"/2019/06/26//articles/2019/06/26/1561506709000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/lp1052843207/article/details/73087820\" target=\"_blank\">HTML5页面调用百度地图API,获取当前位置并导航到目的地</a>\n<a href=\"https://blog.csdn.net/a562550212/article/details/79239468\" target=\"_blank\">移动端浏览器调起百度地图、高德地图</a>\n```\nWGS84：为一种大地坐标系，也是目前广泛使用的GPS全球卫星定位系统使用的坐标系。（google地图国外使用）\nGCJ02：又称火星坐标系，是由中国国家测绘局制订的地理信息系统的坐标系统。由WGS84坐标系经加密后的坐标系。（google地图国内、高德地图）\nBD09：为百度坐标系，在GCJ02坐标系基础上再次加密。其中bd09ll表示百度经纬度坐标，bd09mc表示百度墨卡托米制坐标。（百度国内）\n非中国地区地图，服务坐标统一使用WGS84坐标。（百度国外）\n```\n\n```\nhttp://api.map.baidu.com/api?v=2.0&ak=qntV4LT7YvgAQ52vL3qld9EVpISmUCTM\nhttp://api.map.baidu.com/api?v=2.0&ak=gYgULa1jV7bufpSpfcDjeIxBrEWmhmhy\n```\n\n```\n<html>\n<body>\n\t<legend>在线地图</legend>\n\t<div id='allmap' style='width:100%; height:360px'></div>\n</body>\n\n<script type='text/javascript' src='http://api.map.baidu.com/api?type=quick&ak=56563710f7448264e407591367dc1d77&v=1.0'></script>\n\n<script type='text/javascript'>\n// 百度地图API功能\nvar map = new BMap.Map('allmap');    // 创建Map实例\n    map.addControl(new BMap.ZoomControl()); // 添加缩放控件\n    map.addControl(new BMap.ScaleControl()); // 添加比例尺控件\n    var point = new BMap.Point(116.486588,40.003082);\n    var marker = new BMap.Marker(point);  // 创建标注\n    map.addOverlay(marker);              // 将标注添加到地图中\n    map.centerAndZoom(point, 15);\n    var opts = {\n        width : 120,     // 信息窗口宽度\n        height: 30,     // 信息窗口高度\n        title : '妙计旅行' , // 信息窗口标题\n        enableAutoPan : true //自动平移\n    }\n    var infoWindow = new BMap.InfoWindow('妙计旅行', opts);  // 创建信息窗口对象\n    marker.addEventListener('click', function(){\n        map.openInfoWindow(infoWindow,point); //开启信息窗口\n    });\n</script>\n\n</html>\n```","tags":["移动网页"]},{"title":"[移动网页] inoic","url":"/2019/06/26//articles/2019/06/26/1561506708000.html/","content":"<a href=\"https://github.com/EasyTuan/mui-kidApp\" target=\"_blank\">基于 MUI 构建一个具有 90 +页面的APP应用</a>\n```\n 定位功能 -- 完成\n 选择城市 -- 完成\n 展示所选地址附近商家列表 -- 完成\n 在高德地图中寻找店铺 -- 完成\n 搜索文章，赛事 -- 完成\n 商家列表页 -- 完成\n 店铺评价页面 -- 完成\n 单张卡牌详情页面 -- 完成\n 商家详情页 -- 完成\n 登录、注册 -- 完成\n 三方微信、QQ登陆 -- 完成\n 修改密码 -- 完成\n 个人中心 -- 完成\n 发送短信、语音验证 -- 完成\n 赛事列表 -- 完成\n 赛事详情 -- 完成\n 添加、删除、修改收货地址 -- 完成\n 帐户信息 -- 完成\n 服务中心 -- 完成\n 红包 -- 完成\n 上传头像 -- 完成\n 卡牌对战发起 -- 完成\n```\n\n<a href=\"https://github.com/EasyTuan/ionic-cordova-demo\" target=\"_blank\">一个基于Ionic3.x cordova的移动APP demo</a>\n```\n前端技术:\nAngular4.x + ionic3.x + cordova\n\n项目运行:\ngit clone git@github.com:EasyTuan/ionic-cordova-demo.git\n\n# 国内镜像加速节点:git@gitee.com:easytuan/ionic-cordova-demo.git\n\n# 全局安装ionic和cordova\nnpm install -g cordova ionic\n\n# 安装项目依赖\nnpm install\n\n# 在浏览器中启动项目\nnpm run serve\n\n# 添加android平台\nionic cordova platform add android\n\n# usb连接安卓手机运行\nnpm run dev\n```\n\n<a href=\"https://blog.csdn.net/An_zhou/article/details/86693216\" target=\"_blank\">ionic3使用百度地图API并定位当前位置</a>\n","tags":["移动网页"]},{"title":"[小程序] 省市区联动","url":"/2019/06/26//articles/2019/06/26/1561506707000.html/","content":"<a href=\"https://www.cnblogs.com/bgwhite/p/9278820.html\" target=\"_blank\">小程序开发之三级联动</a>\n\n省市区mock数据\n```\nhttps://github.com/18291907191/tools/blob/master/mock.js\n```","tags":["小程序"]},{"title":"[小程序] 分包加载","url":"/2019/06/26//articles/2019/06/26/1561506706000.html/","content":"<a href=\"https://www.jianshu.com/p/aa21662f3b95\" target=\"_blank\">小程序之分包加载</a>\n\n","tags":["小程序"]},{"title":"[小程序] css3实现对radio和checkbox的美化","url":"/2019/06/26//articles/2019/06/26/1561506703000.html/","content":"<a href=\"https://www.cnblogs.com/bgwhite/p/9265800.html\" target=\"_blank\">css3实现对radio和checkbox的美化</a>\n\nradio\n```\n/* 未选中的背景样式*/\nradio .wx-radio-input {\n    width: 40rpx;\n    height: 40rpx;\n    border-radius: 50%;\n}\n/* 选中后的背景样式*/\nradio .wx-radio-input.wx-radio-input-checked {\n    background-color: #16cc80;\n}\nradio .wx-radio-input.wx-radio-input-checked::before {\n    width: 40rpx;\n    height: 40rpx;\n    border-radius: 50%;\n    text-align: center;\n    line-height:  40rpx;\n    font-size:  30rpx;\n    color: #fff;\n    background-color: transparent;\n    transform: translate(-50%,-50%) scale(1);\n    -webkit-transform: translate(-50%,-50%) scale(1);\n}\n```\n\ncheckbox\n```\n/* 未选中的背景样式*/\ncheckbox .wx-checkbox-input {\n    width: 40rpx;\n    height: 40rpx;\n    border-radius: 50%;\n}\n/* 选中后的背景样式*/\ncheckbox .wx-checkbox-input.wx-checkbox-input-checked {\n    background-color: #16cc80;\n}\n/*选中状态对勾的样式*/\ncheckbox .wx-checkbox-input.wx-checkbox-input-checked::before {\n    width: 40rpx;\n    height: 40rpx;\n    border-radius: 50%;\n    text-align: center;\n    line-height:  40rpx;\n    font-size:  30rpx;\n    color: #fff;\n    background-color: transparent;\n    transform: translate(-50%,-50%) scale(1);\n    -webkit-transform: translate(-50%,-50%) scale(1);\n}\n```","tags":["小程序"]},{"title":"[前端] 代码库","url":"/2019/06/26//articles/2019/06/26/1561506702000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/xd-tayde?tab=repositories\" target=\"_blank\">xd-tayde的github仓库</a>\n<a href=\"https://github.com/xd-tayde/mtouch/blob/master/README_ZH.md\" target=\"_blank\">mtouch手势库</a>\n简介\n```\n支持5种手势:\n拖动事件：drag\n双指缩放：pinch\n双指旋转：rotate\n单指缩放：singlePinch\n单指旋转：singleRotate\n```\n<a href=\"https://github.com/xd-tayde/mcanvas/blob/master/README_ZH.md\" target=\"_blank\">添加水印js库</a>\n","tags":["前端"]},{"title":"[vue] 生命周期","url":"/2019/06/26//articles/2019/06/26/1561506701000.html/","content":"<a href=\"https://qqqww.com/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/\" target=\"_blank\">vue生命周期</a>\n\n","tags":["vue"]},{"title":"[springmvc] demos","url":"/2019/06/26//articles/2019/06/26/1561506700000.html/","content":"<a href=\"https://blog.csdn.net/SELECT_BIN/article/details/84982243\" target=\"_blank\">IDEA配置SpringMVC项目的tomcat启动</a>\n<a href=\"https://gitee.com/lvyuely/lvyuely-web-base\" target=\"_blank\">lvyuely-web-base</a>\n```\n采用springmvc，mybatis，freemarker，druid、fastjson\n```\n\ntomcat报错\n```\nEnable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them.\n```\n办法\n```\n修改EL表达式，例如\"${owner.new}\"可以修改为\"${owner['new']}\"; \n\n修改tomcat属性，忽略对EL表达式的关键字检查\n修改$CATALINA_BASE/conf/catalina.properties文件\n添加org.apache.el.parser.SKIP_IDENTIFIER_CHECK=true选项\n\n去掉 .settings 目录xml页面中含有<!---->的注释\n```","tags":["springmvc"]},{"title":"[spring] 版本问题","url":"/2019/06/26//articles/2019/06/26/1561506698000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/bocurry/p/7801853.html\" target=\"_blank\">参考</a>\n问题\n```\nASM ClassReader failed to parse class file - probably due to a new Java class file version that isn't supported yet\n```\n原因\n```\nSpring3.2.8版本及其以下不支持编译版本为JDK1.8的jar包。\n如果想要用1.8版本的jar包，那么就得更新到Spring 4。\n要么就只有全使用编译版本为JDK1.7的jar包。\n```\n方案有两条\n```\n1.  使用jdk7\n2.  升级spring 4\n```\n","tags":["spring"]},{"title":"[react-native] 文件上传","url":"/2019/06/26//articles/2019/06/26/1561506697000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/shaoting/p/6213806.html\" target=\"_blank\">react native 之上传文件</a>\n<a href=\"https://www.jianshu.com/p/c9f030fa6754\" target=\"_blank\">react-native 文件上传</a>\n<a href=\"https://blog.csdn.net/qq_20652771/article/details/82184005#comments\" target=\"_blank\">React-native 文件选择器react-native-file-selector的使用</a>\n<a href=\"https://www.jianshu.com/p/d62fc3ede61c\" target=\"_blank\">react-native-fs文件创建、查看、上传、下载</a>\n<a href=\"https://www.cnblogs.com/eyelly/p/react-native-file-upload-download.html\" target=\"_blank\">react-native之文件上传下载（包含gif演示）</a>\n<a href=\"https://segmentfault.com/a/1190000015736955\" target=\"_blank\">上传图片</a>\n","tags":["react-native"]},{"title":"[react-native] 实战系列","url":"/2019/06/26//articles/2019/06/26/1561506696000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/codetomylaw/article/details/53071969\" target=\"_blank\">《React-Native系列》React-Native实战系列博客汇总</a>\n<a href=\"https://blog.csdn.net/hsbirenjie/column/info/reactnative2016\" target=\"_blank\">专栏</a>","tags":["react-native"]},{"title":"[react-native] 安装指定的版本","url":"/2019/06/26//articles/2019/06/26/1561506695000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/niuba123456/article/details/81879756\" target=\"_blank\">修改react-native项目到指定react-native版本</a>\n<a href=\"https://blog.csdn.net/niuba123456/article/details/81879750\" target=\"_blank\">创建指定版本的react-native项目</a>\n<a href=\"https://www.jianshu.com/p/5322d0838318\" target=\"_blank\">react-native 指定版本创建项目</a>\n\n初始化时指定版本\n```\nreact-native init name --version 0.xx.xx\n```\n安装指定版本\n```\nnpm install --save react-native@0.xx.xx\n```\n查看版本\n```\nreact-native -v\n```\n\n<a href=\"https://www.jianshu.com/p/2a5e51a37e41\" target=\"_blank\">React Native 版本升降与降级</a>\n```\n#查看npm包管理的React Native版本\n#网址https://www.npmjs.com/package/react-native\nnpm info react-native\n```\n","tags":["react-native"]},{"title":"[react-native] react-native-navigation","url":"/2019/06/26//articles/2019/06/26/1561506694000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/search?q=react-native-navigation&page=1&type=note\" target=\"_blank\">简书搜索react-native-navigation</a>\n<a href=\"https://www.jianshu.com/p/016d069722cd\" target=\"_blank\">react-native-navigation react-native-navigation说明</a>\n<a href=\"https://blog.csdn.net/Cici_fontEnd/article/details/72957249\" target=\"_blank\">react-native-navigation 原生路由组件的使用</a>\n<a href=\"https://github.com/wix/react-native-navigation\" target=\"_blank\">react-native-navigation GitHub地址</a>\n```jxs\nthis.props.navigator.push({\n\n\tscreen: 'example.ScreenPush',   //唯一的注册ID\n\ttitle: '登录'  //导航头标题\n\ttitleImage: require('../img/example.png'),  //导航头标题也可以是图片,设置了此项会覆盖title\n\tpassProps: {}, //对象会作为一个属性传递给跳转的页面\n\tanimated: true,  //跳转过渡效果,默认true\n\tbackButtonTitle: '', //返回键边上的title,不需要就设置为空\n\tbackButtonHidden: false,  //返回键是否隐藏,默认不隐藏\n\n});\n```\n\n<a href=\"https://www.jianshu.com/p/66507e7bc556\" target=\"_blank\">React Native使用react-native-navigation时动态改变title</a>\n```\n\n```\n\n<a href=\"https://github.com/wix/react-native-navigation/blob/63019957c1689bb0d26043f7838ac11bbdafb433/docs/docs/top-level-api-migration.md\" target=\"_blank\">弃用startTabBasedApp(params)，改用setRoot({bottomTabs})</a>\n```\n\n```\n","tags":["react-native"]},{"title":"[react] 生命周期","url":"/2019/06/26//articles/2019/06/26/1561506693000.html/","content":"<a href=\"https://qqqww.com/React%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/\" target=\"_blank\">React生命周期详解</a>\n<img src=\"https://qqqww.com/React%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/React.jpg\">React生命周期详解 - 图解</a>\n","tags":["react"]},{"title":"[idea] tomcat","url":"/2019/06/26//articles/2019/06/26/1561506691000.html/","content":"<a href=\"\" target=\"_blank\"></a>\nidea配置Tomcat\n<a href=\"https://blog.csdn.net/qq_20652771/article/details/78562207\" target=\"_blank\">IntelliJ idea2017.2配置Tomcat8.5</a>\n<a href=\"https://www.cnblogs.com/Miracle-Maker/articles/6476687.html\" target=\"_blank\">idea+tomcat+chrome</a>\n<a href=\"https://www.cnblogs.com/Knowledge-has-no-limit/p/7240585.html\" target=\"_blank\">idea+maven+tomcat</a>\n","tags":["idea"]},{"title":"[idea] JetBrainsCrack","url":"/2019/06/26//articles/2019/06/26/1561506690000.html/","content":"<a href=\"http://idea.lanyus.com/\" target=\"_blank\">lanyus</a>\n\n<a href=\"https://blog.csdn.net/hdp134793/article/details/83176267\" target=\"_blank\"></a>\n<a href=\"http://blog.lanyus.com/archives/174.html\" target=\"_blank\">IntelliJ IDEA License Server本地搭建教程</a>\n```\nnotepad C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\n0.0.0.0 account.jetbrains.com\n0.0.0.0 www.jetbrains.com\n```\n<a href=\"https://pan.baidu.com/s/12vzYFuUn7kO1CvJQu2kkOw\" target=\"_blank\">JetbrainsCrack-3.1-release-enc.jar</a>\n","tags":["idea"]},{"title":"[blog] 前端","url":"/2019/06/26//articles/2019/06/26/1561506686000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/xxx91hx/p/6283804.html\" target=\"_blank\">H5页面 敏捷开发解决办法 css3常用动画</a>\n<a href=\"https://qqqww.com/\" target=\"_blank\">工头的github博客</a>\n<a href=\"https://github.com/foremanwang\" target=\"_blank\">github - 工头</a>\n<a href=\"https://github.com/ForeManWang/local_life\" target=\"_blank\">一个基于微信小程序的本地生活项目，微信小程序的页面布局、相关API的使用，接口数据请求、数据绑定逻辑等</a>\n","tags":["blog"]},{"title":"[小程序] 像素单位","url":"/2019/06/26//articles/2019/06/26/1561506192000.html/","content":"<a href=\"https://developers.weixin.qq.com/community/develop/doc/000000c51e8728ac7fe6d6f2d51804\" target=\"_blank\">小程序中 rpx、px、pt 单位之间的比例测量</a>\n```\n1 px = 0.75 pt\n```","tags":["小程序"]},{"title":"[小程序] 调节屏幕亮度","url":"/2019/06/26//articles/2019/06/26/1561506191000.html/","content":"<a href=\"https://www.jianshu.com/p/49d877f2c14d\" target=\"_blank\">获取屏幕亮度</a>\n<a href=\"https://www.cnblogs.com/lanshu/p/8441226.html\" target=\"_blank\">微信小程序API-wx.setScreenBrightness_屏幕亮度调节</a>\n<a href=\"https://www.jianshu.com/p/8663c0efc8d3\" target=\"_blank\">小程序监听手指滑动方向</a>\nindex.wxml\n```\n<view\nbindtouchstart='touchStart' \nbindtouchmove='touchMove'\nbindtouchend='touchEnd'>\nOK\n</view>\n```\n\nindex.js\n```\n//获取应用实例\nconst app = getApp()\n\nPage({\n    data: {\n        touchS: [0, 0],\n        touchE: [0, 0]\n    },\n\n    touchStart: function (e) {\n        // console.log(e.touches[0].pageX)\n        let sx = e.touches[0].pageX\n        let sy = e.touches[0].pageY\n        this.data.touchS = [sx, sy]\n    },\n    touchMove: function (e) {\n        let sx = e.touches[0].pageX;\n        let sy = e.touches[0].pageY;\n        this.data.touchE = [sx, sy]\n    },\n    touchEnd: function (e) {\n        let start = this.data.touchS\n        let end = this.data.touchE\n        console.log(start)\n        console.log(end)\n        if (start[0] < end[0] - 50) {\n            console.log('右滑')\n        } else if (start[0] > end[0] + 50) {\n            console.log('左滑')\n        } else {\n            console.log('静止')\n        }\n    },\n\n})\n```","tags":["小程序"]},{"title":"[小程序] 手势","url":"/2019/06/26//articles/2019/06/26/1561506190000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/male09/article/details/81236607\" target=\"_blank\">小程序-监听手势滑动</a>\n<a href=\"https://www.cnblogs.com/wangshishuai/p/11031420.html\" target=\"_blank\">小程序 手机左滑右滑事件监听</a>\n<a href=\"https://www.jianshu.com/p/8663c0efc8d3\" target=\"_blank\">小程序监听手指滑动方向</a>\ngesture.wxml\n```\n<view class=\"touch\" bindtouchstart=\"touchStart\" bindtouchmove=\"touchMove\" bindtouchend=\"touchEnd\" ></view>\n```\ngesture.js\n```\n  // 触摸开始事件 \n  touchStart: function (e) {\n    touchDot = e.touches[0].pageX; // 获取触摸时的原点 \n    // 使用js计时器记录时间  \n    interval = setInterval(function () {\n      time++;\n    }, 100);\n  },\n  // 触摸移动事件 \n  touchMove: function (e) {\n    var touchMove = e.touches[0].pageX;\n    console.log(\"touchMove:\" + touchMove + \" touchDot:\" + touchDot + \" diff:\" + (touchMove - touchDot));\n    // 向左滑动  \n    if (touchMove - touchDot <= -40 && time < 10) {\n      // wx.switchTab({\n      //   url: '../左滑页面/左滑页面'\n      // });\n      console.log(213)\n    }\n    // 向右滑动 \n    if (touchMove - touchDot >= 40 && time < 10) {\n      console.log('向右滑动');\n      wx.switchTab({\n        url: 'pages/position_man/position_man'\n      });\n      console.log(54645)\n    }\n  },\n  // 触摸结束事件 \n  touchEnd: function (e) {\n    clearInterval(interval); // 清除setInterval \n    time = 0;\n  },\n```","tags":["小程序"]},{"title":"[spring] 分布式缓存","url":"/2019/06/26//articles/2019/06/26/1561506189000.html/","content":"<a href=\"https://blog.csdn.net/sup_heaven/article/details/32337711\" target=\"_blank\">memcached基本配置与使用</a>\n\n适用场合\n```\n1.分布式应用。由于memcached本身基于分布式的系统，所以尤其适合大型的分布式系统。\n2.数据库前段缓存。数据库常常是网站系统的瓶颈。数据库的大并发量访问，常常造成网站内存溢出。当然我们也可以使用Hibernate的缓存机制。但memcached是基于分布式的，并可独立于网站应用本身，所以更适合大型网站进行应用的拆分。\n3.服务器间数据共享。举例来讲，我们将网站的登录系统、查询系统拆分为两个应用，放在不同的服务器上，并进行集群，那这个时候用户登录后，登录信息如何从登录系统服务器同步到查询系统服务器呢？这时候，我们便可以使用memcached，登录系统将登录信息缓存起来，查询系统便可以获得登录信息，就像获取本地信息一样。\n```\n","tags":["spring"]},{"title":"[spring] ActiveMQ","url":"/2019/06/26//articles/2019/06/26/1561506188000.html/","content":"<a href=\"https://www.cnblogs.com/xinhuaxuan/p/6102985.html\" target=\"_blank\">ActiveMQ简介</a>\n","tags":["spring"]},{"title":"[css] opacity影响子元素解决办法","url":"/2019/06/26//articles/2019/06/26/1561506187000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/feng3037/p/9759863.html\" target=\"_blank\">css opacity影响子元素解决办法</a>\n<a href=\"https://blog.csdn.net/q95548854/article/details/78865387\" target=\"_blank\">css父元素透明度（opacity）对子元素的影响</a>\n```\n设置父元素opacity：0.3，子元素不设置opacity，子元素也会有0.5的透明度。\n\n设置子元素opacity：1，子元素的opacity：1也是在父元素的opacity：0.3的基础上设置的，因此子元素的opacity还是0.3。\n```\n解决方法(1)：\n```\n父元素使用\nbackground: rgba(0,0,0,0.3)\n代替\nopacity: 0.3\n```\n解决方法(2)：\n```\n父元素使用\nbackground: rgba(255,255,255,0.3)\n代替\nopacity: 0.3\n```","tags":["css"]},{"title":"[小游戏] 头脑风暴前后端","url":"/2019/06/25//articles/2019/06/25/1561468004000.html/","content":"<a href=\"https://github.com/jacksplwxy/wechat-weapp-Game-TNFB\" target=\"_blank\">一款基于腾讯云wafer2方案的实时在线答题微信小程序，类似头脑王者</a>\n","tags":["小游戏"]},{"title":"[mysql] 启用SSL连接","url":"/2019/06/25//articles/2019/06/25/1561468003000.html/","content":"<a href=\"https://www.jianshu.com/p/ee8ddbf82581\" target=\"_blank\">MySQL启用SSL连接</a>\n<a href=\"https://www.jianshu.com/p/77a5fd7ce499\" target=\"_blank\">MySQL数据库常用命令汇总</a>\n","tags":["mysql"]},{"title":"[前端] web字体和图标","url":"/2019/06/25//articles/2019/06/25/1561468002000.html/","content":"<a href=\"https://www.jianshu.com/p/f8b19e7416bb\" target=\"_blank\">web字体和图标（CSS查漏补缺）</a>\n","tags":["前端"]},{"title":"[前端] 全屏页","url":"/2019/06/25//articles/2019/06/25/1561468001000.html/","content":"<a href=\"https://hijackli.github.io/projects/fullpage/index.html#firstPage\" target=\"_blank\">全屏页-仿搜狗输入法pc端网站</a>\n","tags":["前端"]},{"title":"[前端] 在github展示的作品","url":"/2019/06/25//articles/2019/06/25/1561468000000.html/","content":"<a href=\"https://hijackli.github.io/projects/index.html\" target=\"_blank\">index.html</a>\n","tags":["前端"]},{"title":"[前端] 干货","url":"/2019/06/25//articles/2019/06/25/1561467999000.html/","content":"<a href=\"https://www.jianshu.com/p/890ca3afd74f\" target=\"_blank\">前端学习网址大全-干货满满-持续更新</a>\n","tags":["前端"]},{"title":"[webpack] css-loader&style-loader","url":"/2019/06/25//articles/2019/06/25/1561467996000.html/","content":"<a href=\"https://www.jianshu.com/p/cbd3375e2575\" target=\"_blank\">css-loader&style-loader</a>\n","tags":["webpack"]},{"title":"[vue] 工作经验总结","url":"/2019/06/25//articles/2019/06/25/1561467995000.html/","content":"<a href=\"https://www.jianshu.com/p/377420e5e08a\" target=\"_blank\">C-Utopia 2018 了解的 Vue 知识大全</a>\n<a href=\"https://github.com/C-Utopia/Vue-1\" target=\"_blank\">github地址</a>\n\n","tags":["vue"]},{"title":"[vue] vue+node实现拖拽上传图片","url":"/2019/06/25//articles/2019/06/25/1561467994000.html/","content":"<a href=\"https://www.jianshu.com/p/377420e5e08a\" target=\"_blank\">vue+node实现拖拽上传图片</a>\n<a href=\"https://github.com/C-Utopia/pratice-project.git\" target=\"_blank\">github地址</a>\n","tags":["vue"]},{"title":"[servlet] 显示上传进度条","url":"/2019/06/25//articles/2019/06/25/1561467993000.html/","content":"<a href=\"https://www.jianshu.com/p/4638ae4e4a14\" target=\"_blank\">servlet上传文件+上传进度显示</a>\n<a href=\"https://github.com/houxinlin/ServletUploadFile\" target=\"_blank\">github地址</a>\n","tags":["servlet"]},{"title":"[react] demos","url":"/2019/06/25//articles/2019/06/25/1561467992000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/8b732c692705\" target=\"_blank\">React + TypeScript + Router + Mobx + Antd + 多页面开发模板（免npm run eject）</a>\n<a href=\"https://github.com/sofn/react-ts-multientry\" target=\"_blank\">github地址</a>\n","tags":["react"]},{"title":"[python] 算法例子","url":"/2019/06/25//articles/2019/06/25/1561467991000.html/","content":"<a href=\"https://www.jianshu.com/p/da24db45b613\" target=\"_blank\">Dijkstra算法例子</a>\n","tags":["python"]},{"title":"[python] 编程专栏","url":"/2019/06/25//articles/2019/06/25/1561467990000.html/","content":"<a href=\"https://www.jianshu.com/u/4b02d713618e\" target=\"_blank\">Python高效编程</a>\n","tags":["python"]},{"title":"[node] Node+WebSocket+Vue聊天室","url":"/2019/06/25//articles/2019/06/25/1561467989000.html/","content":"<a href=\"https://www.jianshu.com/p/c652542dcadd\" target=\"_blank\">Node+WebSocket+Vue聊天室: 界面美化，代码优化</a>\n\n","tags":["node"]},{"title":"[LeetCode] 专题","url":"/2019/06/25//articles/2019/06/25/1561467988000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"http://blog.csdn.net/column/details/leetcode-solution.html\" target=\"_blank\">【CSDN专栏】leetCode题解</a>\n<a href=\"https://github.com/gzwl/leetcode\" target=\"_blank\">“辣妈宝贝”总结的github</a>\n\n知乎上面关于程序员刷题的专题：\n<a href=\"https://www.zhihu.com/question/25574458\" target=\"_blank\">知乎专题 | 国内有哪些好的刷题网站?</a>\n<a href=\"https://www.zhihu.com/question/36488823\" target=\"_blank\">知乎专题 | 程序员专门的刷题网站</a>\n<a href=\"https://www.nowcoder.com/activity/oj\" target=\"_blank\">牛客网</a>\n<a href=\"https://www.jianshu.com/u/a0839bc8e7b4\" target=\"_blank\">山中散人的博客 | LeetCode</a>","tags":["LeetCode"]},{"title":"[js] 无形装逼，最为致命","url":"/2019/06/25//articles/2019/06/25/1561467987000.html/","content":"<a href=\"https://www.jianshu.com/p/cb462fa72c27\" target=\"_blank\">JS无形装逼，最为致命</a>\n","tags":["js"]},{"title":"[js] 内置对象","url":"/2019/06/25//articles/2019/06/25/1561467986000.html/","content":"<a href=\"https://www.jianshu.com/p/446dd533f6fe\" target=\"_blank\">【JS基础】（十一）JavaScript内置对象</a>\n","tags":["js"]},{"title":"[js] 基础","url":"/2019/06/25//articles/2019/06/25/1561467985000.html/","content":"<a href=\"https://www.jianshu.com/u/a7c0644ab950\" target=\"_blank\">虹猫1992 的专栏</a>\n<a href=\"https://www.jianshu.com/p/0fbc05174941\" target=\"_blank\">【JS基础】（七）JavaScript引用类型之Date对象的常用方法</a>\n","tags":["js"]},{"title":"[js] JavaScript之观察者模式","url":"/2019/06/25//articles/2019/06/25/1561467984000.html/","content":"<a href=\"https://www.jianshu.com/p/246d6c9ccf79\" target=\"_blank\">JavaScript之观察者模式</a>\n","tags":["js"]},{"title":"[h5] 前端面试题总结","url":"/2019/06/25//articles/2019/06/25/1561467983000.html/","content":"<a href=\"https://www.jianshu.com/p/2765c24040c0\" target=\"_blank\">前端面试题总结——Html5（持续更新中）</a>\n\n","tags":["h5"]},{"title":"[gulp] 构建工具的基本使用","url":"/2019/06/25//articles/2019/06/25/1561467982000.html/","content":"<a href=\"https://www.jianshu.com/p/6e562c3b2a25\" target=\"_blank\">【前端工具】gulp构建工具的基本使用</a>\n<a href=\"https://github.com/HiJackLi/gulp-gulpfile.js\" target=\"_blank\">gulp-gulpfile.js</a>\n\n","tags":["gulp"]},{"title":"[go] 声音播放","url":"/2019/06/25//articles/2019/06/25/1561467981000.html/","content":"<a href=\"https://www.jianshu.com/p/9f5989d30866\" target=\"_blank\">golang声音播放的初探</a>\n","tags":["go"]},{"title":"[go] AVL搜索树","url":"/2019/06/25//articles/2019/06/25/1561467980000.html/","content":"<a href=\"https://www.jianshu.com/p/f4edcbc7c7ee\" target=\"_blank\">AVL 搜索树的Go实现</a>\n<a href=\"https://github.com/KevinACoder/Learning/tree/master/ds\" target=\"_blank\">github</a>\n\n","tags":["go"]},{"title":"[es6] let&const","url":"/2019/06/25//articles/2019/06/25/1561467979000.html/","content":"<a href=\"https://www.jianshu.com/p/0e68e5df3f83\" target=\"_blank\">ES6之let与const</a>\n重点总结\n```\n①let在代码块中声明的变量为局部变量\n②let声明的变量，必须在其声明之后才能使用\n③let在同一作用域内不可重复声明同一变量，包括var或const声明过的也不行\n④const声明常量，不可更改，但如果是引用类型常量，则可以修改其内部数据\n⑤const具有let相同特性（包括①②③所有特性）\n⑥const在声明常量时必须同时进行赋值\n```\n","tags":["es6"]},{"title":"[css] 知识汇总","url":"/2019/06/25//articles/2019/06/25/1561467978000.html/","content":"<a href=\"https://www.jianshu.com/p/33b3763dc9ba\" target=\"_blank\">【CSS】面试知识整理</a>\n","tags":["css"]},{"title":"[css] 有趣动画相关","url":"/2019/06/25//articles/2019/06/25/1561467977000.html/","content":"<a href=\"https://www.jianshu.com/p/1e8fe9fab92f\" target=\"_blank\">CSS动画相关（打字动画、逐帧动画、环形路径平移）</a>\n","tags":["css"]},{"title":"[css] 画形状","url":"/2019/06/25//articles/2019/06/25/1561467976000.html/","content":"<a href=\"https://www.jianshu.com/p/ce47a353a347\" target=\"_blank\">CSS画心形、蛋形、菱形、八卦、三角、圆形、对话框、平行四边形</a>\n\n","tags":["css"]},{"title":"[css] 24个CSS高级技巧合集","url":"/2019/06/25//articles/2019/06/25/1561467975000.html/","content":"<a href=\"https://www.jianshu.com/p/af7daca199b3\" target=\"_blank\">24个CSS高级技巧合集</a>\n","tags":["css"]},{"title":"[c] 实现动态数组","url":"/2019/06/25//articles/2019/06/25/1561467974000.html/","content":"<a href=\"https://www.jianshu.com/p/7038616360d7\" target=\"_blank\">C实现的vector动态数组</a>\n","tags":["c"]},{"title":"[blog] LeetCode","url":"/2019/06/25//articles/2019/06/25/1561467973000.html/","content":"<a href=\"https://kevinsblog.github.io/\" target=\"_blank\">LeetCode</a>\n","tags":["blog"]},{"title":"[小程序] 嵌套网页支付","url":"/2019/06/25//articles/2019/06/25/1561466777000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/lingXie/p/10531286.html\" target=\"_blank\">微信小程序与webview交互实现支付</a>\n```\n<script type=\"text/javascript\" src=\"//res.wx.qq.com/open/js/jweixin-1.3.2.js\"></script>\n```\n<a href=\"https://www.cnblogs.com/lingXie/p/10530786.html\" target=\"_blank\">vue-微信支付or支付宝支付片段</a>\n\n微信小程序与内嵌网页交互实现支付功能\n<a href=\"https://www.jianshu.com/p/c9a196d0455e\" target=\"_blank\">1</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=3451\" target=\"_blank\">2</a>\n<a href=\"https://blog.csdn.net/rolan1993/article/details/78863297\" target=\"_blank\">3</a>\n\n<a href=\"https://blog.csdn.net/nevergiveuplzl/article/details/87967762\" target=\"_blank\">JAVA微信小程序(嵌套h5)支付</a>\n<a href=\"https://blog.csdn.net/chen_pan_pan/article/details/80352411\" target=\"_blank\">小程序与H5页面微信支付</a>\n<a href=\"https://blog.csdn.net/chen_pan_pan/article/details/71433679\" target=\"_blank\">Java实现微信扫码支付【方式二】</a>\n<a href=\"https://blog.csdn.net/Neil_1993/article/details/82905038\" target=\"_blank\">PHP+H5微信小程序webview嵌套H5支付（公司项目笔记）</a>\n<a href=\"http://www.demodashi.com/demo/10268.html\" target=\"_blank\">JAVA微信扫码支付模式二功能实现完整例子</a>\n<a href=\"https://blog.csdn.net/zhulin2012/article/details/53467504\" target=\"_blank\">JAVA实现的支付宝扫描二维码支付</a>\n\n<a href=\"https://gitee.com/52itstyle/spring-boot-pay\" target=\"_blank\">spring-boot-pay</a>\n```\n支付宝\n扫码支付、电脑支付、WAP支付、APP支付服务端\n微信\n扫码支付(模式一二)、公众号H5支付、WAP支付\n```\n\n<a href=\"https://blog.52itstyle.vip/archives/1473/\" target=\"_blank\">swagger</a>\n","tags":["小程序"]},{"title":"[小程序] 禁止手滑swiper","url":"/2019/06/25//articles/2019/06/25/1561466776000.html/","content":"<a href=\"https://www.cnblogs.com/kiimi/p/9205086.html\" target=\"_blank\">微信小程序swiper禁止用户手动滑动</a>\n```\n<swiper vertical='true' circular='true'>\n  <swiper-item catchtouchmove='catchTouchMove'>   <!--重点这里-->\n  </swiper-item>\n</swiper>\n```\n```\n// 截获竖向滑动\ncatchTouchMove:function(res){\n  return false;\n}\n```","tags":["小程序"]},{"title":"[小程序] echarts","url":"/2019/06/25//articles/2019/06/25/1561466775000.html/","content":"<a href=\"https://www.cnblogs.com/lingXie/p/10620411.html\" target=\"_blank\">微信小程序中-折线图</a>\n<a href=\"https://echarts.baidu.com/tutorial.html#%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8%20ECharts\" target=\"_blank\">echarts官方</a>\n<a href=\"https://github.com/ecomfe/echarts-for-weixin\" target=\"_blank\">echarts-for-weixin</a>\nindex.json\n```\n{\n  \"usingComponents\": {\n    \"ec-canvas\": \"../../ec-canvas/ec-canvas\"\n  }\n}\n```\nindex.wxml\n```\n<view class=\"container\">\n  <ec-canvas id=\"mychart-dom-bar\" canvas-id=\"mychart-bar\" ec=\"{{ ec }}\"></ec-canvas>\n</view>\n```\n","tags":["小程序"]},{"title":"[html] 锚点定位","url":"/2019/06/25//articles/2019/06/25/1561466774000.html/","content":"<a href=\"\" target=\"_blank\"></a>\nhtml中设置锚点定位\n1、使用id定位： (这样的定位可以针对任何标签来定位。 )\n```\n<a name=\"1F\" href=\"#1F\">锚点1</a>\n<div id=\"1F\">锚点1内容</div>\n```\n2、使用name定位： （使用name属性只能针对a标签来定位，而对其他标签就不能起到定位作用。 ）\n```\n<a href=\"#5F\">锚点5</a>\n<a name=\"5F\">锚点5内容</a>\n```\n","tags":["html"]},{"title":"[h5] 微信分享","url":"/2019/06/25//articles/2019/06/25/1561466773000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```js\n$.ajax({\n        type: \"get\",\n        url: \"*************\",//后台分享接口地址\n        async: true,\n        data: {\n            'url': window.location.href//返回给后台的参数\n        },\n        success: function(res) {\n            console.log(res.data);\n            if(res.code == 1) {\n                wx.config({\n                    debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\n                    appId: res.data.appId, // 必填，公众号的唯一标识\n                    timestamp: res.data.timestamp, // 必填，生成签名的时间戳\n                    nonceStr: res.data.nonceStr, // 必填，生成签名的随机串\n                    signature: res.data.signature, // 必填，签名，见附录1\n                    jsApiList: [\n                        'checkJsApi',\n                        'onMenuShareTimeline',\n                        'onMenuShareAppMessage'\n                    ] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2\n                });\n                wx.ready(function() {\n                    // 2.1 监听“分享给朋友”，按钮点击、自定义分享内容及分享结果接口\n                    wx.onMenuShareAppMessage({\n                        title: '分享标题',\n                        desc: '分享描述',\n                        link: 'www.baidu.com',//分享链接地址，比如分享到百度\n                        imgUrl: '分享图片',\n                        img_width: \"50 \",\n                        img_height: \"50 \",\n                        success: function(res) {\n\n                        },\n                        cancel: function(res) {\n                            //$.toast('已取消');\n                        },\n                        fail: function(res) {\n                            alert(JSON.stringify(res));\n                        }\n                    });\n                    //分享到朋友圈\n                    wx.onMenuShareTimeline({\n                        title: '分享标题',\n                        desc: '分享描述',\n                        link: 'www.baidu.com',//分享链接地址，比如分享到百度\n                        imgUrl: '分享图片',\n                        img_width: \"50 \",\n                        img_height: \"50 \",\n                        success: function(res) {\n\n                        },\n\n                        cancel: function(res) {\n                            //$.toast('已取消');\n                        },\n                        fail: function(res) {\n                            alert(JSON.stringify(res));\n                        }\n                    });\n                })\n\n                wx.error(function(res) {\n                    // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。\n                    alert(\"分享失败 \");\n                });\n            }\n        }\n    });\n```","tags":["h5"]},{"title":"[docker] dubbo","url":"/2019/06/25//articles/2019/06/25/1561466772000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/jmcui/p/9512795.html\" target=\"_blank\">Docker 系列七（Dubbo 微服务部署实践）.</a>\n<a href=\"https://blog.csdn.net/gaowenhui2008/article/details/68484788\" target=\"_blank\">在Docker中运行Dubbo应用</a>\n<a href=\"https://www.cnblogs.com/fuhongwei041/p/7470569.html\" target=\"_blank\">spring-boot dubbo项目使用docker方式部署</a>\n<a href=\"https://www.jianshu.com/p/b045dbdb8e12\" target=\"_blank\">docker在dubbo项目中的配置</a>\n\n\n<a href=\"https://cloud.tencent.com/developer/article/1056972\" target=\"_blank\">0基础教你搭建一套可自动化构建的微服务框架(SpringBoot+Dubbo+Docker+Jenkins)</a>\n<a href=\"https://github.com/bz51/SpringBoot-Dubbo-Docker-Jenkins\" target=\"_blank\">SpringBoot-Dubbo-Docker-Jenkins</a>\n\n","tags":["docker"]},{"title":"[小程序] 一键生成web的H5","url":"/2019/06/25//articles/2019/06/25/1561466570000.html/","content":"<a href=\"https://www.jianshu.com/p/04f6c8206805\" target=\"_blank\">微信小程序一键生成web的H5</a>\n<a href=\"https://github.com/Tencent/omi/tree/master/packages/omi-mp\" target=\"_blank\">github|Tencent|omi-mp</a>\n```\n#安装omi-cli\nnpm i omi-cli -g\n#新建个文件进入初始化 your_project_name为自定义项目名\nomi init-mp your_project_name\n#进入项目目录\ncd your_project_name\n#运行项目\nnpm start\n\n#生成开发环境\nnpm run build\n```\n\n把小程序项目拷贝到 src-mp 目录，如果是新的小程序，可以在 src-mp 目录创建小程序，目录要求：\n```\n目录说明:\n\n├─ components     //存放所有组件，每个组件一个文件夹，暂不支持乱放\n├─ pages          //存放所有页面，每个页面一个文件夹，暂不支持乱放\n│  ├─ index    \n│  └─ logs   \n├─ utils\n├─ app.js\n├─ app.json\n├─ app.wxss\n├─ project.config.json\n```\n\n<a href=\"https://github.com/Tencent/omi/tree/master/packages/omi-mp\" target=\"_blank\">omi-mp - 微信小程序开发和生成 Web</a>\n","tags":["小程序"]},{"title":"[小程序] 图片上传组件","url":"/2019/06/25//articles/2019/06/25/1561466569000.html/","content":"<a href=\"https://www.jianshu.com/p/45f8281f45bd\" target=\"_blank\">微信小程序多张图片上传组件</a>\n<a href=\"https://github.com/kingbuwu/uploadImages\" target=\"_blank\">github | uploadImages</a>\n","tags":["小程序"]},{"title":"[小程序] 仿微信通讯录按字母查找滑动组件","url":"/2019/06/25//articles/2019/06/25/1561466568000.html/","content":"<a href=\"https://github.com/kingbuwu/weapp-address-book\" target=\"_blank\">微信小程序仿微信通讯录按字母查找滑动组件</a>","tags":["小程序"]},{"title":"[小程序] wcss实现简单动画效果","url":"/2019/06/25//articles/2019/06/25/1561466567000.html/","content":"<a href=\"https://www.jianshu.com/p/590eee8faba9\" target=\"_blank\">css3实现简单动画效果及以小程序为例</a>\n\n","tags":["简书"]},{"title":"[简书] 前端之美小程序专栏","url":"/2019/06/25//articles/2019/06/25/1561466566000.html/","content":"<a href=\"https://www.jianshu.com/c/894474611ddd\" target=\"_blank\">前端之美小程序专栏</a>","tags":["简书"]},{"title":"[gulp] 实战","url":"/2019/06/25//articles/2019/06/25/1561466565000.html/","content":"<a href=\"https://www.jianshu.com/p/5182ff995776\" target=\"_blank\">gulp|H5移动端页面适配解决方案vw</a>\n```\n使用gulp是为了把px单位自动编译成vw\n```","tags":["css"]},{"title":"[css] 用css和一个div画一个多边框的“靶”","url":"/2019/06/25//articles/2019/06/25/1561466564000.html/","content":"<a href=\"https://www.jianshu.com/p/b0bec4466b1f\" target=\"_blank\">用css和一个div画一个多边框的“靶”</a>\n实现代码\nhtml\n```\n<view class=\"borders\"></view>\n```\ncss\n```\n.borders {\n  width: 30rpx;\n  height: 30rpx;\n  background-color: #000;\n  margin: auto;\n  margin-top: 150px;\n  border-radius: 50%;\n  box-shadow: 0 0 0 20px red, 0 0 0 40px #000, 0 0 0 60px yellow,0 0 0 80px red, 0 0 0 100px blue, 0 0 0 120px #000;\n  -moz-box-shadow: 0 0 0 20px red, 0 0 0 40px #000, 0 0 0 60px yellow,0 0 0 80px red, 0 0 0 100px blue, 0 0 0 120px #000;\n  -webkit-box-shadow: 0 0 0 20px red, 0 0 0 40px #000, 0 0 0 60px yellow,0 0 0 80px red, 0 0 0 100px blue, 0 0 0 120px #000;\n  -o-box-shadow: 0 0 0 20px red, 0 0 0 40px #000, 0 0 0 60px yellow,0 0 0 80px red, 0 0 0 100px blue, 0 0 0 120px #000;\n  -ms-box-shadow: 0 0 0 20px red, 0 0 0 40px #000, 0 0 0 60px yellow,0 0 0 80px red, 0 0 0 100px blue, 0 0 0 120px #000;\n}\n```","tags":["css"]},{"title":"[blog] 小程序","url":"/2019/06/25//articles/2019/06/25/1561466563000.html/","content":"<a href=\"https://www.jianshu.com/u/dc26e676b6bb\" target=\"_blank\">个人简书专栏|独孤久见</a>\n<a href=\"https://github.com/kingbuwu?tab=repositories\" target=\"_blank\">个人简书专栏|独孤久见|github</a>\n","tags":["blog"]},{"title":"[mysql] timezone问题","url":"/2019/06/25//articles/2019/06/25/1561466562000.html/","content":"<a href=\"https://www.cnblogs.com/EasonJim/p/6906713.html\" target=\"_blank\">使用JDBC连接MySql时出现：</a>\n```\nThe server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration\n```\n\n办法\n```\n在连接字符串后面加上\n?serverTimezone=UTC\n其中UTC是统一标准世界时间。\n\n完整的连接字符串示例：\njdbc:mysql://localhost:3306/test?serverTimezone=UTC\n\n解决中文乱码输入问题\njdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8\n\n当然也可以和上面的一起结合：\njdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC\n```\n","tags":["mysql"]},{"title":"[前端] 在线编辑示例","url":"/2019/06/24//articles/2019/06/24/1561379486000.html/","content":"<a href=\"https://wow.techbrood.com/fiddle/17128\" target=\"_blank\">CSS3 弹性容器justify-content主轴方向对齐属性测试</a>\n<a href=\"https://blog.csdn.net/iefreer/article/details/50775887\" target=\"_blank\">CSS3弹性布局内容对齐（justify-content）属性使用详解</a>\n```\nflex-start\ncenter\nflex-end\nspace-between\nspace-around\n```\n<a href=\"https://blog.csdn.net/iefreer?t=1\" target=\"_blank\">陈小峰（iefreer）的专栏</a>\n\n","tags":["前端"]},{"title":"[前端] 学习示例","url":"/2019/06/24//articles/2019/06/24/1561379485000.html/","content":"<a href=\"https://github.com/shulongfei/demo-manage/blob/master/pages/layui/connection.html\" target=\"_blank\">省市区三级联动demo</a>\n<a href=\"https://github.com/shulongfei/learning-tool/tree/master/web\" target=\"_blank\"></a>\n动画\n```\nhttps://github.com/shulongfei/learning-tool/blob/master/web/04_cssCore/day02/Day02-ALL/03-transition.html\n```\n\n","tags":["前端"]},{"title":"[sublime] 显示文本编码","url":"/2019/06/24//articles/2019/06/24/1561379484000.html/","content":"<a href=\"https://www.cnblogs.com/EasonJim/p/7600060.html\" target=\"_blank\">Sublime Text 3显示文本编码</a>\n在Settings上加入\n```\n\"show_encoding\":true\n```\n","tags":["docker"]},{"title":"[docker] 搭建 Zookeeper、Dubbo、Spring Boot项目","url":"/2019/06/24//articles/2019/06/24/1561379483000.html/","content":"<a href=\"https://www.liangzl.com/get-article-detail-35186.html\" target=\"_blank\">Docker 搭建 Zookeeper、Dubbo、Spring Boot 项目</a>\n<a href=\"https://amoswang0626.github.io/docker-dubbo/\" target=\"_blank\">github | blog | docker-dubbo</a>\n","tags":["docker"]},{"title":"[docker] 安装zookeeper和dubbo-admin","url":"/2019/06/24//articles/2019/06/24/1561379482000.html/","content":"<a href=\"https://blog.csdn.net/qq_33562996/article/details/80599922\" target=\"_blank\">安装zookeeper和dubbo-admin</a>\n","tags":["docker"]},{"title":"[docker] springboot+dubbo","url":"/2019/06/24//articles/2019/06/24/1561379481000.html/","content":"<a href=\"https://www.cnblogs.com/fuhongwei041/p/7470569.html\" target=\"_blank\">spring-boot dubbo项目使用docker方式部署</a>\n<a href=\"https://www.cnblogs.com/jmcui/p/9512795.html\" target=\"_blank\">Docker 系列七（Dubbo 微服务部署实践）</a>\n```\ndocker pull jmcui/tomcat-env\n```","tags":["docker"]},{"title":"[docker] kafuka","url":"/2019/06/24//articles/2019/06/24/1561379480000.html/","content":"<a href=\"https://www.cnblogs.com/52fhy/p/10848659.html\" target=\"_blank\">Kafka简明教程</a>\n\n","tags":["docker"]},{"title":"[docker] docker-compose","url":"/2019/06/24//articles/2019/06/24/1561379479000.html/","content":"<a href=\"https://www.cnblogs.com/52fhy/p/5991344.html\" target=\"_blank\">Docker之Compose服务编排</a>\n```\ndocker pull mysql\ndocker pull wordpress\n```","tags":["docker"]},{"title":"[blog] php","url":"/2019/06/24//articles/2019/06/24/1561379478000.html/","content":"<a href=\"https://github.com/52fhy/\" target=\"_blank\">github | 飞鸿影 |52fhy</a>\n","tags":["blog"]},{"title":"[php] tp5+小程序","url":"/2019/06/24//articles/2019/06/23/1561378056000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=tp5%2B%E5%B0%8F%E7%A8%8B%E5%BA%8F&ref=simplesearch\" target=\"_blank\">github搜索tp5+小程序</a>\n<a href=\"https://github.com/Paladinhanxiao/Tp5WechatShop\" target=\"_blank\">使用Tp5（RestfulAPI）开发的一套微信小程序（商城）</a>\n<a href=\"https://github.com/Paladinhanxiao/Tp5WechatShop/tree/master/public/weChatFrontend\" target=\"_blank\">weChatFrontend</a>\n<a href=\"https://github.com/Vanvansama/MiniProgram\" target=\"_blank\">ThinkPHP5+微信小程序商城</a>\n","tags":["php"]},{"title":"[php] layui","url":"/2019/06/24//articles/2019/06/23/1561378055000.html/","content":"<a href=\"http://www.thinkphp.cn/code/3507.html\" target=\"_blank\">HisiPHP 基于TP5+Layui的后台管理框架</a>\n<a href=\"https://gitee.com/hisi/hisiphp\" target=\"_blank\">gitee hisiphp</a>\n\n<a href=\"https://www.cnblogs.com/sunlizheng/p/7822036.html\" target=\"_blank\">Layui框架+PHP打造个人简易版网盘系统</a>\n<a href=\"https://gitee.com/vhacker/yunpan\" target=\"_blank\">gitee 简易网盘系统2.0</a>\n","tags":["php"]},{"title":"[php] github+tp5","url":"/2019/06/24//articles/2019/06/23/1561378054000.html/","content":"<a href=\"https://github.com/langyuanzhang?tab=repositories\" target=\"_blank\">github langyuanzhang</a>\n<a href=\"https://github.com/langyuanzhang/wxpay-tp5\" target=\"_blank\">微信扫码支付</a>\n","tags":["php"]},{"title":"[php] echarts","url":"/2019/06/24//articles/2019/06/23/1561378053000.html/","content":"<a href=\"https://blog.csdn.net/OnePiece_only/article/details/79409686\" target=\"_blank\">echart+php 动态获取数据（条形图）</a>\n<a href=\"https://blog.csdn.net/weixin_39696369/article/details/79103972\" target=\"_blank\">PHP利用ECharts实现折线图</a>\n","tags":["php"]},{"title":"[php] php+mysql+bootstrap","url":"/2019/06/24//articles/2019/06/23/1561378052000.html/","content":"<a href=\"https://pan.baidu.com/s/10bi4BLxdnxbtjNBex_eEwQ\" target=\"_blank\">一个简单的个人博客项目Demo</a>\n提取码：\npp2f\n\n","tags":["php"]},{"title":"[springboot] demos","url":"/2019/06/24//articles/2019/06/23/1561378051000.html/","content":"<a href=\"https://github.com/wyh-spring-ecosystem-student/spring-boot-student/tree/releases\" target=\"_blank\">spring-boot-student</a>\n\n学习与实战最佳 基于Spring Boot 2.x的前后端分离架构X-Boot\n<a href=\"https://github.com/Exrick/xboot-front\" target=\"_blank\">前台：Vue+iView</a>\n<a href=\"https://gitee.com/Exrick/x-boot\" target=\"_balnk\">后台</a>\n```\n（1）Spring Boot 2.x/Spring Security/JWT/Spring Data JPA+Mybatis-Plus/Redis/（2）Elasticsearch 分布式限流/同步锁/验证码/SnowFlake\n（3）雪花算法ID自增\n（4）动态权限管理\n（5）数据权限\n（6）工作流\n（7）代码生成\n（8）日志记录\n（9）定时任务\n（10）第三方社交账号、短信登录\n```\n\n哔哩哔哩宣传\n<a href=\"http://www.bilibili.com/av30284667\" target=\"_blank\">作者亲自制作XBoot文字快闪宣传视频</a>\n<a href=\"https://www.bilibili.com/video/av23121122/\" target=\"_blank\">作者亲自制作其他项目宣传视频</a>\n\n<a href=\"https://blog.csdn.net/u010631302/article/details/80422464\" target=\"_blank\">基于 Spring boot + mvc + vue + Element ui + jpa + mysql + redis 的一个用户管理项目</a>\n<a href=\"https://github.com/ryz-13997318136/springbootvuemvc\" target=\"_blank\">github | springbootvuemvc</a>\n\n<a href=\"https://www.cnblogs.com/NeverCtrl-C/p/9658406.html\" target=\"_blank\">SpringBoot2 + mybatis-plus + redis + SpringCache</a>\n```\n整合Mybatis-Plus、整合Redis、利用Ehcache实现二级缓存、利用SpringCache和Redis作为缓存\n依赖包含web mysql mybatis-plus lombok devtools\n```\n二级缓存说明\n```\n4 MyBatis-Plus开启二级缓存\n　　技巧01：mybatis的以及缓存默认是开启的，二级缓存默认是关闭的\n\n　　技巧02：一级缓存是SqlSession级别，二级缓存是SqlSessionFactory级别\n\n　　技巧03：从二级缓存中获取到的数据都是缓存数据的副本，从一级缓存中获取到的数据是缓存数据的引用\n\n　　4.1 Mybatis默认的二级缓存\n　　　　技巧01：直接在映射文件中添加  <cache /> 即可开启二级缓存\n\n　　　　技巧02：mybatis默认的二级缓存是利用Map实现的\n\n　　　　4.1.1 序列化实体类\n　　　　　　使用二级缓存时必须对实体类进行序列化\n```\n","tags":["springboot"]},{"title":"[mybatis] Example改名Criteria+Mapper改名Dao","url":"/2019/06/24//articles/2019/06/23/1561378050000.html/","content":"下载插件源码\n<a href=\"https://github.com/bnhjk76/mybatisGenerator/tree/master/src/org/mybatis/generator/plugins\" target=\"_blank\">org.mybatis.generator.plugins</a>\n<a href=\"https://github.com/mybatis/generator/releases\" target=\"_blank\">generator/releases</a>\n\nExample改名Criteria+Mapper改名Dao\n<a href=\"https://github.com/bnhjk76/mybatisGenerator/blob/master/generatorConfig.xml\" target=\"_blank\">generatorConfig.xml示例</a>\n```xml\n<generatorConfiguration>\n\n    <!--defaultModelType=\"flat\" 大数据字段，不分表 -->\n    <context id=\"Mysql\" targetRuntime=\"MyBatis3Simple\" defaultModelType=\"flat\">\n\n        <!--此处是将Example改名为Criteria    -->\n        <plugin type=\"org.mybatis.generator.plugins.RenameExampleClassPlugin\">\n            <property name=\"searchString\" value=\"Example$\"/>\n            <!-- 替换后 -->\n            <!--<property name=\"replaceString\" value=\"Criteria\"/>-->\n            <!--<property name=\"replaceString\" value=\"Query\"/>-->\n        </plugin>\n        <!--此处是将UserMapper.xml改名为UserDao.xml -->\n        <plugin type=\"org.mybatis.generator.plugins.rename.RenameSqlMapperPlugin\">\n            <property name=\"searchString\" value=\"Mapper\"/>\n            <property name=\"replaceString\" value=\"Dao\"/>\n        </plugin>\n\n        <!-- 此处是将UserMapper改名为UserDao 接口 -->\n        <plugin type=\"org.mybatis.generator.plugins.rename.RenameJavaMapperPlugin\">\n            <property name=\"searchString\" value=\"Mapper$\"/>\n            <property name=\"replaceString\" value=\"Dao\"/>\n        </plugin>\n    </context>\n\n</generatorConfiguration>\n```","tags":["mybatis"]},{"title":"[mybatis] MyBatisGenerator注解方式和xml方式","url":"/2019/06/24//articles/2019/06/23/1561378049000.html/","content":"<a href=\"https://www.cnblogs.com/toutou/p/9771404.html\" target=\"_blank\">SpringBoot入门教程(四)MyBatis generator 注解方式和xml方式</a>\n```\nXML方式 type=\"XMLMAPPER\"\n注解方式 type=\"ANNOTATEDMAPPER\"\n```","tags":["mybatis"]},{"title":"[python] Flask+Sqlite","url":"/2019/06/24//articles/2019/06/23/1561378048000.html/","content":"<a href=\"https://github.com/qqxx6661/RecommendDish\" target=\"_blank\">订餐推荐系统，Flask+sqlite</a>\n```\nPython3 + Flask + Sqlite\n\n运行main.py文件\n\n浏览器访问\nlocalhost:5000\n```","tags":["python"]},{"title":"[springboot] 整合mybatis","url":"/2019/06/24//articles/2019/06/23/1561378047000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/maanshancss/p/6027999.html\" target=\"_blank\">Mybatis Generator最完整配置详解</a>\n<a href=\"https://www.jianshu.com/p/e09d2370b796\" target=\"_blank\">Mybatis Generator最完整配置详解</a>\n<a href=\"https://www.cnblogs.com/peterxiao/p/7779188.html\" target=\"_blank\">spring boot+mybatis整合</a>\n<a href=\"https://blog.csdn.net/sufu1065/article/details/82905892\" target=\"_blank\">Spring Boot （七）MyBatis代码自动生成和辅助插件</a>\n<a href=\"https://github.com/vipstone/springboot-example/tree/master/springboot-mybatis-xml\" target=\"_blank\">MyBatis Generator 示例源码</a>\n<a href=\"https://gitee.com/ailianshuo/Spring-Boot-Sample/blob/master/springboot-mybatisxml/src/main/java/com/ailianshuo/mybatisxml/utility/MyMapper.java\" target=\"_blank\">基于 tk.mybatis BaseMapper示例</a>\n<a href=\"https://blog.csdn.net/ai_lian_shuo/article/details/77775975\" target=\"_blank\">tk.mybatis依赖与配置，MyBatis + Mapper + mybatis-generator</a>\n<a href=\"https://www.cnblogs.com/coder-lzh/p/9894977.html\" target=\"_blank\">IBaseMapper</a>\n```\n#加载Mybatis配置文件\nmybatis.mapper-locations=classpath:mapping/*Mapper.xml\nmybatis.config-location=classpath:config/sqlMapConfig.xml\n#实体类所在位置\nmybatis.type-aliases-package=com.code.mybatis.pojo\n#打印sql到控制台\nmybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl\n\n#数据源必填项\nspring.datasource.driver-class-name = com.mysql.jdbc.Driver\nspring.datasource.url = jdbc:mysql://localhost:3306/study?useUnicode=true&characterEncoding=utf-8\nspring.datasource.username = root\nspring.datasource.password = 123456\n```\nsqlMapConfig.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n\n<configuration>\n     <typeAliases>\n     </typeAliases>\n</configuration>\n```\n\ngui\nhttps://github.com/spawpaw/mybatis-generator-gui-extension\n\n\nMyBatis Generator自定义插件实现自定义Mapper\npublic interface  BaseMapper<T extends BaseModel> \nhttps://blog.csdn.net/u011781521/article/details/78697775\n\nBaseMapper.java\n```\npublic interface BaseMapper<T> {\n\n\t/**\n\t * 通过ID查询\n\t * @param id\n\t * @return\n\t */\n\tObject selectById(Serializable id);\n\t\n\t/**\n\t * 查询单条记录\n\t * @param entity\n\t * @return\n\t */\n\tObject selectOne(@Param(\"item\")Object obj);\n\n\t/**\n\t * 查询记录集合\n\t * @param entity\n\t * @return\n\t */\n\tList<?> selectList(@Param(\"item\")Object obj);\n\t\n\t/**\n\t * 分页查询\n\t * @param t\n\t * @param page\n\t * @return\n\t */\n\tList<T> selectPage(@Param(\"item\")Object obj, @Param(\"page\")PageModel page);\n\n\t/**\n\t * 通用的保存方法\n\t * @param <T>\n\t * @param entity\n\t */\n\tvoid save(@Param(\"item\")Object obj);\n\t\n\t/**\n\t * 批量保存\n\t * @param list\n\t */\n\tint batchSave(List<?> list);\n\n\t/**\n\t * 通用的修改方法\n\t * @param <T>\n\t * @param entity\n\t */\n\tint update(@Param(\"item\")Object obj);\n\t\n\t/**\n\t * 批量更新\n\t * @param list\n\t * @return\n\t */\n\tint batchUpdate(List<?> list);\n\n\t/**\n\t * 删除方法\n\t * @param id\n\t */\n\tint delById(Serializable id);\n\t\n\t/**\n\t * 批量删除\n\t * @param list\n\t * @return\n\t */\n\tint delList(List<?> list);\n\n\t/**\n\t * 批量删除方法\n\t * @param ids\n\t */\n\tint delArray(int[] ids);\n\n\t/**\n\t * 统计查询\n\t * @param <T>\n\t * @param params 查询参数\n\t * @return 总记录条数\n\t */\n\tint count(Object obj);\n}\n```\nStartUp.java\n```\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URISyntaxException;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n \nimport org.mybatis.generator.api.MyBatisGenerator;\nimport org.mybatis.generator.config.Configuration;\nimport org.mybatis.generator.config.xml.ConfigurationParser;\nimport org.mybatis.generator.exception.InvalidConfigurationException;\nimport org.mybatis.generator.exception.XMLParserException;\nimport org.mybatis.generator.internal.DefaultShellCallback;\n\npublic class StartUp {\n \n\tpublic static void main(String[] args) throws URISyntaxException {\n        try {\n            System.out.println(\"--------------------start generator-------------------\");\n            List<String> warnings = new ArrayList<String>();\n            boolean overwrite = true;\n            ClassLoader classloader = Thread.currentThread().getContextClassLoader();\n            InputStream is = classloader.getResourceAsStream(\"generatorConfig.xml\");\n            ConfigurationParser cp = new ConfigurationParser(warnings);\n            Configuration config = cp.parseConfiguration(is);\n            DefaultShellCallback callback = new DefaultShellCallback(overwrite);\n            MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);\n            myBatisGenerator.generate(null);\n        \tSystem.out.println(\"--------------------end generator-------------------\");\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } catch (InvalidConfigurationException e) {\n            e.printStackTrace();\n        } catch (XMLParserException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n","tags":["springboot"]},{"title":"[springboot2] mybatis+PageHelper+generator+postman","url":"/2019/06/24//articles/2019/06/23/1561378046000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/zab635590867/article/details/82874659\" target=\"_blank\">mybatis+PageHelper+generator+postman</a>\n<a href=\"https://blog.csdn.net/xiaolyuh123/article/details/73506189\" target=\"_blank\">Spring Boot+Mybatis+Pagehelper分页</a>\n<a href=\"https://github.com/wyh-spring-ecosystem-student/spring-boot-student/tree/releases\" target=\"_blank\">github | spring-boot-student</a>","tags":["springboot2"]},{"title":"[sublime] 配置python","url":"/2019/06/23//articles/2019/06/23/1561296919000.html/","content":"<a href=\"https://www.cnblogs.com/maoxianfei/p/5709330.html\" target=\"_blank\">Sublime Text3配置Python环境</a>\n","tags":["sublime"]},{"title":"[sublime] 分屏","url":"/2019/06/23//articles/2019/06/23/1561296918000.html/","content":"位置\n```\n\"view\" -> layout -> Columns：2\n```\n\n分屏2个屏，快捷键是\n```\nAlt+Shift+2\n```\n","tags":["sublime"]},{"title":"[sublime] 安装PackageControl","url":"/2019/06/23//articles/2019/06/23/1561296917000.html/","content":"<a href=\"\" target=\"_blank\"></a>\nsublime 3\n```\nimport urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\n```\nsblime 2\n```\nimport urllib2,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')\n```\n\n网络不好的话,就按着官方的另一种方法来吧\n```\nhttps://packagecontrol.io/Package%20Control.sublime-package\n```\n\n<a href=\"https://www.cnblogs.com/wangyang0210/p/9765031.html\" target=\"_blank\">【Sublime Text3】Package Control：Install Package不能使用解决方法</a>\n<a href=\"https://www.jianshu.com/p/ab6679abc980\" target=\"_blank\">Sublime 3 安装 Package Control</a>\n```\nSublimeText PackageControll emmet 安装\n#C:\\WINDOWS\\system32\\drivers\\etc\\hosts\n修改hosts文件添加\n50.116.34.243 sublime.wbond.net\n\n1、安装 Package ctrl： 使用 ctrl + ～ 打开控制台，输入以下代码：\n\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener(urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen('http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n2、在 Package ctrl 中选择 Install package；\n3、搜索 emmet 并安装。\n```\n\n<a href=\"https://www.cnblogs.com/wind128/p/4409422.html\" target=\"_blank\">Sublime Text 3 全程详细图文原创教程（持续更新中。。。）</a>\n","tags":["sublime"]},{"title":"[sublime] React-Native相关插件","url":"/2019/06/23//articles/2019/06/23/1561296916000.html/","content":"<a href=\"https://www.jianshu.com/p/0427629bd111\" target=\"_blank\">Sublime插件React-Native篇</a>\n\n","tags":["sublime"]},{"title":"[springcloud] docker","url":"/2019/06/23//articles/2019/06/23/1561296915000.html/","content":"<a href=\"https://github.com/cyhbyw/spring-cloud-docker-microservice-book-code\" target=\"_blank\">spring-cloud-docker-microservice-book-code</a>","tags":["springcloud"]},{"title":"[spring] struts2","url":"/2019/06/23//articles/2019/06/23/1561296911000.html/","content":"<a href=\"https://www.w3cschool.cn/struts_2/struts_spring.html\" target=\"_blank\">Struts2 Spring集成</a>\n<a href=\"https://blog.csdn.net/liujiahan629629/article/details/20737593\" target=\"_blank\">Struts2+Spring集成合并</a>\n<a href=\"https://www.yiibai.com/struts_2/struts_file_uploads.html\" target=\"_blank\">struts文件上传</a>\n","tags":["spring"]},{"title":"[spring] spring+struts2+hibernate","url":"/2019/06/23//articles/2019/06/23/1561296910000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/cr2121/spring\" target=\"_blank\">spring3 + hibernate4 + struts2 spring3 + mybatis + struts2</a>\n```\nspring + hibernate + Struts2集成，spring + Struts2 + mybatis集成演示\n```\n<a href=\"https://github.com/ZhibingXie/Struts2-Spring-Hibernate\" target=\"_blank\">Struts2.3+Spring3+Hibernate4 + jdk6</a>\n<a href=\"https://github.com/yy1193889747/fxhand\" target=\"_blank\">基于SSH（struts2+spring+herbinate）的校园二手网站开发</a>\n```\n前言\n\n之前学校做的课程设计，现在整理个readme出来。\n\n系统功能\n\n游客浏览用户已发布商品的信息\n游客注册为用户及用户的登录\n用户发布欲出售商品\n用户个人中心，管理发布的商品\n用户删除收藏，用户认证\n系统管理员，进行数据的增删改查，导出功能\n技术要点\n\n下拉框二级联动\n手机短信验证\n滑动验证码\n分页技术\n```\n\n<a href=\"https://github.com/userkdg/ssh-shop\" target=\"_blank\">运用Spring、Struts2、Hibernate框架在Tomcat7、MySQL、jdk1.7环境下，建立商城平台, 实现了前台页面系统</a>\n<a href=\"https://github.com/userkdg/ssm-ishop\" target=\"_blank\">iShop商店实现浏览商品</a>\n\niSunday-博客项目 前端\n<a href=\"https://github.com/userkdg/dubbo-blog-front-end\" target=\"_blank\">ssm-dubbo-shiro的开发架构 </a>\n<a href=\"https://github.com/userkdg/dubbo-blog-back-end\" target=\"_blank\">spring4+springmvc+hibernate4</a>\n\n","tags":["spring"]},{"title":"[spring] idea+ssh框架","url":"/2019/06/23//articles/2019/06/23/1561296909000.html/","content":"<a href=\"https://www.cnblogs.com/baixaio/articles/10326050.html\" target=\"_blank\">使用Idea搭建ssh框架(Spring SpringMvc hibernate)</a>\n<a href=\"https://blog.csdn.net/sinat_23900151/article/details/86086668\" target=\"_blank\">IDEA导入SSH项目用Tomcat运行</a>\n<a href=\"https://blog.csdn.net/hzr0523/article/details/79643117\" target=\"_blank\">IDEA导入SSH框架项目方法总结</a>\n","tags":["spring"]},{"title":"[spring] hibernate","url":"/2019/06/23//articles/2019/06/23/1561296908000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/startym/article/details/3342132\" target=\"_blank\">Spring整合Hibernate的步骤</a>\n<a href=\"https://blog.csdn.net/zero_130/article/details/81217207\" target=\"_blank\">Spring简单整合hibernate实现登录例子</a>\n<a href=\"https://www.cnblogs.com/wang--lei/p/6973735.html\" target=\"_blank\">Spring与Hibernate集成、Spring与Struts2集成</a>\n","tags":["spring"]},{"title":"[mysql] 安装mysql5.6","url":"/2019/06/23//articles/2019/06/23/1561296371000.html/","content":"<a href=\"https://www.cnblogs.com/alan-lin/p/9966917.html\" target=\"_blank\">Windows 安装并配置 MySQL 5.6</a>\n<a href=\"https://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.42-winx64.zip\" target=\"_blank\">mysql-5.6.42-winx64.zip</a>\n\n配置过程\n```\n#Path追加\nD:\\Program Files\\mysql-5.6\\bin\n\n在mysql目录中找到 data 文件夹，如果不存在就新建一个 data 文件夹\n修改一下配置文件，拷贝 mysql 目录中的my-default.ini，重命名为 my.ini，打开my.ini，修改或添加配置，然后保存\n\n\n#mysql所在目录\nbasedir = D:\\Program Files\\mysql-5.6\n#mysql所在目录\\data\ndatadir = D:\\Program Files\\mysql-5.6\\data\n```\n\n```\n#为防止安装失败报\nInstall/Remove of the Service Denied!\n\n#以管理员身份运行cmd.exe\nC:\\WINDOWS\\system32\\cmd.exe\n\ncd D:\\Program Files\\mysql-5.6\\bin && D:\\\n\nmysqld --initialize-insecure --user=mysql\n\nmysqld install\n\n#启动 MySQL\nnet start mysql\n\n#本地命令行连接MySQL，刚开始没密码，直接回车即可\nmysql -u root -p\n```","tags":["mysql"]},{"title":"[mysql] mysql-installer-community","url":"/2019/06/23//articles/2019/06/23/1561296370000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://dev.mysql.com/downloads/windows/installer/5.6.html\" target=\"_blank\">mysql-installer-community5.6官网地址</a>\n<a href=\"https://pan.baidu.com/s/1egYj\" target=\"_blank\">mysql-installer-community-5.6.14.0.msi</a>\n","tags":["mysql"]},{"title":"[maven] 仓库","url":"/2019/06/23//articles/2019/06/23/1561296369000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```xml\n\t<repositories>\n\t\t<repository>\n\t\t\t<id>maven</id>\n\t\t\t<name>Maven Repository Switchboard</name>\n\t\t\t<layout>default</layout>\n\t\t\t<url>http://repo1.maven.org/maven2</url>\n\t\t\t<snapshots>\n\t\t\t\t<enabled>false</enabled>\n\t\t\t</snapshots>\n\t\t</repository>\n\t\t<repository>\n\t\t\t<id>alibaba-opensource</id>\n\t\t\t<name>alibaba-opensource</name>\n\t\t\t<url>http://code.alibabatech.com/mvn/releases/</url>\n\t\t\t<layout>default</layout>\n\t\t</repository>\n\t\t<repository>\n\t\t\t<id>alibaba-opensource-snapshot</id>\n\t\t\t<name>alibaba-opensource-snapshot</name>\n\t\t\t<url>http://code.alibabatech.com/mvn/snapshots/</url>\n\t\t\t<layout>default</layout>\n\t\t</repository>\n\t</repositories>\n```","tags":["maven"]},{"title":"[maven] 解决包缺失","url":"/2019/06/23//articles/2019/06/23/1561296368000.html/","content":"<a href=\"https://blog.csdn.net/y532798113/article/details/79892950\" target=\"_blank\">Missing artifact com.oracle:ojdbc7:jar:12.1.0.1. 配置maven.pom.xml，ojdbc.jar包出错</a>\n\n方法步骤如下：\n```\n#Step 1:访问\nhttps://mvnrepository.com/artifact\n\n#Step 1：可去官网下载，直接搜ojdbc7.jar\nhttps://mvnrepository.com/artifact/com.oracle/ojdbc7/12.1.0.2\n\n#Step 2：安装到本地仓库\nmvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.2 -Dpackaging=jar -Dfile=ojdbc7-12.1.0.2.jar\n```\n\n```\noracle jdbc驱动 ojdbc14-10.2.0.4.0.jar\nhttps://pan.baidu.com/s/1Qkw2Gk0ZDasZUt_x7FK25Q\n密码:\nyx99\n\nmvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.1.0 -Dpackaging=jar -Dfile=ojdbc14.jar\n```","tags":["maven"]},{"title":"[oracle] 数据库语句大全","url":"/2019/06/23//articles/2019/06/23/1561296367000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/wangfuyou/p/5942723.html\" target=\"_blank\">Oracle 中用SQL语句创建和管理表</a>\n<a href=\"https://www.cnblogs.com/1312mn/p/7799732.html\" target=\"_blank\">Oracle 数据库常用操作语句大全</a>\n<a href=\"https://blog.csdn.net/karl_han_top/article/details/81624281\" target=\"_blank\">Oracle 数据库基本语句</a>\n<a href=\"https://www.cnblogs.com/xujiating/p/6337511.html\" target=\"_blank\">Oracle 中修改用户名和密码</a>\n```\nconn /as sysdba;\n#查看用户列表\nselect username from dba_users;\n#修改用户口令，格式：\nalter user <用户名> identified by <新密码>;\n#以system 为例，密码修改为 123456. 可输入\nalter user system identified by 123456;\n\n#SYS为用户名 Oracle11gpeng我的Oracle数据库密码\nalter user SYS identified by Oracle11gpeng;\n```\n\n数据库创建角色\n```\ncreate user test identified by test;\n#并给用户赋予权限\ngrant connect,resource,dba to test;\n```\n","tags":["oracle"]},{"title":"[oracle] 安装","url":"/2019/06/23//articles/2019/06/23/1561296366000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/sinat_27864435/article/details/74727425\" target=\"_blank\">oracle11g安装及用户创建与密码修改</a>\n<a href=\"https://blog.csdn.net/qq_21959403/article/details/80848690\" target=\"_blank\">oracle的instantClient的安装配置（都是64位）</a>\n```\n下载地址：（包含oracle数据库11g，instantclient，都是64位）\nhttps://pan.baidu.com/s/1-5lJl3CdJRF4zgjGSAj74Q\n密码：\nsnxr\n\n下载地址：（Navicat Premium 11.2.7  64位）\n链接：\nhttps://pan.baidu.com/s/1wKzv85LBohMk-R4B7Thg4A\n密码：\nneqn\n```","tags":["oracle"]},{"title":"[oracle] PLSQLDeveloper安装与配置","url":"/2019/06/23//articles/2019/06/23/1561296365000.html/","content":"<a href=\"https://www.cnblogs.com/yw0219/p/5818119.html\" target=\"_blank\">PL/SQL developer（绿色版）安装及配置</a>\nPLSQL Developer64.zip\n<a href=\"https://pan.baidu.com/s/1thWEm3v0_PLGDs94ZO4cKQ\" target=\"_blank\">w324</a>\n","tags":["oracle"]},{"title":"[oracle] navicat连接问题","url":"/2019/06/23//articles/2019/06/23/1561296364000.html/","content":"<a href=\"https://blog.csdn.net/tuesdayma/article/details/78216249\" target=\"_blank\">Navicat premium连接Oracle中遇到的一些问题</a>\n","tags":["oracle"]},{"title":"[linux] oracle","url":"/2019/06/23//articles/2019/06/23/1561296363000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_27050005/article/details/81479171\" target=\"_blank\">Linux环境下在docker中配置Oracle数据库并实现数据持久化</a>\n","tags":["linux"]},{"title":"[docker] oracle","url":"/2019/06/23//articles/2019/06/23/1561296362000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_38380025/article/details/80647620\" target=\"_blank\">Docker 拉取 oracle 11g镜像配置(镜像6.8G)</a>\n<a href=\"https://www.cnblogs.com/maoxianfei/p/9083426.html\" target=\"_blank\">Docker oracle部署使用</a>\n```\n0、搜索镜像：\ndocker search oracle\n1、开始拉取镜像-执行命令：\ndocker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n#查看镜像： \n#docker images\n2、创建容器\ndocker run -d -p 1521:1521 --name oracle11g registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\n3、启动容器 \ndocker start oracle11g\n4、进入镜像进行配置\n1)、 docker exec -it oracle11g bash\n2)、进行软连接\nsqlplus /nolog\n3)、切换root\nsu root\n密码：\nhelowin\n\n4)、编辑profile文件配置ORACLE环境变量\nexport ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2\nexport ORACLE_SID=helowin\nexport PATH=$ORACLE_HOME/bin:$PATH\n5)、创建软连接\nln -s $ORACLE_HOME/bin/sqlplus /usr/bin\n6)、切换到oracle 用户\nsu - oracle\n\n5、登录sqlplus并修改sys、system用户密码\nsqlplus /nolog\nconn /as sysdba\nalter user system identified by system;\nalter user sys identified by sys;\n\n也可以创建用户\ncreate user test identified by test;\n并给用户赋予权限\ngrant connect,resource,dba to test;\n\nalter database open;\nalter database mount;\nalter database open;\nALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;\nexit\n\n6、使用pl/sql 进行连接 第7步是navicat连接的在最后\n之前我们把端口映射到了1521上，所以我们需要进行配置 tnsnames.ora\n\nwindows宿主客户端\ntnsnames.ora\ndocker_oracle11 =\n (DESCRIPTION =\n   (ADDRESS_LIST =\n     (ADDRESS = (PROTOCOL = TCP)(HOST = 198.168.99.100 )(PORT = 1521))\n   )\n   (CONNECT_DATA =\n     (SERVICE_NAME = helowinXDB)\n   )\n)\n\n7、oracle 的 lsnrctl 服务\nlsnrctl status\n\n```\n\n<a href=\"https://blog.csdn.net/u010916338/article/details/81367551\" target=\"_blank\">instantclient</a>\n```\n1)plsql:oracle数据可视化工具,\n链接：\nhttps://pan.baidu.com/s/1ai-rtiR6tcNEjOg2sBZByQ\n密码：\no0qh\n2)instantclient:oracle数据库客户端,\n链接：\nhttps://pan.baidu.com/s/1o-mfZSbEdDldmIffh7lCYw\n提取码：\nxifh\n\n输入plsql永久注册码：\nProduct Code：4t46t6vydkvsxekkvf3fjnpzy5wbuhphqz\nserial Number：601769\npassword：xs374ca\n2)instantclient-basic-win-x86-64-11.2.0.1.0.zip直接解压\n创建文件夹:\ninstantclient_11_2\\NETWORK\\ADMIN\n创建文件:\ntnsnames.ora\n\n#配置环境变量\nNLS_LANG\n#配置写入\nAMERICAN_AMERICA.AL32UTF8\n#或 SIMPLIFIED CHINESE_CHINA.ZHS16GBK\n\nTNS_ADMIN\nD:\\instantclient_11\\network\\ADMIN\n```\n\n","tags":["docker"]},{"title":"[尚硅谷] vue","url":"/2019/06/23//articles/2019/06/23/1561296361000.html/","content":"<a href=\"https://github.com/newsixgod/gshop\" target=\"_blank\">尚硅谷外卖gshop day01 -> 05</a>\n\n","tags":["尚硅谷"]},{"title":"[尚硅谷] java汇总","url":"/2019/06/23//articles/2019/06/23/1561296360000.html/","content":"```\n重要的是可以参考lib的jar包\n```\n<a href=\"https://github.com/cyhbyw\" target=\"_blank\">github | cyhbyw</a>\n<a href=\"https://github.com/cyhbyw/mybatis_atguigu\" target=\"_blank\">mybatis</a>\n<a href=\"https://github.com/cyhbyw/spring4_atguigu_TongGang\" target=\"_blank\">spring4</a>\n<a href=\"https://github.com/cyhbyw/springMVC_atguigu_TongGang\" target=\"_blank\">springmvc</a>\n<a href=\"https://github.com/oldbiwang/SSM\" target=\"_blank\">尚硅谷视频教程 Spring + SpringMVC + Mybatis 整合实现 (CRUD) </a>\n<a href=\"https://github.com/cyhbyw/Spring4Annotation\" target=\"_blank\">Spring注释驱动开发视频教学源码</a>\n<a href=\"https://github.com/cyhbyw/JavaWEB_atguigu_TongGang\" target=\"_blank\">JavaWEB</a>\n<a href=\"https://github.com/cyhbyw/springBoot_atguigu\" target=\"_blank\">springboot</a>\n<a href=\"https://github.com/cyhbyw/jpa_atguigu_TongGang\" target=\"_blank\">jpa</a>\n<a href=\"https://github.com/cyhbyw/springCloud_atguigu_ZhouYang\" target=\"_blank\">springCloud</a>\n<a href=\"https://github.com/cyhbyw/SpringCloudInAction_ZhaiYongChao\" target=\"_blank\">经过整理的springcloud</a>\n","tags":["尚硅谷"]},{"title":"[尚硅谷] JavaEE","url":"/2019/06/23//articles/2019/06/23/1561296359000.html/","content":"<a href=\"http://www.atguigu.com/download.shtml#javaEE\" target=\"_blank\">JavaEE</a>\n","tags":["尚硅谷"]},{"title":"[题目] spring","url":"/2019/06/23//articles/2019/06/23/1561296358000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/hrbeuwhw/article/details/79476988\" target=\"_blank\">Spring面试题整理</a>\n<a href=\"https://blog.csdn.net/a745233700/article/details/80959716\" target=\"_blank\">Spring常见面试题总结（超详细回答）</a>\n\n","tags":["题目"]},{"title":"[题目] vue","url":"/2019/06/23//articles/2019/06/23/1561296357000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/fanlinqiang/p/7940379.html\" target=\"_blank\">vue 试题</a>\n<a href=\"https://blog.csdn.net/hlx20080808/article/details/82498285\" target=\"_blank\">Vue.js面试题整理</a>\n<a href=\"https://blog.csdn.net/weixin_39466493/article/details/88195892\" target=\"_blank\">2019前端面试题汇总（主要为Vue）</a>\n<a href=\"https://blog.csdn.net/RedaTao/article/details/80617514\" target=\"_blank\">2018前端VUE面试题总结</a>\n","tags":["题目"]},{"title":"[题目] java","url":"/2019/06/23//articles/2019/06/23/1561296356000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/goody9807/p/6425399.html\" target=\"_blank\">最近5年183个Java面试问题列表及答案［最全]</a>\n```\n类似于 Vector 与 Array 的区别、HashMap 与 Hashtable 的区别是最流行的问题\n```\n<a href=\"https://www.cnblogs.com/lgk8023/p/6427977.html\" target=\"_blank\">java基础面试题（Servlet生命周期）</a>\n```\n1.加载和实例化\n2.初始化\n3.请求处理\n4.服务终止\n```\n\n<a href=\"https://baijiahao.baidu.com/s?id=1590072788521344415&wfr=spider&for=pc\" target=\"_blank\">Java中Web应用生命周期，对应理解Servlet生命周期</a>\n<a href=\"https://www.cnblogs.com/java1024/p/8608063.html\" target=\"_blank\">100道Java基础面试题收集整理（附答案）</a>\n\nJava的数据结构有那些？\n```\n线性表（ArrayList）\n链表（LinkedList）\n栈（Stack）\n队列（Queue）\n图（Map）\n树（Tree）\n```\n\n你所了解的数据源技术有那些？使用数据源有什么好处？\n```\nDbcp,c3p0等，用的最多还是c3p0，因为c3p0比dbcp更加稳定，安全；通过配置文件的形式来维护数据库信息，而不是通过硬编码。当连接的数据库信息发生改变时，不需要再更改程序代码就实现了数据库信息的更新。\n```\n\n\n","tags":["题目"]},{"title":"[springcloud] demos","url":"/2019/06/22//articles/2019/06/22/1561217667000.html/","content":"<a href=\"https://gitee.com/itmuch/platform\" target=\"_blank\">github | platform</a>\n\n","tags":["springcloud"]},{"title":"[工具] vscode+插件","url":"/2019/06/20//articles/2019/06/20/1561028401000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qinze5857/article/details/86585232\" target=\"_blank\">vscode——详细总结篇、简单易懂debug</a>\n<a href=\"https://segmentfault.com/a/1190000006697219\" target=\"_blank\">vscode 插件推荐 - 献给所有前端工程师（2018.4.29更新）</a>\n","tags":["工具"]},{"title":"[react-native] react-native转小程序","url":"/2019/06/20//articles/2019/06/20/1560991857000.html/","content":"<a href=\"https://www.ctolib.com/areslabs-alita.html\" target=\"_blank\">react-native转小程序</a>\n```\nnpm install -g @areslabs/alita\n```","tags":["react-native"]},{"title":"[webpack] demos","url":"/2019/06/20//articles/2019/06/20/1560991856000.html/","content":"<a href=\"https://github.com/ruanyf/webpack-demos\" target=\"_blank\">webpack-demos</a>\n","tags":["webpack"]},{"title":"[react-native] react-native-navigation步步深入之配置篇","url":"/2019/06/20//articles/2019/06/20/1560991855000.html/","content":"<a href=\"https://www.jianshu.com/p/854c4a15b983\" target=\"_blank\">react-native-navigation步步深入之导航篇</a>\n<a href=\"https://www.jianshu.com/p/3e3382a3c189\" target=\"_blank\">react-native-navigation步步深入之配置篇</a>\n<a href=\"https://www.jianshu.com/p/f1e48336d1f4\" target=\"_blank\">React Native之react-navigation总结</a>\n","tags":["react-native"]},{"title":"[react-native] 修改代码刷新后不能更新的问题","url":"/2019/06/20//articles/2019/06/20/1560991854000.html/","content":"<a href=\"https://www.jianshu.com/p/89646dc10b15\" target=\"_blank\">react-native 修改代码刷新后不能更新的问题</a>\n```\nwatchman 会监听项目目录下的.lock文件, 所有解决办法如下:\n\n找出所有的.lock文件\nfind -name \"*.lock\" .\n删除之\n```","tags":["react-native"]},{"title":"[react-native] 微信分享","url":"/2019/06/20//articles/2019/06/20/1560991853000.html/","content":"<a href=\"https://www.jianshu.com/p/1e52e37f5a29\" target=\"_blank\">微信分享</a>\n","tags":["react-native"]},{"title":"[react-native] react-native热更新全方位讲解","url":"/2019/06/20//articles/2019/06/20/1560991852000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/8e08c7661275\" target=\"_blank\">react-native热更新全方位讲解</a>\n<a href=\"https://blog.csdn.net/dounine/article/details/78529106\" target=\"_blank\">3分钟完成React-Native热更新</a>\n\n```\nhttps://github.com/dounine/dounineApp\n```\n\n```\n1. 创建React-Native项目\nreact-native init dounineApp\n\n2. 安装code-push-cli\nnpm install -g code-push-cli\n\n3. 注册code-push帐号\ncode-push register\nPlease login to Mobile Center in the browser window we've just opened.\n\nEnter your token from the browser: \n#会弹出一个浏览器,让你注册,可以使用github帐号对其进行授权,授权成功会给一串Token,点击复制，在控制进行粘贴回车(或者使用code-push login命令)。\n\nEnter your token from the browser:  b0c9ba1f91dd232xxxxxxxxxxxxxxxxx\n#成功提示如下方\nSuccessfully logged-in. Your session file was written to /Users/huanghuanlai/.code-push.config. You can run the code-push logout command at any time to delete this file and terminate your session.\n\n4. 在code-push添加一个ios的app\n\n5. 继续在code-push添加一个android的app\n\n6. 在项目根目录添加react-native-code-push\nnpm install react-native-code-push --save\n#或者\nyarn add react-native-code-push\n\n7. link react-native-code-push\n\n8. 在react-native的App.js文件添加自动更新代码\n\n9. 运行项目在ios模拟器上\nreact-native run-ios\n\n10. 发布一个ios新版本\n\n11. 重新Load刷新应用\n\n12. 安卓发布，与上面9~11步骤是一样的，命令改成Android对应的,以下命令结果简化\n\n```\n","tags":["react-native"]},{"title":"[react-native] 从零搭建App","url":"/2019/06/20//articles/2019/06/20/1560991851000.html/","content":"<a href=\"https://juejin.im/post/5a9f93d96fb9a028d2077c19\" target=\"_blank\">React-Native从零搭建App（长文）</a>\n<a href=\"https://github.com/amandakelake/ReactNativeNavigationDemo\" target=\"_blank\">ReactNativeNavigationDemo</a>\n```\n核心库：React-Native@0.54.0 \n路由导航：React-Native-Navigation \n状态管理：Redux、Redux-Thunk、Redux-Saga、Redux-persist \n静态测试：Flow\n```\n\n","tags":["react-native"]},{"title":"[react-native] 美团","url":"/2019/06/20//articles/2019/06/20/1560991849000.html/","content":"<a href=\"https://www.jianshu.com/p/9211f42d5c25\" target=\"_blank\">高仿美团客户端 React-Native版，支持iOS、Android</a>\n<a href=\"https://github.com/huanxsd/MeiTuan\" target=\"_blank\">github | MeiTuan</a>\n```\nyarn install\nreact-native run-android\n```","tags":["react-native"]},{"title":"[react-native] genymotion","url":"/2019/06/20//articles/2019/06/20/1560991848000.html/","content":"<a href=\"https://www.cnblogs.com/jlj9520/p/9239770.html\" target=\"_blank\">React-Native + Genymotion android开发环境搭建</a>\n```\n添加环境变量，路径时\nANDROID_HOME\nD:\\Android\\android-sdk-windows\nPATH\n%ANDROID_HOME%\\tools\n%ANDROID_HOME%\\platform-tools\n```","tags":["react-native"]},{"title":"[js] 遍历子节点","url":"/2019/06/20//articles/2019/06/20/1560991846000.html/","content":"<a href=\"https://www.cnblogs.com/layaling/p/8583613.html\" target=\"_blank\">javascript DOM操作 节点的遍历</a>\n```html\n<ul id=\"myul\">\n    <li>1</li>\n    <li>2</li>\n    <li>3</li>\n    <li>4</li>\n</ul>\n```\n\n```js\nvar ul=document.getElementById('myul');\nfor(var i=0;i<ul.childNodes.length;i++){\n    console.log(ul.childNodes[i]);\n}\n```\n","tags":["js"]},{"title":"[js] 获取form下的input值","url":"/2019/06/20//articles/2019/06/20/1560991845000.html/","content":"<a href=\"https://www.cnblogs.com/liyuspace/p/8302041.html\" target=\"_blank\">js获取form下的input值</a>\n```js\nvar _form = document.getElementById('targetFormId');\nvar inputs = _form.getElementsByTagName('inputName');\n\nconsole.log(inputs[0].value);\n\n//或\n_form.childNodes;\n```\n","tags":["js"]},{"title":"[js] 判断{}","url":"/2019/06/20//articles/2019/06/20/1560991844000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\nvar c = {};\nif(JSON.stringify(c) == \"{}\"){\n\tconsole.log(\"c为空对象\");\n}\n```","tags":["js"]},{"title":"[springboot] vm代码生成模板","url":"/2019/06/20//articles/2019/06/20/1560991380000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://www.jianshu.com/p/d0daae7184b8\" target=\"_blank\">MyBatis-Plus-Generator配置</a>\n<a href=\"https://www.cnblogs.com/lianggp/p/7573653.html\" target=\"_blank\">spring boot整合mybatis+mybatis-plus</a>\n\n<a href=\"https://gitee.com/lgqBlog/boot_demo\" target=\"_blank\">gitee boot_demo</a>\n<a href=\"https://gitee.com/lgqBlog/cloud_demo\" target=\"_blank\">gitee cloud_demo</a>\n\n<a href=\"https://mp.baomidou.com/guide/generator.html#使用教程\" target=\"_blank\">官方</a>\n<a href=\"https://blog.csdn.net/m0_37754981/article/details/80451300\" target=\"_blank\">SpringBoot+MybatisPlus+代码生成器整合(真正让你专心做业务)</a>\n<a href=\"https://github.com/LinQiHong66/SpringBoot_MybatisPlus.git\" target=\"_blank\">springboot+mybatis+plus</a>\n<a href=\"http://mp.baomidou.com/#/\" target=\"_blank\">mybatisPlus官网</a>\n","tags":["springboot"]},{"title":"[蓝湖] 切图使用教程","url":"/2019/06/20//articles/2019/06/20/1560991379000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://sos.lanhuapp.com/quick_view.html#sketch-插件\" target=\"_blank\">官方使用教程</a>\n<a href=\"http://help.lanhuapp.com/hc/kb/section/1011531/\" target=\"_blank\">http://help.lanhuapp.com</a>\n```\n一.上传设计图\n二. 设计图树状连线\n三. 自动标注\n四.一键切图\n五.制作交互原型\n六.产品文档共享\n七.项目资源库管理\n八.蓝湖手机 APP\n```","tags":["蓝湖"]},{"title":"[redis] 开启","url":"/2019/06/20//articles/2019/06/20/1560991378000.html/","content":"<a href=\"https://www.cnblogs.com/kevin-yang123/p/9946808.html\" target=\"_blank\">windows下安装 redis并开机自启动</a>\n<a href=\"https://github.com/ServiceStack/redis-windows\" target=\"_blank\">redis-windows</a>\n```\nredis-cli.exe\nshutdown\nexit\nredis-server.exe redis.windows.conf\n\n#开机自启动\nredis-server --service-install redis.windows-service.conf --loglevel verbose\n```","tags":["redis"]},{"title":"[ps] 安装","url":"/2019/06/20//articles/2019/06/20/1560991377000.html/","content":"<a href=\"https://www.cnblogs.com/hnsongbiao/p/9076533.html\" target=\"_blank\">日期比较大小，js判断日期是否在区间内，js判断时间段是否在另外一个时间段内</a>\n\n<a href=\"\" target=\"_blank\"></a>\n<a href=\"http://www.ddooo.com/softdown/143437.htm\" target=\"_blank\">photoshop cc 2019 64位茶末余香增强直装版 v20.0.2</a>\n```\n注意断网安装\n```\n\n<a href=\"https://blog.csdn.net/qq_35379989/article/details/83446544\" target=\"_blank\">Adobe CC2019全家桶安装、破解器+安装PS（Photoshop报错 错误代码：127）</a>\n```\nphotoshop2019\nhttps://pan.baidu.com/s/1wEAXO5yVgaZELTtg1HVfoQ\n\nps教程\nhttps://pan.baidu.com/s/1v7KEBfAFQaKvXeSYNP7Njw\nkdq4\n```\n<a href=\"http://www.ddooo.com/softdown/69400.htm\" target=\"_blank\">photoshop cc2015破解版 32&64位</a>\n","tags":["ps"]},{"title":"[js] 判断时间范围","url":"/2019/06/20//articles/2019/06/20/1560991376000.html/","content":"<a href=\"https://www.cnblogs.com/hnsongbiao/p/9076533.html\" target=\"_blank\">日期比较大小，js判断日期是否在区间内，js判断时间段是否在另外一个时间段内</a>\n```\nvar isNowBetweenTime = function (beginTime, endTime) {\n  var strb = beginTime.split (\":\");\n  if (strb.length != 2) {\n      return false;\n  }\n\n  var stre = endTime.split (\":\");\n  if (stre.length != 2) {\n      return false;\n  }\n\n  var b = new Date ();\n  var e = new Date ();\n  var n = new Date ();\n\n  b.setHours (strb[0]);\n  b.setMinutes (strb[1]);\n  e.setHours (stre[0]);\n  e.setMinutes (stre[1]);\n\n  if (n.getTime () - b.getTime () > 0 && n.getTime () - e.getTime () < 0) {\n      return true;\n  } else {\n      return false;\n  }\n}\n\nisNowBetweenTime(\"06:00\", \"17:00\");\n```","tags":["js"]},{"title":"[小程序] demo+百度天气api","url":"/2019/06/20//articles/2019/06/20/1560985203000.html/","content":"<a href=\"https://blog.csdn.net/michael_f2008/article/details/86600399\" target=\"_blank\">利用百度地图天气API开发微信小程序</a>\n\n完整代码：GItHub项目地址\n```\nhttps://github.com/MichaelLee826/weather_forecast\n```","tags":["小程序"]},{"title":"[小程序] 倒计时","url":"/2019/06/20//articles/2019/06/20/1560985202000.html/","content":"<a href=\"https://blog.csdn.net/charles_tian/article/details/80669221\" target=\"_blank\">微信小程序用定时器实现倒计时效果</a>\n<a href=\"https://www.cnblogs.com/wangyihong/p/8656121.html\" target=\"_blank\">小程序倒计时插件</a>\n<a href=\"https://github.com/baqihg/wxTimer\" target=\"_blank\">github | wxTimer</a>\n<a href=\"https://gitee.com/dotton/CountDown\" target=\"_blank\">github | CountDown</a>\ncountDown.wxml\n```\n<text style=\"display: block;text-align: center;font-size: 30px;color: #f60;margin-top: 50px;\">\n\t{{clock}} {{micro_second}}\n</text>\n```\ncountDown.js\n```\n/** \n * 需要一个目标日期，初始化时，先得出到当前时间还有剩余多少秒\n * 1.将秒数换成格式化输出为XX天XX小时XX分钟XX秒 XX\n * 2.提供一个时钟，每10ms运行一次，渲染时钟，再总ms数自减10\n * 3.剩余的秒次为零时，return，给出tips提示说，已经截止\n */\n\n// 定义一个总毫秒数，以一分钟为例。TODO，传入一个时间点，转换成总毫秒数\nvar total_micro_second = 10000 * 1000;\n\n/* 毫秒级倒计时 */\nfunction count_down(that) {\n  \t// 渲染倒计时时钟\n  \tthat.setData({\n  \t\tclock:date_format(total_micro_second)\n  \t});\n\n  \tif (total_micro_second <= 0) {\n  \t\tthat.setData({\n  \t\t\tclock:\"已经截止\"\n  \t\t});\n  \t\t// timeout则跳出递归\n  \t\treturn ;\n  \t}    \n  \tsetTimeout(function(){\n    \t// 放在最后--\n\t\ttotal_micro_second -= 10;\n\t\tcount_down(that);\n\t}\n\t,10)\n}\n\n// 时间格式化输出，如03:25:19 86。每10ms都会调用一次\nfunction date_format(micro_second) {\n  \t// 秒数\n  \tvar second = Math.floor(micro_second / 1000);\n  \t// 小时位\n  \tvar hr = Math.floor(second / 3600);\n  \t// 分钟位\n  \tvar min = fill_zero_prefix(Math.floor((second - hr * 3600) / 60));\n  \t// 秒位\n\tvar sec = fill_zero_prefix((second - hr * 3600 - min * 60));// equal to => var sec = second % 60;\n\t// 毫秒位，保留2位\n\tvar micro_sec = fill_zero_prefix(Math.floor((micro_second % 1000) / 10));\n\n\treturn hr + \":\" + min + \":\" + sec + \" \" + micro_sec;\n}\n\n// 位数不足补零\nfunction fill_zero_prefix(num) {\n\treturn num < 10 ? \"0\" + num : num\n}\n\nPage({\n\tdata: {\n\t\tclock: ''\n\t},\n\tonLoad: function() {\n\t\tcount_down(this);\n\t}\n});\n```","tags":["小程序"]},{"title":"[小程序] 自定义组件+slot","url":"/2019/06/20//articles/2019/06/20/1560985201000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/c90138314ec8\" target=\"_blank\">微信小程序自定义组件</a>\n<a href=\"https://www.jianshu.com/p/4db2b570549d\" target=\"_blank\">页面与自定义组件数据通信</a>\n<a href=\"https://www.cnblogs.com/storebook/p/8111618.html\" target=\"_blank\">ylbtech-小程序：自定义组件</a>\n<a href=\"https://www.cnblogs.com/moxiaowohuwei/p/8421351.html\" target=\"_blank\">微信小程序中的自定义组件|dialog</a>\n<a href=\"https://blog.csdn.net/rolan1993/article/details/78801052/\" target=\"_blank\">手把手教你实现小程序中的自定义组件</a>\n<a href=\"https://blog.csdn.net/qq_23375733/article/details/81274955\" target=\"_blank\">微信小程序 自定义组件之《转盘》</a>\n<a href=\"https://github.com/hujinchen/zhuanpan2.0\" target=\"_blank\">github | 转盘组件 | zhuanpan2.0</a>\n<a href=\"https://blog.csdn.net/github_39460543/article/details/79168481\" target=\"_blank\">小程序之自定义组件笔记</a>\n\n组件样式\n```\n组件内的样式完全独立，不继承全局样式（app.wxss）以及页面样式。所以有用到字体图标需要重新引用\n```\n\n<a href=\"https://www.jianshu.com/p/c90138314ec8\" target=\"_blank\">微信小程序自定义组件</a>\n```\n  attached: function () {\n    console.log(this.properties.fromPage);\n    console.log(this.data.fromPage); //用data也能访问properties\n    //设置properties值用setData()\n    this.setData({\n      fromPage: '改变了'\n    });\n    console.log(this.properties.fromPage);\n    //通过dataset获取data-other的值\n    console.log(this.dataset.other);\n  },\n```\n\n\n```\n#控制台打印\n\n来自Page\n来自Page\n改变了\nfrom dataset\n```\n\n","tags":["小程序"]},{"title":"[小程序] 资源汇总","url":"/2019/06/20//articles/2019/06/20/1560985200000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/justjavac/awesome-wechat-weapp\" target=\"_blank\">awesome-wechat-weapp</a>\n<a href=\"https://youzan.github.io/vant-weapp/#/intro\" target=\"_blank\">有赞 小程序组件</a>\n<a href=\"https://github.com/youzan/vant-weapp\" target=\"_blank\">github | vant-weapp</a>\n\n<a href=\"https://pan.baidu.com/s/1B4hR-kZeH4Z0mwNI4yjKeQ#list/path=%2F\" target=\"_blank\">200多小程序源码后台+前端.rar</a>\n<a href=\"https://pan.baidu.com/share/init?surl=pSB9ujS4hPXl5JZP3GB9gw\" target=\"_blank\">efd8</a>\n<a href=\"http://www.lilaiqun.com/article-17\" target=\"_blank\">130个免费 微信小程序源码分享</a>\n<a href=\"https://blog.csdn.net/fenxiangjun/article/details/54429666\" target=\"_blank\">史上最全的微信小程序代码大全</a>\n\n","tags":["小程序"]},{"title":"[数据库] 性能调优","url":"/2019/06/19//articles/2019/06/19/1560905430000.html/","content":"<a href=\"https://blog.csdn.net/qq_29229567/article/details/90665150\" target=\"_blank\">性能调优</a>\n","tags":["数据库"]},{"title":"[面试] springboot+spring面试题","url":"/2019/06/19//articles/2019/06/19/1560905429000.html/","content":"<a href=\"https://blog.csdn.net/qq_29229567/article/details/89209719\" target=\"_blank\">SpringBoot：简述SpringBoot和Spring的区别</a>\n<a href=\"https://mp.weixin.qq.com/s/0qk2kaCKLdAViVzsw401sg\" target=\"_blank\">面试官：spring boot和spring究竟有啥区别？</a>\n\n","tags":["面试"]},{"title":"[springcloud] 《Spring Cloud与Docker微服务架构实战 第二版》的配套代码","url":"/2019/06/19//articles/2019/06/19/1560905428000.html/","content":"<a href=\"http://www.itmuch.com/\" target=\"_blank\">博客</a>\n<a href=\"https://gitee.com/itmuch/spring-cloud-docker-microservice-book-code\" target=\"_blank\">1-11章配套代码</a>\n<a href=\"https://gitee.com/itmuch/spring-cloud-docker-microservice-book-code-docker\" target=\"_blank\">12-14章配套代码</a>\n","tags":["springcloud"]},{"title":"[springboot] mybaits-plus+redis+mysql+vue","url":"/2019/06/19//articles/2019/06/19/1560905427000.html/","content":"<a href=\"http://www.zuidaima.com/share/4400293622270976.htm\" target=\"_blank\">springboot2.0+mybaits-plus+redis+mysql+vue实现用户数据的增删改查简单实例</a>\n\n项目描述\n```\n使用sprinboot2.x作为基础整合框架\n加入mybaits-plus\n前台页面渲染使用vue\n加整合redis来做缓存\n实现了普通的增删改查\n上传文件\n```\n\n运行环境\n```\njdk8+tomcat9+mysql+IntelliJ IDEA+maven\n```\n项目技术(必填)\n```\nspringboot2.0+mybaits-plus+redis+mysql+vue\n```\n数据库文件\n```\n链接：\nhttps://pan.baidu.com/s/138dEvM1vByyaawvtA2t5wQ \n提取码：\nokp5\n```\n\njar包文件\n```\n链接：\nhttps://pan.baidu.com/s/1048d4hLFZbtENa-QbGSmEA \n提取码：\nzu97 \n```","tags":["springboot"]},{"title":"[servlet] demos","url":"/2019/06/19//articles/2019/06/19/1560905426000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"http://www.zuidaima.com/share/4084545535953920.htm\" target=\"_blank\">黑马旅游网</a>\n<a href=\"https://blog.csdn.net/weixin_38214171/article/details/85203831\" target=\"_blank\">博客</a>\n<a href=\"https://github.com/yangchaoy259189888/Travel\" target=\"_blank\">github</a>\n\n\n<a href=\"https://pan.baidu.com/s/14we3cG3rKHWX7O5IuTvp_g\" target=\"_blank\">一</a>\n<a href=\"https://pan.baidu.com/s/1J3XxFGXquyBnQQNAG5ZbMA\" target=\"_blank\">二</a>\n\n<a href=\"https://blog.csdn.net/weixin_38214171/article/details/84981421\" target=\"_blank\">学生信息管理系统（基于JSP+Servlet+Druid数据库连接池）</a>\n<a href=\"https://github.com/yangchaoy259189888/Student_Info_ManageSystem\" target=\"_blank\">Student_Info_ManageSystem</a>\n\n\n<a href=\"https://blog.csdn.net/weixin_38214171/article/details/81236759\" target=\"_blank\">C语言实现贪吃蛇（洗牌算法 && 循环数组 && 二维坐标与一维坐标的转化）</a>\ngithub 源码地址\n<a href=\"https://github.com/yangchaoy259189888/Gluttonous-Snake/\" target=\"_blank\">单人版</a>\n<a href=\"https://github.com/yangchaoy259189888/Gluttonous-Snake-Double-against/\" target=\"_blank\">双人版（做了一点点优化）</a>\n","tags":["servlet"]},{"title":"[python] 商城后台管理系统","url":"/2019/06/19//articles/2019/06/19/1560905425000.html/","content":"<a href=\"https://github.com/Ylisen/dailyfresh-B2C\" target=\"_blank\">python商城后台管理系统</a>\n","tags":["python"]},{"title":"[mysql] 报错问题解决","url":"/2019/06/19//articles/2019/06/19/1560905424000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\nmysql的时区错误问题： The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized or represents more than one\n\n解决方案:\n```\nshow variables like '%time_zone%';\nset global time_zone='+8:00';\n```\n","tags":["mysql"]},{"title":"[mpvue] 小程序","url":"/2019/06/19//articles/2019/06/19/1560905423000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/u/d0dea96b2432\" target=\"_blank\">一斤代码</a>\n<a href=\"https://www.jianshu.com/p/6f8d74be3ff8\" target=\"_blank\">一斤代码 - 使用mpvue开发小程序教程（一）</a>\n\nmpvue\n<a href=\"https://github.com/aierong/vantweappmpvuedemo\" target=\"_blank\">mpvue中使用Vant Weapp</a>\n<a href=\"https://github.com/aierong/helpmempvue\" target=\"_blank\">mpvue实现帮助我</a>\n<a href=\"https://www.jianshu.com/p/b7e6b7445523\" target=\"_blank\">使用mpvue开发小程序</a>\n<a href=\"https://github.com/zkl904/mpvueFX.git\" target=\"_blank\">demo github地址</a>\n\n```\n小程序文档地址:  https://mp.weixin.qq.com/debug/wxadoc/dev/index.html\n小程序平台登陆:  https://mp.weixin.qq.com/\n小程序开发者工具下载;  https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\n获取appid 以及 appsecret:  https://mp.weixin.qq.com/wxopen/devprofile?action=get_profile&token=674021264&lang=zh_CN\n\n这三个步骤填写完成后 进入小程序平台,\n1. 填好小程序信息\n2. 添加相应的开发者\n3. 下载好开发者工具\n小程序开发者工具下载; https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\n\n使用mpvue 进行小程序的开发\nvue官网: https://cn.vuejs.org/\nmpvue官网:  http://mpvue.com/\nmpvue项目合集:  https://github.com/Meituan-Dianping/mpvue/issues/21\nmpvue中出现的一些问题以及相应的解决方法:  https://github.com/Meituan-Dianping/mpvue/issues\nmpvue组件工具合集:  \nhttps://github.com/mpvue/awesome-mpvue\n```\n","tags":["mpvue"]},{"title":"[jdk8] jdk8.zip","url":"/2019/06/19//articles/2019/06/19/1560905422000.html/","content":"<a href=\"https://www.cr173.com/soft/33894.html\" target=\"_blank\">jdk8.zip</a>\n<a href=\"http://xzd.197946.com/jdk8u202x64.zip\" target=\"_blank\">jdk8.zip</a>\n","tags":["jdk8"]},{"title":"[java] PageHelper","url":"/2019/06/19//articles/2019/06/19/1560905421000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/nb/5226994\" target=\"_blank\">简书 | 聊聊MyBatis</a>\n<a href=\"https://www.cnblogs.com/ljdblog/p/6725094.html\" target=\"_blank\">Mybatis分页插件PageHelper简单使用</a>\n<a href=\"https://segmentfault.com/a/1190000012165448\" target=\"_blank\">SpringBoot之分页PageHelper</a>\n\n\n<a href=\"https://www.jianshu.com/p/8b545a537fd0\" target=\"_blank\">dalaoyang | SpringBoot+Mybatis+MySql学习</a>\n<a href=\"https://www.jianshu.com/p/48b190bf08fe\" target=\"_blank\">dalaoyang | SpringBoot使用Mybatis-PageHelper</a>\n\n<a href=\"https://blog.csdn.net/qq_37244513/article/details/83389244\" target=\"_blank\">SpringBoot2.x _ 分页插件PageHelper</a>\n\n<a href=\"https://gitee.com/beany/mySpringBoot\" target=\"_blank\">github | 从零搭建自己的springboot后台框架 | mySpringBoot</a>\n","tags":["java"]},{"title":"[api] 城市经纬度查询","url":"/2019/06/19//articles/2019/06/19/1560905420000.html/","content":"<a href=\"https://jingwei.supfree.net\" target=\"_blank\">城市经纬度查询</a>\n","tags":["api"]},{"title":"[小程序] 搜索组件","url":"/2019/06/19//articles/2019/06/19/1560905419000.html/","content":"<a href=\"\" target=\"_blank\"></a>\ncomponent版\n<a href=\"https://www.jianshu.com/p/c5e9c5ae861d\" target=\"_blank\">搜索框组件之SearchBar</a>\n<a href=\"https://github.com/fancaixia/SearchBar\" target=\"_blank\">github | SearchBar</a>\n\ntemplate版\n<a href=\"https://blog.csdn.net/fgdfgasd/article/details/80519546\" target=\"_blank\">searchUI-微信小程序 搜索插件</a>\n<a href=\"https://github.com/mrzhang90/searchUI\" target=\"_blank\">github | searchUI | 搜索组件</a>\n\ntemplate版\n<a href=\"https://www.jianshu.com/p/5c1fc51bdfc3\" target=\"_blank\">搜索组件wxSearch</a>\n<a href=\"https://github.com/icindy/wxSearch\" target=\"_blank\">github | wxSearch</a>\n<a href=\"github.com/mindawei/wsSearchView\" target=\"_blank\">搜索组件wxSearch demo | wsSearchView</a>\n","tags":["小程序"]},{"title":"[小程序] 输入限制","url":"/2019/06/19//articles/2019/06/19/1560905418000.html/","content":"<a href=\"https://blog.csdn.net/xiaoyanyanlh/article/details/83115686\" target=\"_blank\">微信小程序文本框限制输入字数</a>\n```\n<input password=\"true\" maxlength=\"6\" placeholder=\"请输入密码\" />\n```\n","tags":["小程序"]},{"title":"[jar] ssh三大框架整合jar包","url":"/2019/06/19//articles/2019/06/19/1560905417000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/userkdg/ssh-shop/blob/master/shop/build/web/WEB-INF/lib\" target=\"_blank\">lib</a>\n<a href=\"https://blog.csdn.net/qq_33547950/article/details/52511598\" target=\"_blank\">ssh三大框架整合jar包说明（下载链接失效）</a>\n<a href=\"https://www.cnblogs.com/kaige123/p/5719662.html\" target=\"_blank\">SSH框架整合配置所需JAR包(SSH整合)</a>\n\n<a href=\"http://www.liangchan.net/liangchan/8937.html\" target=\"_blank\">ssh.rar jar包说明</a>\n<a href=\"http://down.liangchan.net/ssh.rar\" target=\"_blank\">ssh.rar</a>\n\n<a href=\"https://www.cnblogs.com/convict/p/9795476.html\" target=\"_blank\">maven下使用jstl标签(1.2)版本</a>\n<a href=\"https://mvnrepository.com/artifact/jstl/jstl/1.2\" target=\"_blank\">jstl/1.2</a>\n\n<a href=\"https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp/1.2.2\" target=\"_blank\">org.apache.commons.dbcp.BasicDataSource 在commons-dbcp.jar包中</a>\n","tags":["jar"]},{"title":"[小程序] 热门组件","url":"/2019/06/19//articles/2019/06/19/1560905416000.html/","content":"<a href=\"http://www.ifanr.com/minapp/1196588\" target=\"_blank\">7 个热门又优质 社区、电商、工具 类组件库</a>\n\n```\nhttps://github.com/Tencent/weui\nhttps://github.com/weilanwl/ColorUI\n\n开发文档：https://youzan.github.io/vant-weapp/#/intro\nhttps://github.com/youzan/vant-weapp\n\n开发文档：https://weapp.iviewui.com/docs/guide/start\nhttps://github.com/TalkingData/iview-weapp\n\n开发文档：https://meili.github.io/min/docs/minui/index.html#README\nhttps://github.com/meili/min-cli\n\n开发文档：https://taro-ui.aotu.io/#/docs/introduction\nhttps://github.com/NervJS/taro-ui\n\n开发文档：https://wux-weapp.github.io/wux-weapp-docs/#/introduce\nhttps://github.com/wux-weapp/wux-weapp/\n\n```\n","tags":["小程序"]},{"title":"[小程序] 解决富文本rich-text无法多个空格问题","url":"/2019/06/19//articles/2019/06/19/1560905415000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/weixin_41819731/article/details/86099142\" target=\"_blank\">小程序富文本rich-text无法多个空格的问题</a>\n```\n修改 wxDiscode.js 文件的 strcharacterDiscode 方法中\nstr = str.replace(/&nbsp;/g, ' ');\n替换为 str = str.replace(/&nbsp;/g, '\\xa0');\n```\n","tags":["小程序"]},{"title":"[小程序] wxss样式","url":"/2019/06/19//articles/2019/06/19/1560905413000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/83b85f321570\" target=\"_blank\">微信小程序 wxss样式</a>\n\n","tags":["小程序"]},{"title":"[小程序] js空判断","url":"/2019/06/19//articles/2019/06/19/1560905412000.html/","content":"<a href=\"https://www.jianshu.com/p/aa85568538b7\" target=\"_blank\">js空判断</a>\n","tags":["小程序"]},{"title":"[小程序] iphone样式适配","url":"/2019/06/19//articles/2019/06/19/1560905411000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\ndisplay:-webkit-box;display:-webkit-flex;display:flex\n```\n\n```\ndisplay: flex;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\n\njustify-content: space-between;\n-webkit-justify-content: space-between;\n\nflex-wrap: wrap;\n-webkit-flex-wrap: wrap;\n```\n","tags":["小程序"]},{"title":"[小程序] iphone时间格式显示NaN的问题","url":"/2019/06/19//articles/2019/06/19/1560905410000.html/","content":"【注意】\n```\n经过实践，这个NaN问题，并非一定是iphone兼容问题\n```\n\n<a href=\"https://blog.csdn.net/weixin_44594850/article/details/88574289\" target=\"_blank\">发现是因为ios设备不支持new Date(time)的这个time格式为yyyy-mm-dd,必须要转换成\"/\"</a>\n<a href=\"https://www.jianshu.com/p/da28fb55eab2\" target=\"_blank\">小程序日期时间在ios系统上显示为NaN问题</a>\n```\nlet date = '2019-01-02 10:58:14';\ndate.replace(new RegExp('-', 'g'), '/');\n\ndate = date ? new Date(date) : new Date();\nconst year = date.getFullYear();\nconst mounth = (date.getMonth() + 1).toString().padStart(2, '0');\nconst day = date.getDate().toString().padStart(2, '0');\n```","tags":["小程序"]},{"title":"[小程序] github","url":"/2019/06/19//articles/2019/06/19/1560905409000.html/","content":"<a href=\"https://github.com/mrzhang90\" target=\"_blank\">github | mrzhang90</a>\n","tags":["小程序"]},{"title":"[小程序] dialog组件","url":"/2019/06/19//articles/2019/06/19/1560905408000.html/","content":"<a href=\"https://www.cnblogs.com/bgwhite/p/9272796.html\" target=\"_blank\">dialog组件</a>\n","tags":["小程序"]},{"title":"[react] demos","url":"/2019/06/19//articles/2019/06/19/1560905405000.html/","content":"<a href=\"https://www.jianshu.com/p/5da35f504aef\" target=\"_blank\">来自一位react新手的react入门须知</a>\n<a href=\"https://github.com/Cathy0807/react\" target=\"_blank\">基于Reactjs && Node 通讯的简单演示</a>\n```\nReactjs && ES6 && webpack构建移动端京东首页\n基于文件系统的Node.js服务端\n```\n\n<a href=\"https://github.com/weui/react-weui\" target=\"_blank\">react-weui</a>\n<a href=\"https://github.com/duxianwei520/react\" target=\"_blank\">React+webpack+redux+ant design+axios+less全家桶后台管理框架</a>\n<a href=\"https://www.jianshu.com/p/211ecf8ed34e\" target=\"_blank\">简书 | react新手demo——TodoList</a>\n\n<a href=\"http://react-china.org/t/react-demo/24011\" target=\"_blank\">技术栈 ： React + Antd + React Router</a>\n<a href=\"https://github.com/Hi-Sen/React-Antd-demo-one\" target=\"_blank\">github源码</a>\n```\n1，常用 UI 框架 Antd 的表格，表单，标签页，轮播，layOut布局，栅格布局等\n2，Axios 基于 ES6 Promise 的网络请求，操作，渲染，以及传值\n3，在 React demo 中使用 echarts 图表，例子有柱形，折现，饼图，雷达等\n4，使用了 WangEditor 富文本编辑器，\n5，其它连接 echarts 柱形+折线 27 , cell 自动生成 13   , 进度条 8  ，vue 入门 8\n```\n\ndemo1 ~ demo13\n<a href=\"https://github.com/ruanyf/react-demos\" target=\"_blank\">react-demos</a>\n<a href=\"https://github.com/darrell0904/webapp-dazhongdianping\" target=\"_blank\">react大众点评</a>\n```\n用到redux，mock，fetch，es6\n```\n\n<a href=\"https://github.com/darrell0904/react-news\" target=\"_blank\">基于ant-design的框架写的一个简易新闻页面</a>\n\n<a href=\"https://www.jianshu.com/p/ebb42c6bf674\" target=\"_blank\">简书 | react-demos</a>\n<a href=\"https://github.com/ruanyf/react-demos\" target=\"_blank\">github | react-demos</a>\n\n<a href=\"http://react-china.org/t/react-demo/24011\" target=\"_blank\">React - Demo</a>\n```\n技术栈 ： React + Antd + React Router\n```\n<a href=\"https://github.com/Hi-Sen/React-Antd-demo-one\" target=\"_blank\">React-Antd-demo-one</a>\n","tags":["react"]},{"title":"[css] height 100%和height inherit的异同","url":"/2019/06/19//articles/2019/06/19/1560905404000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/zhanghuihuihappy/article/details/51009604\" target=\"_blank\">css 只改变父元素的透明度，不改变子元素透明度rgba+opacity</a>\n```\n给元素加透明度时，通常写法为：opacity:0.5,filter:alpha(opacity=50);\n\n我们通常也会遇到，在给父元素背景设置透明度时，子元素内容继承了父元素的透明度。\n\n如何让子元素脱离父元素的透明度？有如下几种方法：\n\n1.父元素div，直接使用透明度的图片做背景。\n\n2.父元素div（设置为相对定位），兄弟div1（设置为绝对定位）背景正常加透明度即可，兄弟div2（设置为绝对定位），层级关系高于div1即可。\n\n3.利用CSS3属性rgba（即red+green+blue+alpha的颜色），例如background-color:rgba(0,0,0,0.5)\n\n但是IE7/8不支持此属性，可按如下方法写：\n\n父元素div要写如下：background-color: rgba(0,0,0,0.5)!important;background-color: #000;filter:Alpha(opacity=50);\n\n子元素div加个定位position:absolute/relative即可\n```\n","tags":["css"]},{"title":"[css] 盒模型","url":"/2019/06/19//articles/2019/06/19/1560905403000.html/","content":"<a href=\"https://www.cnblogs.com/chengzp/p/cssbox.html\" target=\"_blank\">深入理解CSS盒模型</a>\n","tags":["css"]},{"title":"[css] sass、less 、stylus比较","url":"/2019/06/19//articles/2019/06/19/1560905402000.html/","content":"<a href=\"https://blog.csdn.net/qq_29229567/article/details/90287363\" target=\"_blank\">三个 CSS 预处理器(框架)-Sass、LESS 和 Stylus的比较</a>\n\n","tags":["css"]},{"title":"[css] iphone样式适配","url":"/2019/06/19//articles/2019/06/19/1560905401000.html/","content":"<a href=\"https://segmentfault.com/p/1210000012391116/read\" target=\"_blank\">segmentfault | 作为前端你必须知道的iPhoneX适配</a>\n<a href=\"https://www.jianshu.com/p/e85f2ebefdac\" target=\"_blank\">移动端 H5 尽量不要使用 position: fixed</a>\n```\n苹果会对position: fixed的元素位置做调整，这件事情已经遇到两次了。\n```","tags":["css"]},{"title":"[css] height 100%和height inherit的异同","url":"/2019/06/19//articles/2019/06/19/1560905400000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.zhangxinxu.com/wordpress/2015/02/different-height-100-height-inherit/\" target=\"_blank\">CSS中height:100%和height:inherit的异同</a>\n","tags":["css"]},{"title":"[css] fixed垂直居中","url":"/2019/06/19//articles/2019/06/19/1560905399000.html/","content":"<a href=\"https://blog.csdn.net/viqecel/article/details/52902596\" target=\"_blank\">css position: fixed; 垂直居中,绝对定位居中</a>\n```\n.boxout{\n\tbackground:#fff;\n\tbox-shadow: 0 1px 4px #AAA;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n\n    /* 注意,201表示高度的一半,480也是按自己需要自己调整*/\n    margin: -201px 0 0 -480px;\n    width:960px;\n    height:402px;\n\n    padding:15px;\n}\n```","tags":["css"]},{"title":"[css] calc","url":"/2019/06/19//articles/2019/06/19/1560905398000.html/","content":"<a href=\"https://blog.csdn.net/qiphon3650/article/details/80859405\" target=\"_blank\">css3 中的calc用法</a>\n<a href=\"https://www.html.cn/book/css/values/functional/calc().htm\" target=\"_blank\">CSS calc() 函数</a>\n<a href=\"https://www.cnblogs.com/wangchunlin/p/6782419.html\" target=\"_blank\">css calc</a>\n","tags":["css"]},{"title":"[小程序] 城市天气2种方式","url":"/2019/06/07//articles/2019/06/07/1559886110000.html/","content":"百度天气api\n```\nPage({\n\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    today: {\n      dayPictureUrl: '',\n      nightPictureUrl: '',\n      weather: '',\n      temperature: ''\n    }\n  },\n\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function(options) {\n    this.baiduWeather();\n  },\n\n  baiduWeather() {\n    var that = this;\n    var address = \"珠海\";\n\n    var ak = '826e806b86676d155282de3d37188137';\n    wx.request({\n      url: `https://api.map.baidu.com/telematics/v3/weather?output=json&ak=${ak}&location=` + address,\n      header: {\n        'content-type': 'application/json'\n      },\n      success: function(res) {\n        var results = res.data.results;\n        if (results) {\n          var result = results[0];\n\n          //温度单位\n          const tmpUnit = '℃';\n          var range = result.weather_data[1].temperature.split(tmpUnit)[0];\n          var ranges = range.split(\"~\");\n          var high = Number(ranges[0]);\n          var low = Number(ranges[1]);\n          var temperature = low + \"~\" + high + tmpUnit;\n\n          that.setData({\n            today: {\n              dayPictureUrl: result.weather_data[1].dayPictureUrl,\n              nightPictureUrl: result.weather_data[1].nightPictureUrl,\n              weather: result.weather_data[1].weather,\n              temperature: temperature\n            }\n          });\n\n          console.log(\"====== today =======\");\n          console.log(that.data.today);\n\n        }\n      }\n    });\n  },\n\n});\n```\n\nwthrcdn.etouch.cn api\n```\n#小程序getLocation需要在app.json中声明permission字段\n#不校验合法域名\n```\napp.json\n```\n{\n  \"permission\": {\n    \"scope.userLocation\": {\n      \"desc\": \"你的位置信息将用于小程序位置接口的效果展示\"\n    }\n  },\n}\n```\nutils/RegUtil.js\n```\nfunction getNum(str) {\n  var num = str.replace(/[^0-9]/ig, \"\");\n  return num;\n}\n\nmodule.exports = {\n  getNum: getNum\n}\n```\nweather.js\n```\nvar RegUtil = require(\"../../utils/RegUtil.js\");\n\nPage({\n\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    city: '珠海',\n    today: {},\n    future: {},\n  },\n\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function(options) {\n    this.loadInfo();\n  },\n\n\n  //获取天气\n  //自定义获取位置\n  loadInfo: function() {\n    var page = this;\n    wx.getLocation({\n      type: 'gcj02', //返回可以用于wx.openLocation的经纬度\n      success: function(res) {\n        var latitude = res.latitude\n        var longitude = res.longitude\n        //console.log(latitude, longitude);\n        page.loadCity(latitude, longitude);\n      }\n    });\n  },\n\n  //自定义获取城市\n  loadCity: function(latitude, longitude) {\n    var page = this;\n    var city = '珠海';\n    city = city.replace(\"市\", \"\");\n    page.setData({\n      city: city\n    });\n    page.loadWeather(city);\n  },\n\n  //自定义获取天气\n  loadWeather: function(city) {\n    var page = this;\n    wx.request({\n      url: 'http://wthrcdn.etouch.cn/weather_mini?city=' + city,\n      header: {\n        'content-type': 'application/json'\n      },\n      success: function(res) {\n        // console.log(res);\n        var future = res.data.data.forecast;\n        var todayInfo = future.shift();\n        var today = res.data.data;\n        today.todayInfo = todayInfo;\n\n        today.todayInfo.low = RegUtil.getNum(today.todayInfo.low);\n        today.todayInfo.high = RegUtil.getNum(today.todayInfo.high);\n        page.setData({\n          today: today,\n          future: future,\n        });\n        console.log(\"====== todayInfo =======\");\n        console.log(today.todayInfo);\n      }\n    })\n  },\n});\n```\nweather.wxml\n```\n<view>\n  <view>{{today.todayInfo.date}}</view>\n  <view>{{today.todayInfo.low}}~{{today.todayInfo.high}}℃</view>\n</view>\n```","tags":["小程序"]},{"title":"[小程序] 百度api地址获取经纬度","url":"/2019/06/07//articles/2019/06/07/1559886110000.html/","content":"百度api 通过地址获取经纬度\napp.js\n```\n  cityLocation: function(successCb, failCb) {\n    var self = this;\n    var address = self.globalData.currentAddress;\n\n    var ak = '';\n    wx.request({\n      url: `https://api.map.baidu.com/geocoder/v2/?ak=${ak}&output=json&coordtype=wgs84ll&address=` + address,\n      data: {},\n      header: {\n        'Content-Type': 'application/json'\n      },\n      success: function(res) {\n        var location = res.data.result.location;\n        console.log(location);\n        console.log(location.lat);\n        console.log(location.lng);\n        typeof successCb == \"function\" && successCb(location);\n      },\n      fail: function(res) {\n        typeof failCb == \"function\" && failCb(res);\n      },\n      complete: function(res) {\n      }\n    });\n  },\n```","tags":["小程序"]},{"title":"[css] 自定义content","url":"/2019/06/07//articles/2019/06/07/1559876653000.html/","content":"<a href=\"https://www.zhihu.com/question/22022905\" target=\"_blank\">css content 如何自定义生成图标？</a>\n<a href=\"https://www.jb51.net/css/637315.html\" target=\"_blank\">详解CSS 伪元素及Content 属性</a>\n","tags":["css"]},{"title":"[es6] 语法与代码","url":"/2019/06/07//articles/2019/06/07/1559876652000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/abfca2d76cf1\" target=\"_blank\">简书 | ES6 高级语法</a>\n<a href=\"https://blog.csdn.net/qq_35036255/article/details/80344748\" target=\"_blank\">ES6笔记上（深入浅出ES6—阮一峰）</a>\n\nes6闭包\n方法1：\n```\nconst personUnkonwAge = (({name, gender}) => ({name,gender}))(person)\nconsole.log(personUnkonwAge)\n```\n方法2：\n```\nlet {name, ...personUnknowName} = person;\nconsole.log(personUnknowName);\n```\n<a href=\"https://www.jianshu.com/p/87008f4f8513\" target=\"_blank\">ES6新特性</a>\n<a href=\"https://www.jianshu.com/p/ac1787f6c50f\" target=\"_blank\">ES6中常用的10个新特性讲解</a>\n<a href=\"https://www.cnblogs.com/Marydon20170307/p/8676611.html\" target=\"_blank\">js 替换json属性中的键名</a>\n<a href=\"\" target=\"_blank\">js 批量替换json属性</a>\n","tags":["es6"]},{"title":"[layui] layer框百度地图选址","url":"/2019/06/07//articles/2019/06/07/1559870087000.html/","content":"<a href=\"http://www.cnblogs.com/SunSong/p/9909947.html\" target=\"_blank\">layer弹出百度地图，选取经纬度至文本框中</a>","tags":["layui"]},{"title":"[springboot] 电商","url":"/2019/06/07//articles/2019/06/07/1559868910000.html/","content":"<a href=\"https://blog.csdn.net/CowBoySoBusy/article/details/82709742\" target=\"_blank\">基于springboot等技术的JavaWeb电子商城项目</a>\n<a href=\"https://github.com/29DCH/OnlineMall\" target=\"_blank\">基于springboot+thymeleaf+spring data jpa+druid+bootstrap+layui等技术的JavaWeb电子商城项目</a>\n","tags":["springboot"]},{"title":"[springboot] springboot+mybatis电商系统","url":"/2019/06/07//articles/2019/06/07/1559868909000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/addf130552ce7\" target=\"_blank\">mall基于SpringBoot+MyBatis的电商系统</a>\n<a href=\"https://github.com/macrozheng/mall\" target=\"_blank\">github | 后端项目 | mall</a>\n<a href=\"https://github.com/macrozheng/mall-admin-web\" target=\"_blank\">github | 前端项目 | mall-admin-web</a>\n技术选型\n```\nSpring Boot\n容器+MVC框架\nhttps://spring.io/projects/spring-boot\n\nSpring Security\n认证和授权框架\nhttps://spring.io/projects/spring-security\n\nMyBatis\nORM框架\nhttp://www.mybatis.org/mybatis-3/zh/index.html\n\nMyBatisGenerator\n数据层代码生成\nhttp://www.mybatis.org/generator/index.html\n\nPageHelper\nMyBatis物理分页插件\nhttp://git.oschina.net/free/Mybatis_PageHelper\n\nSwagger-UI\n文档生产工具\nhttps://github.com/swagger-api/swagger-ui\n\nHibernator-Validator\n验证框架\nhttp://hibernate.org/validator/\n\nElasticsearch\n搜索引擎\nhttps://github.com/elastic/elasticsearch\n\nRabbitMq\n消息队列\nhttps://www.rabbitmq.com/\n\nRedis\n分布式缓存\nhttps://redis.io/\n\nMongoDb\nNoSql数据库\nhttps://www.mongodb.com/\n\nDocker\n应用容器引擎\nhttps://www.docker.com/\n\nDruid\n数据库连接池\nhttps://github.com/alibaba/druid\n\nOSS\n对象存储\nhttps://github.com/aliyun/aliyun-oss-java-sdk\n\nJWT\nJTW登录支持\nhttps://github.com/jwtk/jjwt\n\nLogStash\n日志收集\nhttps://github.com/logstash/logstash-logback-encoder\n\nLombok\n简化对象封装工具\nhttps://github.com/rzwitserloot/lombok\n```\n\n前端技术\n```\nVue\n前端框架\nhttps://vuejs.org/\n\n\nVue-router\n路由框架\nhttps://router.vuejs.org/\n\n\nVuex\n全局状态管理框架\nhttps://vuex.vuejs.org/\n\n\nElement\n前端UI框架\nhttps://element.eleme.io/\n\n\nAxios\n前端HTTP框架\nhttps://github.com/axios/axios\n\n\nv-charts\n基于Echarts的图表框架\nhttps://v-charts.js.org/\n\n\nJs-cookie\ncookie管理工具\nhttps://github.com/js-cookie/js-cookie\n\n\nnprogress\n进度条控件\nhttps://github.com/rstacruz/nprogress\n```\n\n开发工具\n```\nIDEA\n开发IDE\nhttps://www.jetbrains.com/idea/download\n\n\nRedisDesktop\nredis客户端连接工具\nhttps://redisdesktop.com/download\n\n\nRobomongo\nmongo客户端连接工具\nhttps://robomongo.org/download\n\n\nSwitchHosts\n本地host管理\nhttps://oldj.github.io/SwitchHosts/\n\n\nX-shell\nLinux远程连接工具\nhttp://www.netsarang.com/download/software.html\n\n\nNavicat\n数据库连接工具\nhttp://www.formysql.com/xiazai.html\n\n\nPowerDesigner\n数据库设计工具\nhttp://powerdesigner.de/\n\n\nAxure\n原型设计工具\nhttps://www.axure.com/\n\n\nMindMaster\n思维导图设计工具\nhttp://www.edrawsoft.cn/mindmaster\n\n\nScreenToGif\ngif录制工具\nhttps://www.screentogif.com/\n\n\nProcessOn\n流程图绘制工具\nhttps://www.processon.com/\n\n\nPicPick\n屏幕取色工具\nhttps://picpick.app/zh/\n```\n\n开发环境\n```\nJDK\n1.8\nhttps://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\n\n\nMysql\n5.7\nhttps://www.mysql.com/\n\n\nRedis\n3.2\nhttps://redis.io/download\n\n\nElasticsearch\n2.4\nhttps://www.elastic.co/downloads\n\n\nMongoDb\n3.2\nhttps://www.mongodb.com/download-center\n\n\nRabbitMq\n5.25\nhttp://www.rabbitmq.com/download.html\n\n\nnginx\n1.10\nhttp://nginx.org/en/download.html\n```","tags":["springboot"]},{"title":"[springboot] java版微信小程序商城","url":"/2019/06/07//articles/2019/06/07/1559868907000.html/","content":"<a href=\"https://gitee.com/fuyang_lipengjun/platform\" target=\"_blank\">微信小程序商城（Java版）</a>\n","tags":["springboot"]},{"title":"[jenkins] php持续集成","url":"/2019/06/07//articles/2019/06/07/1559868906000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\nyum install -y jenkins \\\njava \\\njava-1.8.0-openjdk \\\nphp \\\nphp-devel \\\nphp-pear \\\nre2c \\\nphp-pecl-imagick \\\nphp-dom \\\nphp-unit \\\nphp-pear-phing \\\nphp-phpunit-PHPUnit \\\nphp-phpunit-phpcpd\n\n#pear channel-discover pear.symfony-project.com\npear channel-discover pear.phpmd.org\npear remote-list -c pdepend\npear install --alldeps pdepend/PHP_Depend\npear install --alldeps phpmd/PHP_PMD\n\nservice jenkins start\n```\n\n插件\n```\nRole-based Authorization Strategy（基于角色的权限管理）\nPublish Over SSH Plugin（通过ssh发布代码）\nPhing（php构建工具）\nPMD（代码静态检查）\nPlot\nJDepend\nDRY\n```\n\nPhing targets配置\n```\nInvoke Phing targets\n\nTargets             tar\nPhing Build File\tbuild.xml\n\nProperties\nbuildid=${BUILD_ID}\nbuildnumber=${BUILD_NUMBER}\n```\n\nSend files or execute commands over SSH 配置\n```\nSource files:\ndist/api.${BUILD_NUMBER}.${BUILD_Id}.tar.gz\n\nRemove prefix:\ndist/\n\nRemote directory:\n/home/data/\n\nExec command:\ncd /home/data/\ntar zxvf api.${BUILD_NUMBER}.${BUILD_Id}.tar.gz -C /home/www/\n\n```\n\n<a href=\"https://blog.51cto.com/birdinroom/1346812\" target=\"_blank\">基于Jenkins 实现php项目的自动化测试、自动打包和自动部署</a>\n```\npear channel-discover pear.phpunit.de\npear channel-discover pear.symfony-project.com\npear channel-discover components.ez.no\npear channel-discover pear.symfony.com\npear update-channels\npear upgrade-all\npear install pear.symfony.com/Yaml\npear install --alldeps phpunit/PHPUnit\npear install --force --alldeps phpunit/PHPUnit\nphpunit --version\n```\n\nbuild.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project name=\"test-corn\" default=\"build\">\n        <target name=\"build\" depends=\"make_runtime,pdepend,phpmd,phpcpd,test,check,test-cron\"/>\n        <property name=\"version-m\" value=\"1.1\" />\n        <property name=\"version\" value=\"1.1.0\" />\n        <property name=\"stability\" value=\"stable\" />\n        <property name=\"releasenotes\" value=\"\" />\n        <property name=\"tarfile\" value=\"${phing.project.name}.${buildnumber}.${buildid}.tar.gz\" />\n        <property name=\"pkgfile\" value=\"${phing.project.name}.${version}.tgz\" />\n        <property name=\"distfile\" value=\"dist/${tarfile}\" />\n        <property name=\"tests.dir\" value=\"tests\" />\n        <!--####程序的目录（根据实际情况更改）-->\n        <fileset id=\"test-cron.tar.gz\" dir=\"./trunk\">\n            <include name=\"Application/**\"/>\n            <exclude name=\"Application/Common/Conf/config.php\"/>\n            <exclude name=\"Application/Runtime/**\"/>\n            <include name=\"Public/**\"/>\n            <include name=\"ThinkPHP/**\"/>\n            <include name=\"*.php\"/>\n        </fileset>\n        <!--####集成构建相关配置-->\n        <target name=\"make_runtime\">\n            <mkdir dir=\"${project.basedir}/Runtime\" />\n            <mkdir dir=\"${project.basedir}/build/logs\" />\n            <mkdir dir=\"${project.basedir}/build/pdepend\" />\n            <mkdir dir=\"${project.basedir}/build/code-browser\" />\n        </target>\n        <!--####php代码规模分析工具配置-->\n        <target name=\"pdepend\" description=\"Calculate software metrics using PHP_Depend\">\n            <exec executable=\"pdepend\">\n                <arg value=\"--jdepend-xml=${project.basedir}/build/logs/jdepend.xml\"/>\n                <arg value=\"--jdepend-chart=${project.basedir}/build/pdepend/dependencies.svg\"/>\n                <arg value=\"--overview-pyramid=${project.basedir}/build/pdepend/overview-pyramid.svg\"/>\n                <arg path=\"${project.basedir}/\"/>\n            </exec>\n        </target>\n         <!--####php代码静态检查工具配置-->\n        <target name=\"phpmd\" description=\"Perform project mess detection using PHPMD\">\n          <phpmd>\n            <fileset dir=\"${project.basedir}\">\n              <include name=\"protected/*.php\" />\n              <include name=\"*.php\" />\n            </fileset>\n          </phpmd>\n        </target>\n        <!--####php代码分析工具配置-->\n        <target name=\"phpcpd\" description=\"Find duplicate code using PHPCPD\">\n            <phpcpd>\n                <fileset dir=\"${project.basedir}\">\n                    <include name=\"*.php\" />\n                </fileset>\n                 <formatter type=\"pmd\" outfile=\"pmd-cpd.xml\"/>\n            </phpcpd>\n        </target>\n        <!--####php单例测试配置-->\n        <target name=\"test\" description=\"Run PHPUnit tests\">\n            <phpunit haltonerror=\"true\" haltonfailure=\"true\" printsummary=\"true\">\n                <batchtest>\n                    <fileset dir=\"${tests.dir}\">\n                        <include name=\"**/*Test.php\" />\n                    </fileset>\n                </batchtest>\n            </phpunit>\n        </target>\n        <!--####构建参数配置-->\n        <target name=\"check\" description=\"Check variables\" >\n            <fail unless=\"version\" message=\"Version not defined!\" />\n            <fail unless=\"buildnumber\" message=\"buildnumber not defined!\" />\n            <fail unless=\"buildid\" message=\"buildid not defined!\" />\n            <delete dir=\"dist\" failonerror=\"false\" />\n            <mkdir dir=\"dist\" />\n        </target>\n        <!--####构建参数配置-->\n        <target name=\"test-cron\" depends=\"check\" description=\"Create tar file for release\">\n            <echo msg=\"Creating distribution tar for ${phing.project.name} ${version}\"/>\n            <delete file=\"${distfile}\" failonerror=\"false\"/>\n            <tar destfile=\"${distfile}\" compression=\"gzip\">\n                <fileset refid=\"test-cron.tar.gz\"/>\n            </tar>\n        </target>\n</project>\n```\n\n```\ndocker search debian\ndocker pull debian\ndocker run -dit -p 18080:8080 -p 10443:443 -p 10080:80 -p 10022:22 -p 3690:3690 --name mygitlab debian\ndocker exec -it mygitlab /bin/bash\napt-get update\napt-get install -y curl openssh-server ca-certificates postfix\ncurl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash\napt-get install gitlab-ee\n```\n\n```\ndocker search gitlab\ndocker pull gitlab/gitlab-ce\ndocker run gitlab-ce gitlab/gitlab-ce\n\n```\n\n<a href=\"https://www.gitlab.com.cn/installation/\" target=\"_blank\">gitlab官方安装方法</a>\n<a href=\"https://blog.csdn.net/qq_32786873/article/details/80975880\" target=\"_blank\">centos7.4 + gitlab</a>\n```\nyum install -y curl policycoreutils-python openssh-server\nsystemctl enable sshd\nsystemctl start sshd\nfirewall-cmd --permanent --add-service=http\nsystemctl reload firewalld\nyum install postfix\nsystemctl enable postfix\nsystemctl start postfix\n#curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | bash\n#EXTERNAL_URL=\"http://gitlab.example.com\" yum install -y gitlab-ce\n\nwget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-10.0.0-ce.0.el7.x86_64.rpm\n\nrpm -i gitlab-ce-10.0.0-ce.0.el7.x86_64.rpm\n\n#修改gitlab配置文件指定服务器ip和自定义端口：\nvim /etc/gitlab/gitlab.rb\n\ngitlab-ctl reconfigure\ngitlab-ctl restart\n\n\n初始账户: \nroot\n密码:\n5iveL!fe\n\n```\n\nGitlab常用命令\n```\n#重新应用gitlab的配置：\ngitlab-ctl reconfigure\n#启动GitLab服务：\ngitlab-ctl start\n#停止GitLab服务：\ngitlab-ctl stop\n#重启gitlab服务：\ngitlab-ctl restart\n#查看gitlab运行状态：\ngitlab-ctl status\n#查看gitlab运行日志：\ngitlab-ctl tail\n```\n\n<a href=\"https://segmentfault.com/a/1190000002729796\" target=\"_blank\">CentOS 7 安装 Gitlab + Redis</a>\n```\n```\n\n<a href=\"https://segmentfault.com/a/1190000014244975\" target=\"_blank\">centos搭建git服务器</a>\n\n","tags":["jenkins"]},{"title":"[jenkins] php持续集成","url":"/2019/06/07//articles/2019/06/07/1559868905000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/e33b226b25c5\" target=\"_blank\">jenkins + redhat + thinkphp + pear 持续集成</a>\njenkins + redhat + thinkphp + pear\n```\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\nyum install -y jenkins \\\njava \\\njava-1.8.0-openjdk \\\nphp \\\nphp-devel \\\nphp-pear \\\nre2c \\\nphp-pecl-imagick \\\nphp-dom \\\nphp-unit \\\nphp-pear-phing \\\nphp-phpunit-PHPUnit \\\nphp-phpunit-phpcpd\n\n#pear channel-discover pear.symfony-project.com\npear channel-discover pear.phpmd.org\npear remote-list -c pdepend\npear install --alldeps pdepend/PHP_Depend\npear install --alldeps phpmd/PHP_PMD\n\nservice jenkins start\n```\n\n插件\n```\nRole-based Authorization Strategy（基于角色的权限管理）\nPublish Over SSH Plugin（通过ssh发布代码）\nPhing（php构建工具）\nPMD（代码静态检查）\nPlot\nJDepend\nDRY\n```\n\nPhing targets配置\n```\nInvoke Phing targets\n\nTargets             tar\nPhing Build File\tbuild.xml\n\nProperties\nbuildid=${BUILD_ID}\nbuildnumber=${BUILD_NUMBER}\n```\n\nSend files or execute commands over SSH 配置\n```\nSource files:\ndist/api.${BUILD_NUMBER}.${BUILD_Id}.tar.gz\n\nRemove prefix:\ndist/\n\nRemote directory:\n/home/data/\n\nExec command:\ncd /home/data/\ntar zxvf api.${BUILD_NUMBER}.${BUILD_Id}.tar.gz -C /home/www/\n\n```\n\n```\n\n```\n\nbuild.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project name=\"test-corn\" default=\"build\">\n        <target name=\"build\" depends=\"make_runtime,pdepend,phpmd,phpcpd,test,check,test-cron\"/>\n        <property name=\"version-m\" value=\"1.1\" />\n        <property name=\"version\" value=\"1.1.0\" />\n        <property name=\"stability\" value=\"stable\" />\n        <property name=\"releasenotes\" value=\"\" />\n        <property name=\"tarfile\" value=\"${phing.project.name}.${buildnumber}.${buildid}.tar.gz\" />\n        <property name=\"pkgfile\" value=\"${phing.project.name}.${version}.tgz\" />\n        <property name=\"distfile\" value=\"dist/${tarfile}\" />\n        <property name=\"tests.dir\" value=\"tests\" />\n        <!--####程序的目录（根据实际情况更改）-->\n        <fileset id=\"test-cron.tar.gz\" dir=\"./trunk\">\n            <include name=\"Application/**\"/>\n            <exclude name=\"Application/Common/Conf/config.php\"/>\n            <exclude name=\"Application/Runtime/**\"/>\n            <include name=\"Public/**\"/>\n            <include name=\"ThinkPHP/**\"/>\n            <include name=\"*.php\"/>\n        </fileset>\n        <!--####集成构建相关配置-->\n        <target name=\"make_runtime\">\n            <mkdir dir=\"${project.basedir}/Runtime\" />\n            <mkdir dir=\"${project.basedir}/build/logs\" />\n            <mkdir dir=\"${project.basedir}/build/pdepend\" />\n            <mkdir dir=\"${project.basedir}/build/code-browser\" />\n        </target>\n        <!--####php代码规模分析工具配置-->\n        <target name=\"pdepend\" description=\"Calculate software metrics using PHP_Depend\">\n            <exec executable=\"pdepend\">\n                <arg value=\"--jdepend-xml=${project.basedir}/build/logs/jdepend.xml\"/>\n                <arg value=\"--jdepend-chart=${project.basedir}/build/pdepend/dependencies.svg\"/>\n                <arg value=\"--overview-pyramid=${project.basedir}/build/pdepend/overview-pyramid.svg\"/>\n                <arg path=\"${project.basedir}/\"/>\n            </exec>\n        </target>\n         <!--####php代码静态检查工具配置-->\n        <target name=\"phpmd\" description=\"Perform project mess detection using PHPMD\">\n          <phpmd>\n            <fileset dir=\"${project.basedir}\">\n              <include name=\"protected/*.php\" />\n              <include name=\"*.php\" />\n            </fileset>\n          </phpmd>\n        </target>\n        <!--####php代码分析工具配置-->\n        <target name=\"phpcpd\" description=\"Find duplicate code using PHPCPD\">\n            <phpcpd>\n                <fileset dir=\"${project.basedir}\">\n                    <include name=\"*.php\" />\n                </fileset>\n                 <formatter type=\"pmd\" outfile=\"pmd-cpd.xml\"/>\n            </phpcpd>\n        </target>\n        <!--####php单例测试配置-->\n        <target name=\"test\" description=\"Run PHPUnit tests\">\n            <phpunit haltonerror=\"true\" haltonfailure=\"true\" printsummary=\"true\">\n                <batchtest>\n                    <fileset dir=\"${tests.dir}\">\n                        <include name=\"**/*Test.php\" />\n                    </fileset>\n                </batchtest>\n            </phpunit>\n        </target>\n        <!--####构建参数配置-->\n        <target name=\"check\" description=\"Check variables\" >\n            <fail unless=\"version\" message=\"Version not defined!\" />\n            <fail unless=\"buildnumber\" message=\"buildnumber not defined!\" />\n            <fail unless=\"buildid\" message=\"buildid not defined!\" />\n            <delete dir=\"dist\" failonerror=\"false\" />\n            <mkdir dir=\"dist\" />\n        </target>\n        <!--####构建参数配置-->\n        <target name=\"test-cron\" depends=\"check\" description=\"Create tar file for release\">\n            <echo msg=\"Creating distribution tar for ${phing.project.name} ${version}\"/>\n            <delete file=\"${distfile}\" failonerror=\"false\"/>\n            <tar destfile=\"${distfile}\" compression=\"gzip\">\n                <fileset refid=\"test-cron.tar.gz\"/>\n            </tar>\n        </target>\n</project>\n```\n\n\n<a href=\"https://blog.csdn.net/u014477164/article/details/76686286\" target=\"_blank\">jenkins + git实现PHP持续集成部署</a>\ndebian\n```\ndocker search debian\ndocker pull debian\ndocker run -dit -p 18080:8080 -p 10443:443 -p 10080:80 -p 10022:22 -p 3690:3690 --name mygitlab debian\ndocker exec -it mygitlab /bin/bash\napt-get update\napt-get install -y curl openssh-server ca-certificates postfix\ncurl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash\napt-get install gitlab-ee\n```\n<a href=\"https://learnku.com/articles/3880/deploying-php-applications-with-jenkins\" target=\"_blank\">用 Jenkins + git 部署 PHP 应用</a>\n<a href=\"https://www.jianshu.com/p/1b3dfc977a38\" target=\"_blank\">[LNMP自动化集成]使用jenkins进行PHP持续集成——自动化代码检查、分析和单例测试</a>\n<a href=\"https://blog.csdn.net/mlx212/article/details/80918843\" target=\"_blank\">jenkins+svn+rsync+php_一键自动化部署可持续化集成服务器集群项目_支持回滚</a>\n<a href=\"https://segmentfault.com/a/1190000010811684\" target=\"_blank\">docker+使用Jenkins进行持续部署（PHP代码）</a>\n<a href=\"http://www.bubuko.com/infodetail-1916608.html\" target=\"_blank\">Jenkins + SVN搭建php持续集成</a>\n<a href=\"https://segmentfault.com/a/1190000012509128\" target=\"_blank\">GitLab+Jenkins+Rsync+PM2实现Node项目的持续集成与自动部署</a>\n<a href=\"https://segmentfault.com/a/1190000013020851\" target=\"_blank\">【docker实操】使用docker部署一个laravel应用</a>\n\n","tags":["jenkins"]},{"title":"[jenkins] maven+svn自动部署和发布（超详细，图文并茂）","url":"/2019/06/07//articles/2019/06/07/1559868904000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/hongtaolong/article/details/83451507\" target=\"_blank\">maven+svn自动部署和发布（超详细，图文并茂）</a>\n<a href=\"https://www.cnblogs.com/zishengY/p/7170656.html\" target=\"_blank\">使用jenkins实现持续集成</a>\n<a href=\"http://www.cnblogs.com/luchuangao/p/7748575.html\" target=\"_blank\">基于Jenkins实现持续集成【持续更新中】</a>\n<a href=\"https://blog.csdn.net/aixiaoyang168/article/details/80636544\" target=\"_blank\">使用 Jenkins 执行持续集成的几个实用经验分享</a>\n\n","tags":["jenkins"]},{"title":"[jenkins] jenkins+svn+maven+tomcat自动打包部署","url":"/2019/06/07//articles/2019/06/07/1559868903000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/0e20e7d2625e\" target=\"_blank\">jenkins+svn+maven+tomcat自动打包部署</a>\n","tags":["jenkins"]},{"title":"[jenkins] gitlab","url":"/2019/06/07//articles/2019/06/07/1559868902000.html/","content":"<a href=\"https://www.jianshu.com/p/63b012ee52ea\" target=\"_blank\">持续集成Jenkins+Gitlab</a>\n```\n#环境准备\ncat /etc/redhat-release\nuname -r\n\n#更换阿里yum源\ncd /etc/yum.repos.d\nwget http://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm\nyum update -y\n\n#更换gitlab，yum源为清华大学\nvim /etc/yum.repos.d/gitlab-ce.repo\n[gitlab-ce]\nname=gitlab-ce\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7\nrepo_gpgcheck=0\ngpgcheck=0\nenabled=1\ngpgkey=https://packages.gitlab.com/gpg.key\n\nyum makecache\nyum install -y gitlab-ce\n\n#安装依赖\nyum install curl policycoreutils openssh-server openssh-clients postfix -y\n\n#启动postfix\nsystemctl start postfix\n\n#安装gitlab-ce，版本为gitlab-ce.x86_64 0:10.6.4-ce.0.el7\nyum install -y gitlab-ce\n\n#配置并启动gitlab，比较久，需要耐心等待一下，在此之前需要保证80端口不被占用\ngitlab-ctl reconfigure\n\n#查看启动状态 全部为run说明正常启动\ngitlab-ctl status\n```","tags":["jenkins"]},{"title":"[jenkins] docker+svn+php","url":"/2019/06/07//articles/2019/06/07/1559868901000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/resilient/article/details/88039989\" target=\"_blank\">docker+jenkins 构建 PHP持续集成环境</a>\n```\ndocker pull voduytuan/jenkins-php-docker\ncd /var\nmkdir -p /d/docker/jenkins-php-docker\ncd /d/docker/jenkins-php-docker\nyum install -y\ngit clone https://github.com/naxhh/jenkins-php-docker\n\ndocker run -d -P -v /d/docker/jenkins-php-docker:/var/jenkins_home:rw voduytuan/jenkins-php-docker\n```\n<a href=\"https://www.cnblogs.com/xiangsikai/p/10057087.html\" target=\"_blank\">Docker+Jenkins+Maven+SVN搭建持续集成环境</a>\n```\n\n```\n\n<a href=\"https://blog.csdn.net/u014477164/article/details/76686286\" target=\"_blank\">jenkins 实现PHP持续集成部署</a>\n```\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo \nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key \nyum install -y jenkins \\\njava \\\njava-1.8.0-openjdk \\\nphp \\\nphp-devel \\\nphp-pear \\\nre2c \\\nphp-pear-phing\n\nservice jenkins start\n\nssh-keygen -t rsa\nscp ~/.ssh/ras.pub root@B:/root/.ssh/authorized_keys\nssh root@B\n\n#配置Publish Over SSH Plugin\nJenkins SSH Key：生成rsa的时候设置的ssh key，若没有设置则留空\nKey：填上A服务器私钥的内容。默认路径 ~/.ssh/id_rsa \nHosename:填上B服务器的IP\nusername:填上B服务器的帐号\n\n\ncd /var/lib/jenkins/workspace/git\n\n\n```\n\n","tags":["jenkins"]},{"title":"[jenkins] docker+gitlab","url":"/2019/06/07//articles/2019/06/07/1559868900000.html/","content":"<a href=\"https://www.cnblogs.com/xiewenming/p/7490828.html\" target=\"_blank\">Jenkins介绍和安装及配合GitLab代码自动部署</a>\n<a href=\"https://www.jianshu.com/p/0abe441d5d3c\" target=\"_blank\">Windows下使用docker部署gitlab CI服务</a>\n```\ndocker pull gitlab/gitlab-ce\ndocker run -d --hostname localhost -p 10080:80 -p 10443:443 --name gitlab -v /var/run/docker.sock:/var/run/docker.sock -v c:/docker/gitlab/config:/etc/gitlab -v c:/docker/gitlab/logs:/var/log/gitlab gitlab/gitlab-ce:latest\n\n#默认管理员密码为：\nUsername: \nroot\nPassword: \n5iveL!fe\n\n#安装gitlab-runner\ndocker pull gitlab/gitlab-runner\n\ndocker run -d --name gitlab-runner --link gitlab --restart always -v /var/run/docker.sock:/var/run/docker.sock -v c:/docker/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner:latest\n\n#注册一个新的Runner实例\ndocker exec -it gitlab-runner gitlab-runner register\n```","tags":["jenkins"]},{"title":"[jenkins] android","url":"/2019/06/07//articles/2019/06/07/1559868899000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/youshi520000/article/details/81027940\" target=\"_blank\">Android 使用 Jenkins 实现自动化打包【流程】&【踩坑】</a>\n<a href=\"https://blog.csdn.net/zhuyb829/article/details/78899465\" target=\"_blank\">基于Jenkins的Android持续集成（自动化打包）</a>\n<a href=\"https://www.jianshu.com/p/866485a8bb6d\" target=\"_blank\">Jenkins+Android自动打包</a>\n<a href=\"https://blog.csdn.net/mabeijianxi/article/details/52680283\" target=\"_blank\">利用Jenkins玩转Android自动打包发包</a>\n<a href=\"http://www.pgyer.com/doc/view/jenkins\" target=\"_blank\">蒲公英 - 使用 Jenkins 实现持续集成 (Android)</a>","tags":["jenkins"]},{"title":"[小程序] 发起支付+java后端","url":"/2019/06/07//articles/2019/06/07/1559868898000.html/","content":"<a href=\"https://www.jianshu.com/p/eafb5f80f304\" target=\"_blank\">发起支付+java后端</a>\n\n","tags":["小程序"]},{"title":"[js] async与await","url":"/2019/06/07//articles/2019/06/07/1559868897000.html/","content":"<a href=\"https://www.cnblogs.com/cpselvis/p/6344122.html\" target=\"_blank\">js中的async await</a>\n<a href=\"https://www.cnblogs.com/CandyManPing/p/9384104.html\" target=\"_blank\">js async await终极异步解决方案</a>\n\n","tags":["js"]},{"title":"[面试] 前端面试题2019","url":"/2019/06/07//articles/2019/06/07/1559868896000.html/","content":"<a href=\"https://www.jianshu.com/p/1d87fe3ea24a\" target=\"_blank\">前端面试题2019</a>\n","tags":["面试"]},{"title":"[小程序] 点餐小程序+springboot后台","url":"/2019/06/07//articles/2019/06/07/1559868894000.html/","content":"<a href=\"https://github.com/qiushi123/diancan\" target=\"_blank\">github | diancan</a>\n","tags":["小程序"]},{"title":"[css] 多边形","url":"/2019/06/03//articles/2019/06/03/1559571016000.html/","content":"<a href=\"https://www.cnblogs.com/ming1025/p/7363074.html\" target=\"_blank\">纯CSS画的基本图形（矩形、圆形、三角形、多边形、爱心、八卦等）</a>\n<a href=\"https://www.cnblogs.com/TigerZhang-home/p/6908995.html\" target=\"_blank\">css3完成多边形</a>\n\n五角星\n```\n#star-five {\n   margin: 50px 0;\n   position: relative;\n   display: block;\n   color: red;\n   width: 0px;\n   height: 0px;\n   border-right:  100px solid transparent;\n   border-bottom: 70px  solid red;\n   border-left:   100px solid transparent;\n   -moz-transform:    rotate(35deg);\n   -webkit-transform: rotate(35deg);\n   -ms-transform:     rotate(35deg);\n   -o-transform:      rotate(35deg);\n}\n#star-five:before {\n   border-bottom: 80px solid red;\n   border-left: 30px solid transparent;\n   border-right: 30px solid transparent;\n   position: absolute;\n   height: 0;\n   width: 0;\n   top: -45px;\n   left: -65px;\n   display: block;\n   content: '';\n   -webkit-transform: rotate(-35deg);\n   -moz-transform:    rotate(-35deg);\n   -ms-transform:     rotate(-35deg);\n   -o-transform:      rotate(-35deg);\n    \n}\n#star-five:after {\n   position: absolute;\n   display: block;\n   color: red;\n   top: 3px;\n   left: -105px;\n   width: 0px;\n   height: 0px;\n   border-right: 100px solid transparent;\n   border-bottom: 70px solid red;\n   border-left: 100px solid transparent;\n   -webkit-transform: rotate(-70deg);\n   -moz-transform:    rotate(-70deg);\n   -ms-transform:     rotate(-70deg);\n   -o-transform:      rotate(-70deg);\n   content: '';\n}\n```\n<a href=\"https://blog.csdn.net/yufengaotian/article/details/80594461\" target=\"_blank\">css3的clip-path方法剪裁实现（三角形，多边形，圆，椭圆）</a>\n```\n<div class=\"demo\" style=\"width: 300px; height: 300px; margin: auto; background: red;\"></div>\n```\n\n裁切为一个三角形或者梯形 使用：polygon裁剪多边形\n```\n.demo{\n\t-webkit-clip-path: polygon(0 100%, 50% 0, 100% 100%);\n}\n```\n\n剪切梯形：坐标顺序为，右上、右下，左下，左上\n```\n.demo{\n\t-webkit-clip-path: polygon(100% 0,75% 100%, 25% 100%, 0 0);\n}\n```\n\n裁切圆：创建圆形，需要给circle传入三个值：半径和圆心坐标（x y），用at关键字来定义圆心坐标。\n```\n.demo{\n\t-webkit-clip-path: circle(50% at 50% 50%);\n}\n```\n\n裁切椭圆：创建椭圆，需要给ellipse传入四个值：椭圆的x轴半径、y轴半径以及椭圆圆心(x y)。\n```\n.demo{\n\t-webkit-clip-path: ellipse(30% 20% at 50% 50%);\n}\n```\n\n再说下裁切的：矩形裁切，边缘裁切用到的 inset（对应的是距上，距右，距下，距左的位置）\n```\n.demo{\n\t-webkit-clip-path: inset(100px 50px 50px 50px);\n}\n```\n\n裁切一个圆角\n```\ninset(<top> <right> <bottom> <left> round <top-radius> <right-radius><bottom-radius> <left-radius>)\n\n-webkit-clip-path: inset(25% 0 round 0 25%);\n```","tags":["css"]},{"title":"[css] 裁剪图片","url":"/2019/06/03//articles/2019/06/03/1559571015000.html/","content":"<a href=\"https://www.cnblogs.com/zhishaofei/p/4446973.html\" target=\"_blank\">CSS中的剪裁和遮罩</a>\n```\ndiv{\n   clip-path: polygon(10% 10%, 90% 10%, 90% 90%,10% 90%);\n   transform: scale(1.2);\n}\n```\n<a href=\"http://www.cnblogs.com/xxflz/p/9816217.html\" target=\"_blank\">CSS3实现放大缩小动画</a>\n","tags":["css"]},{"title":"[webpack] css样式作为style插入到标签上","url":"/2019/06/03//articles/2019/06/03/1559570799000.html/","content":"<a href=\"https://blog.csdn.net/fmm1993/article/details/88877044\" target=\"_blank\"></a>\n\n1、把css插入到页面的style属性上，但是不会展示出来（css-loader）\n```\nnpm -d install style-loader\nnpm -d install css-loader\n```\n\n2、配置module\n```\nmodule: {\n    rules: [{\n      test: /\\.css$/,\n      use: [{\n          loader: \"style-loader\",\n        },\n        {\n          loader: \"css-loader\"\n        }\n      ]\n    }]\n  },\n```\n\n3、验证\n```\n先建立./dist/index.html,引入./dist/entry.js样式\n再建立./src/index.css,引入./src/entry.js中\n运行 npm run start\n```\n\n<a href=\"https://me.csdn.net/fmm1993\" target=\"_blank\">webpack4</a>\n\n","tags":["webpack"]},{"title":"[webpack] 小程序","url":"/2019/06/03//articles/2019/06/03/1559570798000.html/","content":"<a href=\"https://blog.csdn.net/mx_csdn/article/details/85709999\" target=\"_blank\">webpack工程化小程序开发</a>\n```\nwebpack编译打包构建小程序\nwebpack工程化小程序开发\n1、新建项目文件（如：wx-mini）\n2、创建package.json文件\n3、安装项目依赖包（或插件包）\n4、项目目录构建\n5、在项目个目录下，新建 .babelrc 文件，用来将es6转化为es5\n6、执行 npm run dev 或 yarn dev (如果有安装yarn)，生成dist文件，将整个dist文件放入微信开发者工具即可\n7、执行npm run build 或 yarn build (如果有安装yarn),打包正式文件，之后将整个dist文件上传到个人微信公众平台即可\n8、如果需要将项目推送到远程git，可以添加 .gitignore 文件，用来过滤不需提交的文件，如：\n9、eslint代码规范检测\n10、webpack自带一个插件uglifyjs-webpack-plugin来压缩js\n11、打包时，去掉js中的console、debugger等\n12、压缩wxml、wxss、json文件\n```\n\n3、安装项目依赖包（或插件包）\n```\n#安装babel，babel的作用是将es6的语法编译成浏览器认识的语法es5\nnpm install --save-dev babel-core babel-loader babel-preset-es2015 babel-preset-stage-0 babel-eslint babel-plugin-lodash babel-plugin-transform-runtime \n\n#用于打包文件\nnpm install --save-dev file-loader\n\n#用于编译sass\nnpm install --save-dev sass-loader node-sass\n\n#用于webpack.config.babel.js配置<注意：webpack版本为3.X.X，4.X.X会有一定的问题，如果使用4.X.X，需要对webpack.config.babel.js配置文件做一定的修改>\nnpm install webpack wxapp-webpack-plugin wxml-loader xml-loader copy-webpack-plugin cross-env\n\n#一个一致性、模块化、高性能的 JavaScript 实用工具库\nnpm install --save lodash\n```\n\nwebpack工程化小程序开发\n```\n#使用 webpack, babel, scss 开发的微信小程序项目脚手架\nhttps://github.com/webpersonalserver/wx-mini\n```","tags":["webpack"]},{"title":"[运维] centos","url":"/2019/06/03//articles/2019/06/03/1559570697000.html/","content":"<a href=\"https://www.centos.bz/\" target=\"_blank\">blog | centos运维</a>\n","tags":["运维"]},{"title":"[api] 百度天气api","url":"/2019/06/03//articles/2019/06/03/1559570696000.html/","content":"<a href=\"https://blog.csdn.net/younghaiqing/article/details/54799303\" target=\"_blank\">百度天气api介绍</a>\n<a href=\"http://lbsyun.baidu.com/apiconsole/key\" target=\"_blank\">百度ak申请地址</a>\n```\nhttp://api.map.baidu.com/telematics/v3/weather?location=北京&output=json&ak=6tYzTvGZSOpYB5Oc2YGGOKt8\n```\njson数据\n```\n{\n    \"error\": 0,\n    \"status\": \"success\",\n    \"date\": \"2014-09-17\",\n    \"results\": [\n        {\n            \"currentCity\": \"北京\",\n            \"pm25\": \"153\",\n            \"index\": [\n                {\n                    \"title\": \"穿衣\",\n                    \"zs\": \"较舒适\",\n                    \"tipt\": \"穿衣指数\",\n                    \"des\": \"建议着薄外套或牛仔衫裤等服装。年老体弱者宜着夹克衫、薄毛衣等。昼夜温差较大，注意适当增减衣服。\"\n                },\n                {\n                    \"title\": \"洗车\",\n                    \"zs\": \"较适宜\",\n                    \"tipt\": \"洗车指数\",\n                    \"des\": \"较适宜洗车，未来一天无雨，风力较小，擦洗一新的汽车至少能保持一天。\"\n                },\n                {\n                    \"title\": \"旅游\",\n                    \"zs\": \"适宜\",\n                    \"tipt\": \"旅游指数\",\n                    \"des\": \"天气较好，但丝毫不会影响您出行的心情。温度适宜又有微风相伴，适宜旅游。\"\n                },\n                {\n                    \"title\": \"感冒\",\n                    \"zs\": \"少发\",\n                    \"tipt\": \"感冒指数\",\n                    \"des\": \"各项气象条件适宜，无明显降温过程，发生感冒机率较低。\"\n                },\n                {\n                    \"title\": \"运动\",\n                    \"zs\": \"较适宜\",\n                    \"tipt\": \"运动指数\",\n                    \"des\": \"天气较好，但考虑气温较低，推荐您进行室内运动，若户外适当增减衣物并注意防晒。\"\n                },\n                {\n                    \"title\": \"紫外线强度\",\n                    \"zs\": \"弱\",\n                    \"tipt\": \"紫外线强度指数\",\n                    \"des\": \"紫外线强度较弱，建议出门前涂擦SPF在12-15之间、PA+的防晒护肤品。\"\n                }\n            ],\n            \"weather_data\": [\n                {\n                    \"date\": \"周三 09月17日 (实时：21℃)\",\n                    \"dayPictureUrl\": \"http://api.map.baidu.com/images/weather/day/duoyun.png\",\n                    \"nightPictureUrl\": \"http://api.map.baidu.com/images/weather/night/qing.png\",\n                    \"weather\": \"多云转晴\",\n                    \"wind\": \"微风\",\n                    \"temperature\": \"23 ~ 12℃\"\n                },\n                {\n                    \"date\": \"周四\",\n                    \"dayPictureUrl\": \"http://api.map.baidu.com/images/weather/day/qing.png\",\n                    \"nightPictureUrl\": \"http://api.map.baidu.com/images/weather/night/duoyun.png\",\n                    \"weather\": \"晴转多云\",\n                    \"wind\": \"微风\",\n                    \"temperature\": \"25 ~ 15℃\"\n                },\n                {\n                    \"date\": \"周五\",\n                    \"dayPictureUrl\": \"http://api.map.baidu.com/images/weather/day/yin.png\",\n                    \"nightPictureUrl\": \"http://api.map.baidu.com/images/weather/night/yin.png\",\n                    \"weather\": \"阴\",\n                    \"wind\": \"微风\",\n                    \"temperature\": \"23 ~ 15℃\"\n                },\n                {\n                    \"date\": \"周六\",\n                    \"dayPictureUrl\": \"http://api.map.baidu.com/images/weather/day/qing.png\",\n                    \"nightPictureUrl\": \"http://api.map.baidu.com/images/weather/night/qing.png\",\n                    \"weather\": \"晴\",\n                    \"wind\": \"微风\",\n                    \"temperature\": \"29 ~ 16℃\"\n                }\n            ]\n        }\n    ]\n}\n```\n\n","tags":["api"]},{"title":"[webpack] 小程序多项目管理","url":"/2019/06/03//articles/2019/06/03/1559570490000.html/","content":"<a href=\"https://segmentfault.com/a/1190000018269045\" target=\"_blank\">利用 Webpack 实现小程序多项目管理</a>\n\n","tags":["webpack"]},{"title":"[小程序] 转发","url":"/2019/06/03//articles/2019/06/03/1559566675000.html/","content":"<a href=\"https://www.jianshu.com/p/c7b1925cd3c1\" target=\"_blank\">转发</a>\n\n\nindex.wxml\n```xml\n<button id=\"shareBtn\" open-type=\"share\" type=\"primary\">\n   <image src='../../images/share.png'></image>分享\n</button>\n```\n\nindex.js\n```js\n/**\n * 用户点击右上角分享（index.js）\n */\n onShareAppMessage: function (ops) {\n   if (ops.from === 'button') {\n     // 来自页面内转发按钮\n     console.log(ops.target)\n   }\n   return {\n     title: 'xx小程序',\n     path: 'pages/index/index',\n     success: function (res) {\n       // 转发成功\n       console.log(\"转发成功:\" + JSON.stringify(res));\n     },\n     fail: function (res) {\n       // 转发失败\n       console.log(\"转发失败:\" + JSON.stringify(res));\n     }\n   }\n }\n\n```","tags":["小程序"]},{"title":"[小程序] 适配相关问题","url":"/2019/06/03//articles/2019/06/03/1559566674000.html/","content":"<a href=\"https://blog.csdn.net/tanzui/article/details/79509540\" target=\"_blank\">ios页面滚动出现空白</a>\n```\n{\n  \"disableScroll\":true\n}\n```","tags":["小程序"]},{"title":"[小程序] 网页迁移到web-view","url":"/2019/06/03//articles/2019/06/03/1559566673000.html/","content":"<a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html\" target=\"_blank\">web-view</a>\n<a href=\"https://segmentfault.com/a/1190000015806971\" target=\"_blank\">网页程序迁移至微信小程序web-view详解</a>\n","tags":["小程序"]},{"title":"[小程序] 图像识别","url":"/2019/06/03//articles/2019/06/03/1559566672000.html/","content":"<a href=\"https://www.jianshu.com/p/fc41f80cc2f1\" target=\"_blank\">智能图像识别AI小程序 开源</a>\n<a href=\"https://github.com/lxljl/sea-ai\" target=\"_blank\">智能图像识别AI小程序 开源</a>\n```\n#安装（更新） wepy 命令行工具\nnpm install wepy-cli -g\n#安装依赖\ncd sea-ai\nnpm install\n#开发实时编译\nnpm run dev\n```","tags":["小程序"]},{"title":"[小程序] wepy","url":"/2019/06/03//articles/2019/06/03/1559566671000.html/","content":"<a href=\"https://github.com/tencent/wepy\" target=\"_blank\">github | wepy</a>\n<a href=\"https://github.com/aben1188/awesome-wepy\" target=\"_blank\">github | WePY资源汇总</a>\n安装使用\n```\n#安装（更新） wepy 命令行工具。\nnpm install wepy-cli -g\n#生成开发示例\nwepy init standard myproject\n#安装依赖\ncd myproject\nnpm install\n#开发实时编译\nwepy build --watch\n```\n","tags":["小程序"]},{"title":"[小程序] 支付宝","url":"/2019/06/03//articles/2019/06/03/1559566670000.html/","content":"<a href=\"https://github.com/Thunf/wepy-demo-bookmall/tree/alipay\" target=\"_blank\">小程序 - 支付宝</a>\n```\ngit clone git@github.com:Thunf/wepy-demo-bookmall.git\n\ncd wepy-demo-bookmall\n\nnpm install wepy-cli -g\nnpm install\n\nnpm run dev\n```\n","tags":["小程序"]},{"title":"[小程序] 云函数demos","url":"/2019/06/03//articles/2019/06/03/1559566669000.html/","content":"<a href=\"https://www.jianshu.com/p/aae02ff2fc5a\" target=\"_blank\">微信云开发之-云函数、云存储、云数据库、云用户管理</a>\n<a href=\"https://github.com/wechat-miniprogram/miniprogram-demo/tree/master/cloudfunctions\" target=\"_blank\">github | cloudfunctions</a>\n<a href=\"https://blog.csdn.net/hunhun1122/article/details/82861973\" target=\"_blank\">小程序云开发demo详解</a>\n\ngithub 之 lxljl\n<a href=\"https://www.jianshu.com/u/42d09b11b311\" target=\"_blank\">简书 - 极品新</a>\n<a href=\"https://github.com/lxljl/wx-tool\" target=\"_blank\">微信小程序 云开发 云函数模板例子</a>\n<a href=\"https://github.com/lxljl/wx-tool\" target=\"_blank\">微信小程序工具类</a>\n```\nshowToast --- 显示消息提示框\nshowModal --- 显示模态对话框\nrequestPayment --- 微信支付\ncloudGetPay --- 云函数微信支付\nlocalEncoding --- 读取本地文件内容\narrayEqual --- 判断两个数组是否相等\nisEmptyObject --- 判断obj是否为空\nrandomColor --- 随机生成颜色\nrandomNum --- 生成指定范围随机数\nbankSpace --- 银行卡每四位+空格\ngetOptionsSync --- 获取小程序启动时的参数\ntrim --- 去除两端空格\nisNew --- 检测是否是新版本\nisNum --- 检测数字\nisPhone --- 检测该手机号是否正确\nisMail --- 检测该邮箱是否正确\nisPlate --- 检测该车牌号是否正确\nisIdCard --- 判断是否为身份证\nvalidateURL --- 合法uri\nvalidateLowerCase --- 是否小写字母\nvalidateUpperCase --- 是否大写字母\nvalidatAlphabets --- 是否大小写字母\ndigitUppercase --- 现金额转大写\ndecimalAdd --- 浮点数相加\ngetDistance --- 计算两点的距离\nuuid --- 返回一个v4兼容的UUID\ngetUsernameColor --- 通过哈希函数获取用户名的颜色\nisLength --- 检测该字符串是否为空\nformatSeconds --- 把秒转为 时分秒\nparseTime --- 格式化时间\nformatTime --- 返回目标时间距离当前时间时长\nstringfyQueryString --- 对象序列化\nisBack --- 该页面是否可以返回上一页\nsuccessBack --- 成功后返回上一页\ngetQueryString --- 获取url参数\nbMapTransQQMap --- 百度地图经纬度转腾讯地图经纬度\nqqMapTransBMap --- 腾讯地图经纬度转百度地图经纬度\ncloudFn --- 云函数调用\ncloudDataBase --- 云数据库调用\nmakePy --- 提取中文首字母\n```\n\n<a href=\"https://github.com/lxljl/cloudFns\" target=\"_blank\"> 微信小程序云函数合集 | cloudFns</a>\n```\nlogin --- 微信登录\ngetUserInfo --- 获取用户信息\nsetUserInfo --- 设置用户信息\ndecode --- 微信用户信息解密\nsendSms --- 发送手机短信验证码\ngetPay --- 微信支付模板\ngetWXACodeUnlimit --- 微信一维码\nsetToken --- 微信access_token\nsendMsg --- 发送模板消息\ngetQRcode --- 生成二维码\ntranslation --- 百度翻译\ngetlist --- 查询列表模板\nsetPix --- 上传图片并写入数据模板\ngetBaiKeCrawler --- 百度百科植物类\n```\n\n<a href=\"https://github.com/TencentCloudBase/tcb-router\" target=\"_blank\">小程序·云开发 云函数类 koa 路由工具</a>\n<a href=\"https://www.jianshu.com/p/52739d7914c0\" target=\"_blank\">【一】10分钟精通微信小程序 | 获取用户openid</a>\n\n<a href=\"https://www.jianshu.com/p/f95adbba3b65\" target=\"_blank\">第二章 \"我要点爆\"微信小程序点爆页面的实现与云函数和云存储的应用</a>\n<a href=\"https://github.com/xiedong2016/dbx\" target=\"_blank\">小程序 我要点爆</a>\n","tags":["小程序"]},{"title":"[小程序] 百度腾讯经纬度求距","url":"/2019/06/03//articles/2019/06/03/1559566668000.html/","content":"<a href=\"https://segmentfault.com/a/1190000017401316\" target=\"_blank\">微信小程序计算用户离商家的距离(利用经纬度求距)</a>\n<a href=\"https://segmentfault.com/a/1190000016237750\" target=\"_blank\">根据经纬度计算两地距离</a>\n","tags":["小程序"]},{"title":"[小程序] 开发者社区","url":"/2019/06/03//articles/2019/06/03/1559566667000.html/","content":"<a href=\"https://developers.weixin.qq.com/community\" target=\"_blank\">开发者社区</a>\n\n","tags":["小程序"]},{"title":"[小程序] 收货地址管理","url":"/2019/06/03//articles/2019/06/03/1559566666000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/lq_lq314/article/details/72885725\" target=\"_blank\">微信小程序 选择收货地址、新增地址、地址管理等模块的总结</a>\n<a href=\"https://github.com/liuqian0413/addAddree\" target=\"_blank\">收货地址管理</a>\n\n<a href=\"http://www.php.cn/xiaochengxu-408492.html\" target=\"_blank\">微信小程序商城开发之实现用户收货地址管理页面的代码</a>\n<a href=\"https://www.cnblogs.com/xuzhengzong/p/7544333.html\" target=\"_blank\">小程序 获取微信自带的收货地址获取和整理</a>\n","tags":["小程序"]},{"title":"[小程序] radio样式","url":"/2019/06/03//articles/2019/06/03/1559566665000.html/","content":"<a href=\"https://www.cnblogs.com/xinjie-just/p/5911086.html\" target=\"_blank\">css radio样式</a>\n<a href=\"https://www.fesugar.com/wp/1499.html\" target=\"_blank\">小程序radio默认样式更改</a>\n<a href=\"https://www.jianshu.com/p/43400c5ccd4b\" target=\"_blank\">小程序中修改checkbox和radio的样式</a>\n<a href=\"https://blog.csdn.net/qq_41617704/article/details/80973966\" target=\"_blank\">小程序radio 自定样式的坑（选中颜色，背景）</a>\n\n1、首先选中背景再wxml中设置为白色\n```\n<!-- radiogroup 布局 -->\n<radio-group bindchange=\"radioChange\" >\n    <label wx:for=\"{{cartArr}}\">\n        <radio value=\"{{index}}\" color='#fff'></radio>\n        <view>{{item.name}}</view>\n        <!-- 其他布局代码 -->    \n    </label>   \n</radio-group>\n```\n\n2、中间圆点的实现\n```\nradio .wx-radio-input.wx-radio-input-checked::before{\n   border-radius: 50%;\n   width: 20rpx; \n   height: 20rpx; \n   text-align: center;\n   font-size:0rpx; /* 对勾大小 去掉 */\n   background-color: #00f; \n   transform:translate(-50%, -50%) scale(1);\n   -webkit-transform:translate(-50%, -50%) scale(1);\n}\n```\n\n3、radio外边框\n```\nradio{\n  border-radius: 50%;\n  width: 40rpx;/* 最好是4的倍数，不然会不在中间 */\n  height: 40rpx;\n  border: 2rpx solid #666;/* 设置边框（外圆） */\n  font-size: 0;/* 让边框重合 */\n}\nradio .wx-radio-input{\n   border-radius: 50%;\n   width: 40rpx;\n   height: 40rpx; \n   border: none;/* 替换边框（隐藏原有边框） */\n}\n```","tags":["小程序"]},{"title":"[小程序] 悬浮按钮","url":"/2019/06/03//articles/2019/06/03/1559566663000.html/","content":"<a href=\"https://www.jianshu.com/p/b5b0b8fcf6b5\" target=\"_blank\">悬浮按钮</a>\n\nwxml代码\n```xml\n<image\n\tbindtap='floatBtnTap'\n\tstyle='position:fixed;width:80rpx;height:80rpx;position:fixed;bottom:60rpx;right:40rpx;' \n\tsrc=\"../../path/to.png\"/>\n```\n\nJS代码\n```\n  //悬浮按钮点击事件\n  floatBtnTap: function(e) {\n    wx.navigateTo({\n      url: '/path/to',\n      success: function(res) {},\n      fail: function(res) {},\n      complete: function(res) {},\n    });\n  },\n```","tags":["小程序"]},{"title":"[小程序] 自定义modal弹窗","url":"/2019/06/03//articles/2019/06/03/1559566662000.html/","content":"<a href=\"https://blog.csdn.net/solocoder/article/details/80696752\" target=\"_blank\">自定义modal弹窗</a>\n<a href=\"https://blog.csdn.net/qq_37268201/article/details/85252318\" target=\"_blank\">自定义modal弹窗组件</a>\n```\nmodal.wxml 、modal.wxss 、modal.js 、modal.json\n```\n\nmodal.wxml\n```\n<view class='mask' wx:if='{{show}}' bindtap='clickMask'>\n  <view class='modal-content' style='width:{{width}};height:{{height}}'>\n    <scroll-view scroll-y class='main-content'>\n      <slot></slot>\n    </scroll-view>\n  </view>\n</view>\n```\n\n包含按钮\n```\n<view class='mask' wx:if='{{show}}' bindtap='clickMask'>\n  <view class='modal-content' style='height:{{height}}'>\n    <scroll-view scroll-y class='main-content'>\n      <slot></slot>\n    </scroll-view>\n    <view class='modal-btn-wrapper'>\n      <view class='cancel-btn' style='color:rgba(7,17,27,0.6)' bindtap='cancel'>取消</view>\n      <view class='confirm-btn' style='color:#13b5f5' bindtap='confirm'>确定</view>\n    </view>\n  </view>\n</view>\n```\n\nmodal.wxss\n```\n.mask{\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0,0,0,0.4);\n  z-index: 9999;\n}\n\n.modal-content{\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  /* height: 80%; */\n  background-color: #fff;\n  border-radius: 10rpx;\n}\n\n.modal-btn-wrapper{\n  display: flex;\n  flex-direction: row;\n  height: 100rpx;\n  line-height: 100rpx;\n  border-top: 2rpx solid rgba(7,17,27,0.1);\n}\n\n.cancel-btn, .confirm-btn{\n  flex: 1;\n  height: 100rpx;\n  line-height: 100rpx;\n  text-align: center;\n  font-size: 32rpx;\n}\n\n.cancel-btn{\n  border-right: 2rpx solid rgba(7,17,27,0.1);\n}\n\n.main-content{\n  flex: 1;\n  height: 100%;\n  overflow-y: hidden; \n}\n```\n\nmodal.js\n```\n/**\n * 自定义modal浮层\n * 使用方法：\n * <modal show=\"{{showModal}}\" height='60%' bindcancel=\"modalCancel\" bindconfirm='modalConfirm'>\n     <view>你自己需要展示的内容</view>\n  </modal>\n\n  属性说明：\n  show： 控制modal显示与隐藏\n  height：modal的高度\n  bindcancel：点击取消按钮的回调函数\n  bindconfirm：点击确定按钮的回调函数\n\n  使用模块：\n  场馆 -> 发布 -> 选择使用物品\n */\n\nComponent({\n\n  /**\n   * 组件的属性列表\n   */\n  properties: {\n    //是否显示modal\n    show: {\n      type: Boolean,\n      value: false\n    },\n    //modal的高度\n    height: {\n      type: String,\n      value: '80%'\n    }\n  },\n\n  /**\n   * 组件的初始数据\n   */\n  data: {\n\n  },\n\n  /**\n   * 组件的方法列表\n   */\n  methods: {\n    clickMask() {\n      // this.setData({show: false})\n    },\n\n    cancel() {\n      this.setData({ show: false })\n      this.triggerEvent('cancel')\n    },\n\n    confirm() {\n      this.setData({ show: false })\n      this.triggerEvent('confirm')\n    }\n  }\n});\n\n```\n\nmodal.json\n```\n{\n  \"component\": true,\n  \"usingComponents\": {}\n}\n```\n\nhome.wxml\n```\n<modal show=\"{{showModal}}\" height='60%' bindcancel=\"modalCancel\" bindconfirm='modalConfirm'>\n   <view class='modal-content'>你自己的布局</view>\n</modal>\n\n\n{\n showModal: true\n}\n\n```","tags":["小程序"]},{"title":"[小程序] 动态修改tabbar","url":"/2019/06/03//articles/2019/06/03/1559566661000.html/","content":"<a href=\"https://www.cnblogs.com/fancyblogs/p/9203473.html\" target=\"_blank\">动态修改tabbar</a>\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.setNavigationBarColor.html\" target=\"_blank\">官方api</a>\n\n动态修改NavigationBar\n```js\nwx.setNavigationBarColor({\n   frontColor:\"#ffffff\",\n   backgroundColor:'#000000'\n});\n```\n\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.setTabBarStyle.html\" target=\"_blank\">官方接口地址</a>\n```js\nwx.setTabBarStyle({\n  color: '#FF0000',\n  selectedColor: '#00FF00',\n  backgroundColor: '#0000FF',\n  borderStyle: 'white'\n});\nwx.setTabBarItem({\n  index: 0,\n  text: 'text',\n  iconPath: '/path/to/iconPath',\n  selectedIconPath: '/path/to/selectedIconPath'\n});\n```\n\n","tags":["小程序"]},{"title":"[小程序] 引入百度api天气预报","url":"/2019/06/03//articles/2019/06/03/1559566660000.html/","content":"<a href=\"https://www.cnblogs.com/bin521/p/10177531.html\" target=\"_blank\">引入百度api天气预报</a>\n\n","tags":["小程序"]},{"title":"[小程序] 使用module和class封装和提取一个对象","url":"/2019/06/03//articles/2019/06/03/1559566659000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/hxfghgh/article/details/82830700\" target=\"_blank\">使用module和class封装和提取一个对象</a>\n<a href=\"https://blog.csdn.net/mygirlgod/article/details/81055863\" target=\"_blank\">小程序page的js中调用新的js类对象</a>\n<a href=\"https://www.jianshu.com/p/9d104e169002\" target=\"_blank\">小程序js模块化</a>\n","tags":["小程序"]},{"title":"[小程序] 自定义组件Component的使用","url":"/2019/06/03//articles/2019/06/03/1559566658000.html/","content":"<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/component.html\" target=\"_blank\">微信官方文档 - Component构造器</a>\n\n<a href=\"https://github.com/fuxingkai/frankui-weapp\" target=\"_blank\">github | frankui-weapp | 自定义组件</a>\n<a href=\"https://github.com/ChanceYu/weapp\" target=\"_blank\">github | weapp | 自定义组件</a>\n<a href=\"https://github.com/phonycode/wuss-weapp\" target=\"_blank\">github | wuss-weapp | 一款高质量，组件齐全，高自定义的微信小程序 UI 组件库</a>\n\n<a href=\"https://github.com/search?l=JavaScript&q=%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6&type=Repositories\" target=\"_blank\">github | 小程序 | 自定义组件</a>\n<a href=\"https://github.com/zhu12345618/slotDemo\" target=\"_blank\">slotDemo</a>\n<a href=\"https://github.com/zhu12345618/componentEventTest\" target=\"_blank\">componentEventTest</a>\n<a href=\"https://blog.csdn.net/qq_17470165/article/details/81211923\" target=\"_blank\">自定义组件Component的使用</a>\n<a href=\"https://www.jianshu.com/p/17b7b15e72b3\" target=\"_blank\">小程序-component组件</a>\n<a href=\"https://www.jianshu.com/p/8a2a730d9e60/\" target=\"_blank\">手把手教你实现微信小程序中的自定义组件</a>\n","tags":["小程序"]},{"title":"[小程序] 分页请求工具类及使用","url":"/2019/06/03//articles/2019/06/03/1559566657000.html/","content":"<a href=\"https://cdn.jsdelivr.net/npm/es6-promise/dist/es6-promise.min.js\" target=\"_blank\">es6-promise.min.js</a>\n\nutils/promise.js\n```js\n'use strict';\nimport Promise from './es6-promise.min'\n\nmodule.exports = {\n\n  get(url, header) {\n    var headerParam = {\n      \"Content-Type\": 'application/json',\n    };\n\n    return new Promise((resolve, reject) => {\n      wx.showLoading();\n      wx.request({\n        url: url,\n        header: headerParam,\n        success: function (res) {\n          resolve(res)\n        },\n        fail: function (res) {\n          reject(res)\n        },\n        complete: function () {\n          wx.hideLoading();\n        }\n      })\n    })\n  },\n\n  post(url, data, header) {\n    var headerParam = {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    };\n\n    return new Promise((resolve, reject) => {\n      wx.showLoading();\n      wx.request({\n        url: url,\n        data: data,\n        method: 'POST',\n        header: headerParam,\n        success: function (res) {\n          resolve(res)\n        },\n        fail: function (res) {\n          reject(res)\n        },\n        complete: function () {\n          wx.hideLoading();\n        }\n      })\n    })\n  },\n\n  postJson(url, data, header) {\n    var headerParam = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    return new Promise((resolve, reject) => {\n      wx.showLoading();\n      wx.request({\n        url: url,\n        data: data,\n        method: 'POST',\n        header: headerParam,\n        success: function(res) {\n          resolve(res)\n        },\n        fail: function(res) {\n          reject(res)\n        },\n        complete: function () {\n          wx.hideLoading();\n        }\n      })\n    })\n  },\n\n  json2Form(json) {\n    var str = []\n    for (var p in json) {\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(json[p]))\n    }\n    return str.join(\"&\")\n  }\n\n};\n```\n\nutils/PageUtil.js\n```js\nvar api = require('./promise');\n\nclass PageUtil {\n\n  constructor(context, listName, method, url, paramNames = [\"limit\", \"page\"], paramValues = [10, 0], resultListPath) {\n    this.context = context;\n\n    this.listName = listName;\n    if(!this.context.data[listName]){\n      this.context.setData({\n        [listName]:[]\n      });\n    }\n    this.method = method.toLowerCase();\n    this.url = url;\n\n    //======== 构建分页参数 start ========\n    this.limitName = paramNames[0];\n    this.originPageNum = paramValues[1];\n    this.pageName = paramNames[1];\n    this.resultListPath = resultListPath;\n\n    this.pageParams = {};\n    this.extraParams = {};\n    for (var i in paramNames) {\n      this.pageParams[paramNames[i]] = paramValues[i];\n    }\n    //======== 构建分页参数 end ========\n  };\n\n\n  //============ json多层取值 ============\n  getJsonByPath(json, jsonpath) {\n    // var paths = jsonpath.split(\".\");\n    var paths = jsonpath.replace(/\\[/g, \".\").replace(/\\]/g, \".\").replace(/\\.\\./g, \".\").split(\".\");\n    var obj = json;\n    for (var i in paths) {\n      console.log(obj)\n      obj = obj[paths[i]]\n    }\n    return obj;\n  }\n\n  reset() {\n    //起始页数还原\n    this.pageParams[this.pageName] = this.originPageNum;\n    //列表还原\n    this.context.setData({\n      [this.listName]: []\n    });\n  };\n\n  //设置额外参数\n  setExtraParams(conditions) {\n    // console.log(conditions)\n    if (!!conditions) {\n      this.extraParams = conditions;\n    } else {\n      this.extraParams = {};\n    }\n  }\n\n  fetchMore(success, complete) {\n    var self = this;\n    var method = this.method;\n\n    //内联函数 处理get和post返回结果\n    var resolve = function(res) {\n      //============ json多层取值 ============\n      var pageList = self.getJsonByPath(res, self.resultListPath);\n      if (pageList == null || pageList.length == 0) {\n        typeof success == 'function' && success(res, pageList);\n        return;\n      }\n\n      typeof success == 'function' && success(res, pageList);\n\n      //请求参数中的页码加 1\n      self.pageParams[self.pageName]++;\n      // console.log(self.pageParams);\n      // console.log(self.getJsonByPath(self.context.data, self.listName));\n\n      self.context.setData({\n        [self.listName]: self.getJsonByPath(self.context.data, self.listName).concat(pageList)\n      });\n\n      typeof complete == 'function' && complete(res, pageList);\n    }\n\n    var pageParams =page;\n    var extraParams = self.extraParams;\n    //请求参数\n    console.log(\"====== 分页请求参数 ========\");\n    console.log({\n      ...pageParams,\n      ...extraParams\n    });\n    if (method == 'get') {\n      api.get(self.url + \"?\" + api.json2Form({\n        ...pageParams,\n        ...extraParams\n      })).then(res => {\n        resolve(res);\n      });\n    } else if (method == 'post') {\n      api.post(self.url, {\n        ...pageParams,\n        ...extraParams\n      }).then(res => {\n        resolve(res);\n      });\n    } else {\n      console.log(\"==== 未选择请求方式 ====\");\n    }\n  };\n\n}\n\nexport default PageUtil;\n```\n\nlist.js\n```js\nvar config require('../../config.js');\nconst app = getApp();\n\nimport PageUtil from '../../utils/PageUtil.js';\nvar pageUtil = null;\n\nPage({\n  data:{\n    search:'hello'\n  },\n\n  onLoad: function(options) {\n    this.pageUtil = new PageUtil(this, \"arrays\", \"get\", config.path.listUrl, [\"pageSize\", \"pageNum\"], [10, 1],\n      \"data.data.content\");\n  },\n  fetchMore(callback) {\n    this.pageUtil.setExtraParams({\n      search: this.data.search\n    });\n    this.pageUtil.fetchMore((res,array) => {}, (res,array) => {});\n  },\n});\n```\n\n<a href=\"https://blog.csdn.net/lvlynn/article/details/87858657\" target=\"_blank\">关于微信小程序中es6-promise的应用</a>\n<a href=\"http://es6.ruanyifeng.com/#docs/promise\" target=\"_blank\">阮一峰 Promise 对象</a>","tags":["小程序"]},{"title":"[springboot] websocket注入service","url":"/2019/06/03//articles/2019/05/26/1559565046000.html/","content":"<a href=\"https://segmentfault.com/q/1010000010103973\" target=\"_blank\">websocket注入service</a>\n\n<a href=\"https://blog.csdn.net/m0_37202351/article/details/86255132\" target=\"_blank\">spring springboot websocket 不能注入( @Autowired ) service bean 报 null 错误</a>\n```\nspring 或 springboot 的 websocket 里面使用 @Autowired 注入 service 或 bean 时，报空指针异常，service 为 null（并不是不能被注入）。\n\n解决方法：将要注入的 service 改成 static，就不会为null了。\n参考代码：\n\n@Controller\n@ServerEndpoint(value=\"/chatSocket\")\npublic class ChatSocket {\n    //  这里使用静态，让 service 属于类\n    private static ChatService chatService;\n\n    // 注入的时候，给类的 service 注入\n    @Autowired\n    public void setChatService(ChatService chatService) {\n        ChatSocket.chatService = chatService;\n    }\n}\n\n\n本质原因：spring管理的都是单例（singleton），和 websocket （多对象）相冲突。\n详细解释：项目启动时初始化，会初始化 websocket （非用户连接的），spring 同时会为其注入 service，该对象的 service 不是 null，被成功注入。\n\n但是，由于 spring 默认管理的是单例，所以只会注入一次 service。\n当新用户进入聊天时，系统又会创建一个新的 websocket 对象，这时矛盾出现了：spring 管理的都是单例，不会给第二个 websocket 对象注入 service，所以导致只要是用户连接创建的 websocket 对象，都不能再注入了。\n\n像 controller 里面有 service， service 里面有 dao。因为 controller，service ，dao 都有是单例，所以注入时不会报 null；\n\n但是 websocket 不是单例，所以使用spring注入一次后，后面的对象就不会再注入了，会报null\n\n```","tags":["springboot"]},{"title":"[markdown] typroa","url":"/2019/06/03//articles/2019/05/26/1559565045000.html/","content":"<a href=\"https://www.jianshu.com/p/2d9e226113ee\" target=\"_blank\">小程序云开发实战二：小程序云开发云函数安装依赖步骤</a>\n```\n小程序云开发实战一：小程序扫一扫获取到图书ISBN码（图书条形码）\n小程序云开发实战二：小程序云开发云函数安装依赖步骤\n小程序云开发实战三：编写云函数代码\n小程序云开发实战四：调用豆瓣API获取具体的数据\n小程序云开发实战五：如何将获取到的API数据存入云数据库里面\n小程序云开发实战六：云数据库读取的数据显示在小程序端列表里\n小程序云开发实战七：云开发首页列表跳转详情页\n```\n\n<a href=\"https://www.typora.io/#windows\" target=\"_blank\">typora windows版</a>\n<a href=\"https://www.jianshu.com/p/b7fd16a44508\" target=\"_blank\">typora语法</a>\n\n","tags":["markdown"]},{"title":"[mysql] 经纬度计算","url":"/2019/06/03//articles/2019/05/26/1559565044000.html/","content":"<a href=\"https://www.cnblogs.com/jiafuwei/p/5699091.html\" target=\"_blank\">mysql 下 计算 两点 经纬度 之间的距离 含具体sql语句</a>\n<a href=\"https://blog.csdn.net/baidu_29701003/article/details/78542938\" target=\"_blank\">\nJava 经纬度计算两个点的之间的距离</a>\n\n","tags":["mysql"]},{"title":"[git] 从远程仓库获取所有分支","url":"/2019/06/03//articles/2019/05/26/1559565043000.html/","content":"<a href=\"https://blog.csdn.net/wu1169668869/article/details/83345633\" target=\"_blank\">git从远程仓库获取所有分支</a>\n","tags":["git"]},{"title":"[centos] 搭建git服务器","url":"/2019/06/03//articles/2019/05/26/1559565042000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/gattaca/p/6252416.html\" target=\"_blank\">CentOS搭建git服务器</a>\n<a href=\"https://www.cnblogs.com/fly_dragon/p/8718614.html\" target=\"_blank\">csdn | CentOS搭建Git服务器及权限管理</a>\n<a href=\"https://www.jianshu.com/p/a0eb79fa5b8d\" target=\"_blank\">简书 | CentOS搭建Git服务器及权限管理</a>\n<a href=\"https://blog.csdn.net/bbcckkl/article/details/81634761\" target=\"_blank\">Git丨在CentOS下搭建私有的git服务器</a>\n<a href=\"https://www.haorooms.com/post/centos_git\" target=\"_blank\">gitosis搭建git服务器</a>\n```\n#允许使用service\ndocker run --privileged -dit -p 18080:8080 -p 10443:443 -p 10080:80 -p 10022:22 -p 3690:3690 --name gitserver centos /usr/sbin/init\n\n\n#docker 使用中遇到的问题记录： cgroups: cannot find cgroup mount destination: unknown.\n#进入虚拟机\ndocker-machine ssh default\nsudo mkdir /sys/fs/cgroup/systemd\nsudo mount -t cgroup -o none,name=systemd cgroup /sys/fs/cgroup/systemd\n\n#0. docker构建centos镜像\ndocker run -dit -p 18080:8080 -p 10443:443 -p 10080:80 -p 10022:22 -p 3690:3690 --name gitserver centos\ndocker start gitserver\ndocker exec -it gitserver /bin/bash\n\n#1. 安装git、sshd 和 service命令\n#yum list | grep initscripts\nyum -y install initscripts git openssh-server vim passwd\n\n#2. 创建用户git\ngroupadd git\nadduser git -g git\n\n#3. 创建 authorized_keys 文件\ncd /home/git\nmkdir .ssh\nchmod 744 .ssh\ntouch .ssh/authorized_keys\nchmod 644 .ssh/authorized_keys\ncd /home\nchown -R git:git git\n\n#4. 客户端创建密钥并上传\n#客户端运行如下命令\n#ssh-keygen -t rsa -C \"your_email\"\nssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa\nnotepad ~/.ssh/id_rsa.pub\n\n#5. 创建git仓库\ncd /home\nmkdir gitrepo\nchown git:git gitrepo\ncd gitrepo\n#名为sample\ngit init --bare sample.git\nchown -R git:git sample.git\n\n```\n\n<a href=\"https://www.cnblogs.com/liuhouhou/p/8975812.html\" target=\"_blank\">CentOS 7安装和配置ssh</a>\n```\npasswd git\nhelloworld\n\nvim /etc/ssh/sshd_config\n#将以下设置打开\nPermitRootLogin no\nRSAAuthentication yes\nPubkeyAuthentication yes\n\nservice sshd restart\n```\n\n测试拉取\n```\ngit clone git@127.0.0.1:/home/gitrepo/sample.git\n\n#端口在非22的情况下（如10022）\ngit clone ssh://git@192.168.99.100:10022/home/gitrepo/sample.git\n```\n\n<a href=\"https://www.cnblogs.com/gyfluck/p/9598360.html\" target=\"_blank\">Git学习之常见错误 clone被拒绝</a>\n```\nchown -R git:git /home/git/.ssh\n\nsu git\ncd /home/git\nchmod 700 .ssh\ncd .ssh\nchmod 600 authorized_keys\n\n\nls /usr/bin/git-shell\nvim /etc/passwd\ngit:x:1001:1001:,,,:/home/git:/bin/bash  \n#最后一个冒号后改为：\ngit:x:1001:1001:,,,:/home/git:/usr/bin/git-shell\n\n```\n\n<a href=\"https://www.runoob.com/w3cnote/set-ssh-login-key.html\" target=\"_blank\">设置 SSH 通过密钥登录</a>\n```\n```\n\n<a href=\"https://segmentfault.com/a/1190000012002841\" target=\"_blank\">在CentOS上搭建git服务器</a>\n```\ndocker run -dit -p 18080:8080 -p 10443:443 -p 10080:80 -p 10022:22 -p 3690:3690 --name gitserver centos\ndocker exec -it gitserver /bin/bash\nyum install -y git\ngit --version\nmkdir /git\ncd /git\ngit init --bare test\nchown -R root:root test\n\ngit clone root@127.0.0.1:/git/test\n\ngit clone root@192.168.100:10022:/git/test\ngit status\ngit add -A .\ngit commit -m'test'\ngit push\n```\n","tags":["centos"]},{"title":"[centos] apache+httpd+django","url":"/2019/06/03//articles/2019/05/26/1559565041000.html/","content":"<a href=\"https://www.cnblogs.com/starof/p/4685132.html\" target=\"_blank\">centos7 apache httpd安装和配置django项目</a>\n","tags":["centos"]},{"title":"[npm] node安装","url":"/2019/06/03//articles/2019/05/26/1559565040000.html/","content":"<a href=\"https://www.runoob.com/nodejs/nodejs-install-setup.html\" target=\"_blank\">node安装</a>\n","tags":["npm"]},{"title":"[es6] 操作数组的常用方法","url":"/2019/06/03//articles/2019/06/03/1559564802000.html/","content":"<a href=\"https://www.jianshu.com/p/e1b43e56de08\" target=\"_blank\">es6操作数组的常用方法</a>\n","tags":["es6"]},{"title":"[es6] 创建类","url":"/2019/06/03//articles/2019/06/03/1559564801000.html/","content":"<a href=\"https://www.cnblogs.com/zczhangcui/p/6528039.html\" target=\"_blank\">es6创建类</a>\n<a href=\"https://www.jianshu.com/p/86267fab4878\" target=\"_blank\">es6中class类的全方面理解（一）</a>\n","tags":["es6"]},{"title":"[es6] 多层json取值","url":"/2019/06/03//articles/2019/06/03/1559564800000.html/","content":"<a href=\"https://www.jianshu.com/p/9ea79e052c84\" target=\"_blank\">使用jsonpath解析多层嵌套的json响应信息</a>\n\n示例\n```\nvar msg = {\n\tdata:{\n\t\tdata:{\n\t\t\tcontent:[{\n\t\t\t\tname:'hello',\n\t\t\t\tvalue:123,\n\t\t\t}]\n\t\t}\n\t}\n};\nvar jsonpath = \"data.data.content\";\nvar paths = jsonpath.split(\".\");\nvar obj = msg;\nfor(var i in paths){\n\tobj = obj[paths[i]]\n}\nconsole.log(obj);\nconsole.log(msg);\n```","tags":["es6"]},{"title":"[es6] es6删除目标对象的某一个属性","url":"/2019/06/03//articles/2019/06/03/1559564799000.html/","content":"<a href=\"https://blog.csdn.net/qq_34543252/article/details/85272854\" target=\"_blank\">es6删除目标对象的某一个属性</a>\n\n```\nconst person = {\n  name: 'jazz',\n  gender: 'male',\n  age: 24\n};\n```\n\n删除目标对象的某一个属性\n\n方法1：\n```\nconst personUnkonwAge = (({name, gender}) => ({name,gender}))(person)\nconsole.log(personUnkonwAge)\nconsole.log(person);\n```\n方法2：\n```\nlet {name, ...personUnknowName} = person;\nconsole.log(personUnknowName);\n```","tags":["es6"]},{"title":"[springboot] spring-data-jpa-demo包含分页","url":"/2019/05/26//articles/2019/05/26/1558838903000.html/","content":"<a href=\"https://github.com/icnws/spring-data-jpa-demo\" target=\"_blank\">spring-data-jpa-demo包含分页</a>\n","tags":["springboot"]},{"title":"[ubuntu] postfix邮件服务器","url":"/2019/05/26//articles/2019/05/26/1558838900000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/pinganzi/p/8252863.html\" target=\"_blank\">Ubuntu16.04搭建Postfix作为SMTP服务器</a>\n<a href=\"https://blog.csdn.net/tianjiewang/article/details/83029903\" target=\"_blank\">ubuntu 14.04 安装postfix服务</a>\n```\necho \"example.com\" > /etc/hostname\n\n#安装postfix\napt update\napt install mailutils\n\n\nvim /etc/postfix/main.cf\nmyhostname = mail.example.com\nmydomain = example.com\nmydestination = $myhostname, localhost.$mydomain, $mydomain\ninet_interfaces = loopback-only\n\n#测试发邮件\necho \"body of the email\" | mail -s \"subject line\" your_email_address\n\nls /var/spool/mail/\n```\n<a href=\"https://www.cnblogs.com/yejunfeng/p/6711910.html\" target=\"_blank\">javamail+postfix发送邮件</a>\n<a href=\"https://www.chrisyue.com/config-postfix-as-a-send-only-mail-server.html\" target=\"_blank\">使用 Postfix 设置只发送邮件的邮件服务</a>\n\n<a href=\"http://www.pianshen.com/article/1051171056/\" target=\"_blank\">Ubuntu系统服务器配置,(包含postfix)</a>\n\n<a href=\"https://www.cnblogs.com/bhlsheji/p/5342619.html\" target=\"_blank\">Linux下Postfix的配置和使用</a>\n```\nservice sendmail stop\nchkconfig sendmail off\nrpm -qa | grep sendmail | xargs rpm -e\n\nrpm -qa | grep postifx\nyum install postfix\n\nvi /etc/postfix/main.cf\nmyhostname = sample.test.com\nmydomain = test.com\nmyorigin = $mydomain\ninet_interfaces = all\n\nmydestination = $myhostname, localhost.$mydomain, localhost, $mydomain\nhome_mailbox = Maildir/\n```\n\n<a href=\"http://blog.topspeedsnail.com/archives/5210\" target=\"_blank\">Ubuntu 16.04 安装配置 Postfix</a>\n```\n```","tags":["ubuntu"]},{"title":"[centos] rsync","url":"/2019/05/26//articles/2019/05/26/1558838899000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n```\n```\n","tags":["centos"]},{"title":"[api] 百度天气","url":"/2019/05/26//articles/2019/05/26/1558838897000.html/","content":"<a href=\"https://www.cnblogs.com/wangchengshen/p/3668946.html\" target=\"_blank\">百度天气预报接口使用详细</a>\n\n接口说明\n```\n根据经纬度/城市名查询天气的结果\n```\n\n接口示例\n```\nhttp://api.map.baidu.com/telematics/v3/weather?location=北京&output=json&ak=826e806b86676d155282de3d37188137\n```\n","tags":["api"]},{"title":"[sass] 使用入门教程","url":"/2019/05/26//articles/2019/05/26/1558838895000.html/","content":"<a href=\"https://www.cnblogs.com/morong/p/4329957.html\" target=\"_blank\">sass使用入门教程</a>\n","tags":["sass"]},{"title":"[面试] 10道经典小程序面试题","url":"/2019/05/26//articles/2019/05/26/1558838894000.html/","content":"<a href=\"https://www.jianshu.com/p/832bec01de37\" target=\"_blank\">10道经典小程序面试题</a>\n```\n1、简单描述下微信小程序的相关文件类型？\n2、你是怎么封装微信小程序的数据请求的？\n3、有哪些参数传值的方法？\n4、你使用过哪些方法，来提高微信小程序的应用速度？\n5、小程序与原生App哪个好？\n6、简述微信小程序原理？\n7、分析下微信小程序的优劣势？\n8、微信小程序与H5的区别？\n9、怎么解决小程序的异步请求问题？\n10、小程序的双向绑定和vue哪里不一样？\n```\n<a href=\"https://www.jianshu.com/p/7821aab256a8\" target=\"_blank\">微信小程序必知面试题</a>\n```\n1 请谈谈微信小程序主要目录和文件的作用？\n2 请谈谈wxml与标准的html的异同？\n3 请谈谈WXSS和CSS的异同？\n4 你是怎么封装微信小程序的数据请求的？\n5 小程序页面间有哪些传递数据的方法？\n6 请谈谈小程序的双向绑定和vue的异同？\n7 请谈谈小程序的生命周期函数？\n8 简述微信小程序原理？\n9 请谈谈原生开发小程序、wepy、mpvue 的对比？\n```","tags":["面试"]},{"title":"[小程序] 推广","url":"/2019/05/23//articles/2019/05/23/1558610945000.html/","content":"<a href=\"https://www.sass.hk/docs/\" target=\"_blank\">最全！17个小程序推广渠道汇总，收藏了！</a>\n```\n1、通过名称做搜索优化\n2、优化小程序关键词\n3、附近的小程序\n4、钱包入口页广告\n5、通过好友分享和朋友圈推广\n6、微信公众号\n  1、公众号文章入口\n  1）文字跳转\n  2）图片跳转\n  3）卡片跳转\n  2、底部菜单\n  3、门店小程序\n  4、微信卡券小程序\n7、广点通\n8、朋友圈广告\n9、社交立减金\n10、聊天小程序\n11、App分享\n12、模板消息\n13、收款页面\n14、小程序商店\n15、自媒体软广\n16、运营公司推广\n17、通过二维码线下推广\n\n\n```","tags":["小程序"]},{"title":"[小程序] 图片裁剪插件","url":"/2019/05/23//articles/2019/05/23/1558610944000.html/","content":"<a href=\"https://github.com/wx-plugin/image-cropper\" target=\"_blank\">github | image-cropper | 图片裁剪插件</a>","tags":["小程序"]},{"title":"[小程序] 调用component中的方法","url":"/2019/05/23//articles/2019/05/23/1558610943000.html/","content":"<a href=\"https://blog.csdn.net/qq_36611526/article/details/80567964\" target=\"_blank\">调用component中的方法</a>\n\n```\nonReady:function(){\n\tthis.toast = this.selectComponent(\"#toast\");\n\tthis.toast.showToast();\n}\n```\n\nhttps://github.com/zhu12345618/componentEventTest\n<a href=\"https://blog.csdn.net/u013654125/article/details/80733767\" target=\"_blank\">微信小程序自定义组件Component总结</a>\n```\n四、组件与外部通信事件\n\n上面的\"myProperty\"是父节点设置数据到组件里，组件传数据到父节点是用事件的方式。\n\n注册事件，index.wxml和index.js：\n\n<!-- 引用组件的页面模版 -->\n<view>\n  <my-component id=\"test\" bindmyevent=\"myEventListener\">\n     <view>这里是插入到组件slot中的内容</view> \n  </my-component>\n \n  <!-- 或者可以写成 -->\n  <!--\n    <my-component id=\"test\" bindmyevent=\"myEventListener\">\n     <view>这里是插入到组件slot中的内容</view> \n    </my-component>\n   -->\n</view>\n监听事件：\n\nPage({\n  data: {\n \n  },\n  onLoad : function() {\n      console.log(this.selectComponent(\"#test\"));\n  },\n  myEventListener: function(e) {\n    console.log(\"Event in index\")\n  }\n})\n\n发射事件component-tag-name.wxml和component-tag-name.js：\n\n<!-- 组件模板 -->\n<view class=\"wrapper\">\n  <button bindtap=\"onTap\">点击这个按钮将触发“myevent”事件</button>\n</view>\n// components/component-tag-name.js\nComponent({\n  properties: {},\n  methods: {\n    onTap: function () {\n      var myEventDetail = {} // detail对象，提供给事件监听函数\n      var myEventOption = {} // 触发事件的选项\n      this.triggerEvent('myevent', myEventDetail, myEventOption)\n    }\n  }\n})\n--------------------- \n作者：_大猪 \n来源：CSDN \n原文：https://blog.csdn.net/u013654125/article/details/80733767 \n版权声明：本文为博主原创文章，转载请附上博文链接！\n```","tags":["小程序"]},{"title":"[小程序] 适配华为","url":"/2019/05/23//articles/2019/05/23/1558610942000.html/","content":"<a href=\"https://blog.csdn.net/qq_35432904/article/details/83022301\" target=\"_blank\">适配华为</a>\n\napp.json\n```\nApp({\n\n  globalData: {\n    isHuaWei: false,\n  },\n  onShow:function(){\n    let that = this;\n    wx.getSystemInfo({\n      success:  res=>{\n        // console.log('手机信息res'+res.model)\n        let brand= res.brand;\n        if (brand.search('HUAWEI') != -1) {\n           that.globalData.isHuaWei = true\n        } \n      }\n    }) \n  },\n\n});\n```","tags":["小程序"]},{"title":"[小程序] 使用sass","url":"/2019/05/23//articles/2019/05/23/1558610941000.html/","content":"<a href=\"https://www.sass.hk/guide/\">sass指南</a>\n<a href=\"https://www.cnblogs.com/cshi/p/5622650.html\" target=\"_blank\">webstorm下设置sass</a>\n<a href=\"https://blog.csdn.net/gao_xu_520/article/details/77731768\" target=\"_blank\">Sass创建简单的项目</a>\n<a href=\"https://www.sass.hk/docs/\" target=\"_blank\">官方sass文档</a>\n<a href=\"https://blog.csdn.net/qq_33024515/article/details/85100597\" target=\"_blank\">webstorm+sass</a>\n<a href=\"https://www.jianshu.com/p/9330fc55c745\" target=\"_blank\">小程序使用sass</a>\n<a href=\"https://www.jianshu.com/p/a99764ff3c41\" target=\"_blank\">SCSS 教程</a>\n\n<a href=\"https://www.jb51.net/softs/598714.html\">WebStorm 2019.1 激活汉化特别版(附注册码+汉化包+安装教程)</a>\n\n<a href=\"https://www.jb51.net/softs/547471.html\">WebStorm 2019 汉化包下载地址</a>\n\n<a href=\"http://jjbig.lvith.cn:8080/201802/tools/WebStormzh_jb51.rar\">WebStorm 2019 汉化包.rar</a>\nwebstorm 2018.2注册码如下：\n```\n{\n\t\"licenseId\":\"ThisCrackLicenseId\",\n\t\"licenseeName\":\"Rover12421\",\n\t\"assigneeName\":\"Rover12421\",\n\t\"assigneeEmail\":\"rover12421@163.com\",\n\t\"licenseRestriction\":\"By Rover12421 Crack, Only Test! Please support \tgenuine!!!\",\n\t\"checkConcurrentUse\":false,\n\t\"products\":[\n\t\t{\"code\":\"II\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"DM\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"AC\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"RS0\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"WS\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"DPN\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"RC\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"PS\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"DC\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"RM\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"CL\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"PC\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"DB\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"GO\",\"paidUpTo\":\"2099-12-31\"},\n\t\t{\"code\":\"RD\",\"paidUpTo\":\"2099-12-31\"}\n\t],\n\t\"hash\":\"2911276/0\",\n\t\"gracePeriodDays\":7,\n\t\"autoProlongated\":false\n}\n```\n\n```\nhttp://rubyinstaller.org/downloads/\n官网下载：\nhttps://www.ruby-lang.org/\n\ngem install sass\ngem sources –r http://rubygems.org/\ngem sources –a http://ruby.taobao.org/\ngem sources –l\nsass –v\n\n\n```","tags":["小程序"]},{"title":"[小程序] 慕课网","url":"/2019/05/23//articles/2019/05/23/1558610940000.html/","content":"<a href=\"https://github.com/MrLeihe/GeekUI-WeApp\" target=\"_blank\">github | GeekUI-WeApp</a>","tags":["小程序"]},{"title":"[小程序] 获取状态栏高度","url":"/2019/05/23//articles/2019/05/23/1558610939000.html/","content":"<a href=\"https://blog.csdn.net/qq_42445490/article/details/88827164\" target=\"_blank\">webstorm下设置sass</a>\n\napp.js\n```\n\nApp({\n  onShow: function() {\n  \tvar self = this;\n    wx.getSystemInfo({\n        success: function (res) {\n            self.globalData.statusBarHeight = res.statusBarHeight\n        }\n        console.log(res.statusBarHeight, 'statusBarHeight')\n    });\n  },\n});\n```\n\nindex.js\n```\nconst app = getApp();\npage({ \n    data: {\n        statusBarHeight: app.globalData.statusBarHeight\n    },\n});\n```","tags":["小程序"]},{"title":"[小程序] 分享朋友圈","url":"/2019/05/23//articles/2019/05/23/1558610938000.html/","content":"<a href=\"https://blog.csdn.net/baozhuona/article/details/78570483\" target=\"_blank\">分享到朋友圈</a>\n<a href=\"https://blog.csdn.net/bocongbo/article/details/84934973\" target=\"_blank\">微信小程序分享朋友圈</a>\n<a href=\"https://www.jianshu.com/p/ec9a620222d6\" target=\"_blank\">小程序图片长按识别功能的实现</a>\n<a href=\"https://github.com/jasondu/wxa-plugin-canvas\" target=\"_blank\">小程序海报组件-生成朋友圈分享海报并生成图片</a>\n","tags":["小程序"]},{"title":"[小程序] 点餐","url":"/2019/05/23//articles/2019/05/23/1558610937000.html/","content":"<a href=\"https://blog.csdn.net/codingnoob/article/details/81807285\" target=\"_blank\">点餐</a>\n<a href=\"https://gitee.com/zhongyoucong/order-project\" target=\"_blank\">gitee | 点餐</a>\n","tags":["小程序"]},{"title":"[小程序] 城市天气","url":"/2019/05/23//articles/2019/05/23/1558610936000.html/","content":"<a href=\"https://www.cnblogs.com/zytrue/p/8548374.html\" target=\"_blank\">微信小程序开发显示城市天气</a>\n","tags":["小程序"]},{"title":"[小程序] swiper左右箭头","url":"/2019/05/23//articles/2019/05/23/1558610935000.html/","content":"<a href=\"https://www.jianshu.com/p/b9b2a6aca180\">swiper左右箭头</a>\n","tags":["小程序"]},{"title":"[小程序] scroll-into-view","url":"/2019/05/23//articles/2019/05/23/1558610934000.html/","content":"<a href=\"https://github.com/dadtakesmefly/wxapp-scroll-into-view\" target=\"_blank\">github | wxapp-scroll-into-view</a>\n","tags":["小程序"]},{"title":"[小程序] 使用sass","url":"/2019/05/23//articles/2019/05/23/1558610933000.html/","content":"<a href=\"http://www.showhtml5.cc/archives/503\">blog / h5网页跳转到小程序</a>\n<a href=\"https://www.cnblogs.com/excellencesy/p/9596578.html\">小程序与h5的相互跳转</a>\n```\n目前只支持小程序内嵌H5,并且只有内嵌的H5才能跳回小程序\n```","tags":["小程序"]},{"title":"[小程序] easyui组件tabs","url":"/2019/05/23//articles/2019/05/23/1558610932000.html/","content":"<a href=\"https://www.cnblogs.com/code-xia/p/10260539.html\" target=\"_blank\">微信小程序-tab标签栏实现教程</a>\n<a href=\"https://github.com/qq865738120/easyUI\" target=\"_blank\">github | easyUI</a>\n<a href=\"https://github.com/qq865738120/easyUI/tree/master/component/senior/tabs\" target=\"_blank\">github | tabs组件</a>\n","tags":["小程序"]},{"title":"[小程序] axios-miniprogram-adapter","url":"/2019/05/23//articles/2019/05/23/1558610931000.html/","content":"<a href=\"https://github.com/axios/axios/tree/master/dist\" target=\"_blank\">github | 小程序axios</a>\n<a href=\"https://developers.weixin.qq.com/community/develop/doc/00046885234f0862e8c7f608756806\" target=\"_blank\">微信开放社区 | 在小程序中使用axios</a>\n\n<a href=\"https://github.com/bigmeow/axios-miniprogram-adapter\" target=\"_blank\">axios-miniprogram-adapter</a>\n```\naxios的小程序适配器，以便于在小程序中使用axios，支持微信、支付宝、钉钉、百度小程序\n```","tags":["小程序"]},{"title":"[小程序] 130个精选Demo合集","url":"/2019/05/23//articles/2019/05/23/1558610930000.html/","content":"<a href=\"https://www.jianshu.com/p/b5820cf9ff58\" target=\"_blank\">【福利】微信小程序130个精选Demo合集</a>\n<a href=\"https://www.cnblogs.com/ytkah/p/9003620.html\" target=\"_blank\">小程序源码下载[demo整理自github]</a>\n<a href=\"https://www.cnblogs.com/shenzikun1314/p/7805168.html\" target=\"_blank\">微信小程序源码案例大全</a>\n<a href=\"https://www.jianshu.com/p/0ecf5aba79e1\" target=\"_blank\">微信小程序精选Demo合集【持续更新中...】</a>","tags":["小程序"]},{"title":"[移动web前端] 前端开发","url":"/2019/05/19//articles/2019/05/19/1558239543000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.runoob.com/w3cnote/moible-web-front-source.html\" target=\"_blank\">移动WEB前端开发资源整合</a>\n<a href=\"https://www.cnblogs.com/jasmine-95/p/7235186.html\" target=\"_blank\">移动端页面开发的两种方式</a>\n```\n一、使用meta标签使网页宽度自适应手机屏幕\n二、使用js对网页进行缩放\n```\n<a href=\"https://www.cnblogs.com/qijunjun/p/7152236.html\" target=\"_blank\">移动端页面开发流程</a>\n<a href=\"https://blog.csdn.net/Venus_j/article/details/81056542\" target=\"_blank\">HTML5移动端手机网站开发</a>\n```\nwidth  ----  viewport的宽度（width=device-width意思是：宽度等于设备宽度）\nheight ------  viewport的高度（height=device-height意思是：高度等于设备宽度）\ninitial-scale ----- 初始的缩放比例\nminimum-scale ----- 允许用户缩放到的最小比例\nmaximum-scale ----- 允许用户缩放到的最大比例\nuser-scalable ----- 用户是否可以手动缩放\n```\n\n手机网站基本框架代码：\n```html\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>手机网站</title>\n<meta name=\"keywords\" content=\"\" />\n<meta name=\"description\" content=\"\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" />\n<meta name=\"format-detection\" content=\"telephone=no\" />\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n<meta name=\"author\" content=\"duanliang, duanliang920.com\" />\n<style>\n    body{font-size:62.5%;font-family:\"Microsoft YaHei\",Arial; overflow-x:hidden; overflow-y:auto;}\n    .viewport{ max-width:640px; min-width:300px; margin:0 auto;}\n</style>\n </head>\n \n<body>\n    <div>\n        大家好！这是我的第一个手机网页！\n    </div>\n</body>\n</html>\n```","tags":["移动web前端"]},{"title":"[小程序] 自定义头部导航","url":"/2019/05/19//articles/2019/05/19/1558239542000.html/","content":"<a href=\"https://www.jianshu.com/p/7393c800ba09\" target=\"_blank\">微信小程序 自定义头部导航栏 navigationStyle</a>\n<a href=\"https://www.jianshu.com/p/5753a0e1754f\" target=\"_blank\">微信小程序：自定义导航栏</a>\n<a href=\"https://blog.csdn.net/qq_33744228/article/details/83656588\" target=\"_blank\">【小程序】自定义导航栏</a>\n","tags":["小程序"]},{"title":"[小程序] 直播类","url":"/2019/05/19//articles/2019/05/19/1558239541000.html/","content":"<a href=\"https://www.jianshu.com/p/7393c800ba09\" target=\"_blank\">自定义顶部</a>\n<a href=\"https://github.com/AloneYan/WeChat-live.git\" target=\"_blank\">小程序：直播开发demo</a>\n\n","tags":["小程序"]},{"title":"[小程序] 折叠","url":"/2019/05/19//articles/2019/05/19/1558239540000.html/","content":"<a href=\"https://www.jianshu.com/p/491c1266dd0e\" target=\"_blank\">关于微信小程序的折叠效果</a>\n<a href=\"https://blog.csdn.net/lm1022/article/details/80604909\" target=\"_blank\">微信小程序 - 折叠展开效果</a>\n```xml\n<view class=\"page\">\n   <!-- 总数 -->\n   <view class=\"li\" bindtap='changeToggle'>\n     <view class=\"left\">总数</view>\n     <view class=\"right gray\">8</view>\n   </view>\n   \n   <!--分类 -->\n   <view class=\"li\" data-index=\"0\" bindtap='changeToggle'>\n\n      <view class=\"left\">类别1</view>\n      <view class=\"right\">\n   \t  3 <text class=\"iconfont {{selectedFlag[0]?'icon-shangjiantou':'icon-xiala'}}\"> </text>\n      </view>\n      </view>\n    \n      <view hidden=\"{{!selectedFlag[0]}}\">\n        <block wx:for=\"{{list01}}\" wx:for-item=\"item\" wx:for-index=\"index\">\n      <view class=\"li bg-gray\">\n        <view>展开1</view>\n      </view>\n        </block>\n      </view>\n    \n      <view class=\"li\" data-index=\"1\" bindtap='changeToggle'>\n        <view class=\"left\">类别2</view>\n        <view class=\"right\">0\n          <text class=\"iconfont {{selectedFlag[1]?'icon-shangjiantou':'icon-xiala'}}\"> </text>\n        </view>\n      </view>\n   \n      <view hidden=\"{{!selectedFlag[1]}}\">\n        <block wx:for=\"{{list02}}\" wx:for-item=\"item\" wx:for-index=\"index\">\n          <view class=\"li bg-gray\">\n            <view>展开2</view>\n          </view>\n        </block>\n      </view>\n   \n      <view class=\"li\" data-index=\"2\" bindtap='changeToggle'>\n        <view class=\"left\">类别3</view>\n        <view class=\"right red\">2\n          <text class=\"iconfont {{selectedFlag[2]?'icon-shangjiantou':'icon-xiala'}}\"> </text>\n        </view>\n      </view>\n    \n      <view hidden=\"{{!selectedFlag[2]}}\">\n        <block wx:for=\"{{list03}}\" wx:for-item=\"item\" wx:for-index=\"index\">\n          <view class=\"li bg-gray\">\n            <view>展开3</view>\n          </view>\n        </block>\n      </view>\n    \n    \n      <view class=\"li\" data-index=\"3\" bindtap='changeToggle'>\n        <view class=\"left\">类别4</view>\n        <view class=\"right red\">3\n          <text class=\"iconfont {{selectedFlag[3]?'icon-shangjiantou':'icon-xiala'}}\"> </text>\n        </view>\n      </view>\n    \n      <view hidden=\"{{!selectedFlag[3]}}\">\n        <block wx:for=\"{{list04}}\" wx:for-item=\"item\" wx:for-index=\"index\">\n          <view class=\"li bg-gray\">\n            <view>展开4</view>\n            <view class=\"red\">展开4右边</view>\n          </view>\n        </block>\n      </view>\n  \n  <!-- li -->\n  </view>\n\n<!-- Page -->\n</view>\n\n```\n\nwxss\n```\n/* 列表详情 */\n\n.li {\n  background-color: #fff;\n  display: flex;\n  justify-content: space-between;\n  font-size: 34rpx;\n  width: 92%;\n  padding: 0 4%;\n  height: 100rpx;\n  line-height: 100rpx;\n  border-bottom: 1rpx solid #f1f1f1;\n}\n.bg-gray{\n    background-color: #ccc!important;\n    border-bottom: 1rpx solid  #fff!important;\n}\n\n.li .icon-xiala ,.icon-shangjiantou {\n  color: #999;\n  font-size: 28rpx;\n}\n\n.gray {\n  color: #8e8e8e;\n}\n\n.red {\n  color: #fe2e2e;\n}\n```\n\njs\n```\nPage({\n  data: {\n    list01: [\n      { item_id: 1 }, { item_id: 11 }, { item_id: 11 },\n    ],\n    list02: [\n\n    ],\n    list03: [\n      { item_id: 11 }, { item_id: 11 }\n    ],\n    list04: [\n      { item_id: 11 }, { item_id: 11 }, { item_id: 11 }\n    ],\n  },\n\n  // 展开折叠\n  selectedFlag: [false, false, false, false],\n\n  },\n  // 展开折叠选择  \n  changeToggle:function(e){\n    var index = e.currentTarget.dataset.index;\n    if (this.data.selectedFlag[index]){\n      this.data.selectedFlag[index] = false;\n    }else{\n      this.data.selectedFlag[index] = true;\n    }\n\n    this.setData({\n      selectedFlag: this.data.selectedFlag\n    })\n  },\n\n});\n```\n\n<a href=\"https://gitee.com/dggy/expendable\" target=\"_blank\">gitee|expendable</a>\n<a href=\"https://www.jianshu.com/p/ff2483859729\" target=\"_blank\">小程序-折叠展开列表</a>\n\n","tags":["小程序"]},{"title":"[小程序] 视频播放","url":"/2019/05/19//articles/2019/05/19/1558239539000.html/","content":"<a href=\"https://www.jianshu.com/p/caa7dd6b3e95\" target=\"_blank\">小程序视频列表中视频的播放与停止</a>\n<a href=\"https://github.com/fengkang-aboo/miniprogress-videoList\" target=\"_blank\">miniprogress-videoList</a>\n\n","tags":["小程序"]},{"title":"[小程序] 视频编码格式","url":"/2019/05/19//articles/2019/05/19/1558239538000.html/","content":"<a href=\"https://www.jianshu.com/p/4d206e182f8f\" target=\"_blank\">解决小程序中视频因为编码格式不能播放的问题</a>\n","tags":["小程序"]},{"title":"[小程序] 返回箭头样式","url":"/2019/05/19//articles/2019/05/19/1558239537000.html/","content":"右箭头\n```css\n.arrow{\n  width: 10px;\n  height: 10px;\n  border-top: 2px solid #999;\n  border-right: 2px solid #999;\n\n  right: 20px;\n  top:20px;\n  position: absolute;\n\n  transform: rotate(45deg);\n}\n```\n左箭头\n```\n.arrow{\n  width: 10px;\n  height: 10px;\n  border-top: 2px solid #999;\n  border-right: 2px solid #999;\n\n  right: 20px;\n  top:20px;\n  position: absolute; \n\n  transform: rotate(-135deg);\n}\n```","tags":["小程序"]},{"title":"[小程序] 动画效果","url":"/2019/05/19//articles/2019/05/19/1558239536000.html/","content":"<a href=\"https://www.jianshu.com/p/1cdf36070205\" target=\"_blank\">动画效果</a>\n<a href=\"https://blog.csdn.net/qq_32584661/article/details/80618806\" target=\"_blank\">小程序学习：动画animation</a>\n```js\n   click:function(){\n   \n       //创建动画\n       var animation = wx.createAnimation({\n           duration: 4000,\n           timingFunction: \"ease\",\n           delay: 0,\n           transformOrigin: \"50% 50%\",\n       });\n   \n       //设置动画\n       //animation.rotate(90).step();     //旋转90度\n       //animation.scale(1.5).step();        //放大1.5倍\n       //animation.translate(-30,-50).step();        //偏移x,y,z\n       //animation.skew(30,50).step();        //倾斜x,y\n   \n       //边旋转边放大\n       animation.rotate(45).scale(0.8).translate(10,10).step();\n   \n       //导出动画数据传递给组件的animation属性。\n       this.setData({\n           animationData: animation.export(),\n       })\n   }\n```\n<a href=\"https://www.jianshu.com/p/3eebef84d988\" target=\"_blank\">小程序动画使用</a>\n<a href=\"https://www.jianshu.com/p/1cdf36070205\" target=\"_blank\">小程序动画animation向左移动效果</a>\n<a href=\"https://www.codercto.com/a/18952.html\" target=\"_blank\">抛物线</a>\n<a href=\"https://github.com/cinoliu/fullpage\" target=\"_blank\">微信小程序demo：全屏滚动动画</a>\n<a href=\"https://blog.csdn.net/echo_ae/article/details/80582408\" target=\"_blank\">旋转</a>\n<a href=\"https://blog.csdn.net/qq_33858250/article/details/80657978\" target=\"_blank\">微信小程序动画效果集合</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1038\" target=\"_blank\">文字跑马灯效果</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1350\" target=\"_blank\">触摸水波涟漪效果</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1875\" target=\"_blank\">下拉菜单效果</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1876\" target=\"_blank\">五星评分效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=1694\" target=\"_blank\">数字累加，动态效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=1689\" target=\"_blank\">星战字幕效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=2193\" target=\"_blank\">动画卡片效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=2189\" target=\"_blank\">列表项左滑删除效果（更多左滑删除效果请直接在论坛内搜索\"左滑\"即可）</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=3949\" target=\"_blank\">图片的滤镜效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=4670\" target=\"_blank\">黑客帝国metrix效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=4628\" target=\"_blank\">CSS3动画效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=2833\" target=\"_blank\">仿直播点赞气泡效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=4713\" target=\"_blank\">文字弹幕效果</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=4266\" target=\"_blank\">仿UC宣传页面的简单动画效果</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1671\" target=\"_blank\">发短信验证码倒计时</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1659\" target=\"_blank\">弹出菜单特效</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1538\" target=\"_blank\">滚动动画</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1456\" target=\"_blank\">实时圆形进度条</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=3617\" target=\"_blank\">遮罩层</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1038\" target=\"_blank\">仿Table效果</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1029\" target=\"_blank\">操作按钮悬浮固定在底部</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=890\" target=\"_blank\">支付倒计时效果</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=636\" target=\"_blank\">文字单行背景自适应带角标</a>\n<a href=\"http://www.wxapp-union.com/forum.php?mod=viewthread&tid=1202\" target=\"_blank\">侧边栏滑动特效</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1665\" target=\"_blank\">顶部导航效果</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=1449\" target=\"_blank\">弹出和隐藏动画</a>\n<a href=\"http://www.wxapp-union.com/portal.php?mod=view&aid=111\" target=\"_blank\">切换动画</a>\n","tags":["小程序"]},{"title":"[小程序] wx.navigateBack回传","url":"/2019/05/19//articles/2019/05/19/1558239535000.html/","content":"<a href=\"https://www.cnblogs.com/caicaizi/p/6652103.html\" target=\"_blank\">微信小程序从子页面退回父页面时的数据传递 wx.navigateBack()</a>\n```\nvar pages = getCurrentPages();\n//当前页面\nvar currPage = pages[pages.length - 1];\n//上一个页面\nvar prevPage = pages[pages.length - 2];\n\n//直接调用上一个页面的setData()方法，把数据存到上一个页面中去\nprevPage.setData({\n  mydata: {a:1, b:2}\n});\n```","tags":["小程序"]},{"title":"[小程序] ios界面左右移动问题","url":"/2019/05/19//articles/2019/05/19/1558239533000.html/","content":"<a href=\"https://blog.csdn.net/weixin_43629308/article/details/86228150\">微信小程序IOS真机测试时，部分页面可以左右滑动的问题</a>\n```\n这是本人在开发过程中遇到的一个小问题，问题不大，倒是很头疼，下面给出解决答案：\n\n本人亲测问题是因为页面超出，最简单的方法就是给超出页面各种大模块背景色或者边框线，加完之后一眼就能看出到底是哪个模块超出页面，修改一下宽度即可解决。\n```\n\n微信小程序ios系统出现可以左右滑动bug解决方法\n```\npage {\n\twidth:100%;\n    overflow-x:hidden;\n}\n```","tags":["小程序"]},{"title":"[win10] 何查看WiFi密码","url":"/2019/05/19//articles/2019/05/19/1558239531000.html/","content":"<a href=\"https://jingyan.baidu.com/article/a948d651c68a280a2ccd2e53.html\" target=\"_blank\">win10系统如何查看WiFi密码</a>\n```\n1.在电脑的右下角找到目前正在连接的WiFi名称，然后点击鼠标右键，选择弹出的“打开网络和Internet设置”\n\n2.在跳转到的网络和Internet设置对话框，我们点击“更改适配器选项”\n\n3.随后还是用右键点击，这次我们选择“状态”，接着即可弹出WLAN状态对话框\n```\n\n<a href=\"https://baijiahao.baidu.com/s?id=1552333020516801&wfr=spider&for=pc\" target=\"_blank\">如何查看win10保存的wifi密码</a>\n```\n按win+r再输入ncpa.cpl访问\n```\n","tags":["win10"]},{"title":"[TortosieGit] 保存密码","url":"/2019/05/19//articles/2019/05/19/1558239530000.html/","content":"\n```\n%USERPROFILE%\\_netrc\n\nmachine github.com \nlogin <github用户名>\npassword <github密码>\n```","tags":["TortosieGit"]},{"title":"[sublime] 常用插件","url":"/2019/05/19//articles/2019/05/19/1558239529000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.jianshu.com/p/dcfac4c44b92\" target=\"_blank\">sublime Text3常用插件以及安装方法</a>\n```\n2、Emmet\n   简介：代码快捷键，前端必备\n3、LESS\n   功能：LESS高亮插件\n4、autoprefixer\n   功能：CSS添加属性私有前缀\n5、DocBlockr\n   功能：生成注释\n6、ColorPicker\n   功能：调色板\n7、AutoFileName\n   功能：文件路径补全\n8、html-css-js prettify\n   功能：代码压缩/美化/整理\n   使用：快捷键Ctrl+Shift+H\n10、SideBarEnhancements\n   功能：增强侧边栏\n```\n\n<a href=\"https://www.oschina.net/translate/15-awesome-sublime-text-plugins-for-web-development?cmp\" target=\"_blank\">15 款炫酷的 Sublime Text 插件推荐</a>\n\n<a href=\"https://www.cnblogs.com/freefish12/p/5502731.html\" target=\"_blank\">前端开发必备的Sublime 3插件</a>\n```\nCSS3\nEmmet\nJsFormat JavaScript格式化\n```\n\n","tags":["sublime"]},{"title":"[springboot] 系列教材","url":"/2019/05/19//articles/2019/05/19/1558239528000.html/","content":"<a href=\"http://how2j.cn/k/springboot/springboot-war/1655.html\">SpringBoot系列教材 （三）- 基础 - 用 jar的方式运行springboot项目</a>","tags":["springboot"]},{"title":"[redhat] redhat6.3+gitlab","url":"/2019/05/19//articles/2019/05/19/1558239527000.html/","content":"\n1.前提条件\n```\n确保mysql数据库安装好\n确保本地yum源配置好\n安装机器能连网\n```\n\n2.安装依赖包\n```\n#安装额外的包仓库\nwget -O /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6 https://fedoraproject.org/static/0608B895.txt\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\nrpm -ivh http://li.nux.ro/download/nux/dextop/el6/x86_64/nux-dextop-release-0-2.el6.nux.noarch.rpm\n\n#安装必需的依赖软件包\nyum -y update\nyum -y groupinstall 'Development Tools'\nyum -y install vim-enhanced readline readline-devel ncurses-devel gdbm-devel glibc-devel tcl-devel openssl-devel curl-devel expat-devel db4-devel byacc sqlite-devel gcc-c++ libyaml libyaml-devel libffi libffi-devel libxml2 libxml2-devel libxslt libxslt-devel libicu libicu-devel system-config-firewall-tui python-devel redis sudo wget crontabs logwatch logrotate perl-Time-HiRes\n\n#安装python2.7\nyum install –y python27 python27-devel python-docutils\ncd /usr/bin/\nrm -rf python\ncp python2.7 python\n\n#检查版本：python --version\n由于yum命令不兼容python2.7，需修改/usr/bin/yum文件，将第一行由“#!/usr/bin/python”改为“#!/usr/bin/python2.6\"\n```\n\n3.安装git1.8\n```\ncd /tmp\nyum -y install git perl-ExtUtils-MakeMaker\ngit clone git://github.com/git/git.git\ncd /tmp/git/\ngit checkout v1.8.4\nautoconf\n./configure -–prefix=/usr/local\nmake && make install\nrm -rf /tmp/git/\nyum erase git\nln -s /usr/local/git /usr/bin/git\n```\n\n4.安装ruby2.0\n```\nmkdir /tmp/ruby && cd /tmp/ruby\ncurl –-progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p247.tar.gz | tar xz\ncd ruby-2.0.0-p247\n./configure\nmake && make install\ngem install bundler –no-ri –no-rdoc\n\n#添加淘宝源\ngem sources --remove https://rubygems.org/\ngem sources -a http://ruby.taobao.org/\n\n#更新rails： \ngem install rails\n```\n\n5.创建git用户\n```\nadduser --system --shell /bin/bash --comment 'GitLab' --create-home --home-dir /home/git/ git\nsu -\necho adminlogs@example.com > /root/.forward\nchown root /root/.forward\nchmod 600 /root/.forward\nrestorecon /root/.forward\necho adminlogs@example.com > /home/git/.forward\nchown git /home/git/.forward\nchmod 600 /home/git/.forward\nrestorecon /home/git/.forward\n```\n\n6.安装gitlab shell\nGitLab shell是一个ssh访问和repository管理软件，专为Gitlab开发。\n```\nsu - git\ngit clone https://github.com/gitlabhq/gitlab-shell.git\ncd gitlab-shell\ngit checkout v1.7.0\ncp config.yml.example config.yml\n./bin/install\n```\n\n7.配置mysql数据库\nGitLab支持MySQL和PostgreSQL，而且还必须安装Redis\n```\nmysql -u root -p\nCREATE USER 'gitlab'@'localhost' IDENTIFIED BY 'supersecret';\nCREATE DATABASE IF NOT EXISTS `gitlabhq_production` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;\nGRANT SELECT, LOCK TABLES, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER ON `gitlabhq_production`.* TO 'gitlab'@'localhost';\nchkconfig redis --level 235 on\nservice redis start\n```\n\n8.安装gitlab\n```\n#下载源码\nsu - git\ngit clone https://github.com/gitlabhq/gitlabhq.git gitlab\ncd /home/git/gitlab\ngit checkout 6-3-stable\n\n#配置\ncp config/gitlab.yml.example config/gitlab.yml\nsed -i 's|/usr/bin/git|/usr/local/bin/git|' config/gitlab.yml\nchown -R git log/\nchown -R git tmp/\nchmod -R u+rwX  log/\nchmod -R u+rwX  tmp/\nmkdir /home/git/gitlab-satellites\nmkdir tmp/pids/\nmkdir tmp/sockets/\nchmod -R u+rwX  tmp/pids/\nchmod -R u+rwX  tmp/sockets/\nmkdir public/uploads\nchmod -R u+rwX  public/uploads\ncp config/unicorn.rb.example config/unicorn.rb\n\ngit config --global user.name \"GitLab\"\ngit config --global user.email \"gitlab@git.dayatang.org\"\ngit config --global core.autocrlf input\n\n#配置数据库\ncp config/database.yml.mysql  config/database.yml\nvim config/database.yml   # 修改密码\nchmod o-rwx config/database.yml\n\n#安装gems\nrpm -ivh /tmp/libicu-devel-4.2.1-9.1.el6_2.x86_64.rpm #需要下载\ngem install charlock_holmes --version '0.6.9.4'\ncd /home/git/gitlab/\nbundle install --deployment --without development test postgres puma aws\nln -s /usr/local/bin/ruby /usr/bin/\nln -s /usr/local/bin/bundle /usr/bin/bundle\n\n#初始化数据库并激活高级特性\nchmod -R 777 /home/git #授权\ncd /home/git/gitlab\nbundle exec rake gitlab:setup RAILS_ENV=production\ncp config/unicorn.rb.example config/unicorn.rb  \nbundle exec unicorn_rails -c config/unicorn.rb -E production -D\n\n#安装init脚本\nsu -\ncp lib/support/init.d/gitlab /etc/init.d/gitlab\nchmod +x /etc/init.d/gitlab\nchkconfig --add gitlab\nchkconfig gitlab --level 235 on\n\n#检查应用程序状况\nsu - git\ncd gitlab/\nbundle exec rake gitlab:env:info RAILS_ENV=production\nexit\n```\n\n9.安装nginx\n```\n # yum install nginx\n#复制配置文件\n\ncp /home/git/gitlab/lib/support/nginx/gitlab /etc/nginx/conf.d/\n mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.back\n mv /etc/nginx/conf.d/gitlab /etc/nginx/conf.d/default.conf\n```\n\n10.完成\n```\n启动\nservice gitlab start\nservice nginx start\n访问：http://{IP}  默认用户名/密码：admin@local.host/5iveL!fe\n\n\n\n修改端口\nvim /etc/nginx/conf.d/default.conf \n        # listen *:99 default_server\n\nvim /home/git/gitlab/config/unicorn.rb\n        # listen \"127.0.0.1:9999\", :tcp_nopush => true\n\n\n问题调试\n\n1.cd /home/git/gitlab-shell 执行bin/check\n\n2.cd /home/git/gitlab/执行 bundle exec rake gitlab:check RAILS_ENV=production\n\n                                        bundle exec rake gitlab:env:info RAILS_ENV=production\n\n\n遇见问题\n\n1.不能clone和push代码，这个升级git解决了\n\n2.Test redis-cli executable: bin/check:35: warning: Insecure world writable dir /home/git in PATH, mode 040777\n\n   chmod go-w /home/git\n```","tags":["redhat"]},{"title":"[redhat] jdk8","url":"/2019/05/19//articles/2019/05/19/1558239526000.html/","content":"```\nrpm -qa | grep java | xargs rpm -e --nodeps\nyum -y install java-1.8.0-openjdk*\n```","tags":["redhat"]},{"title":"[linux] linux安装和配置svn","url":"/2019/05/19//articles/2019/05/19/1558239525000.html/","content":"<a href=\"https://www.cnblogs.com/puloieswind/p/5856326.html\" target=\"_blank\">Linux安装配置SVN服务器</a>\n<a href=\"https://www.cnblogs.com/fengyumeng/p/7356904.html\" target=\"_blank\">Linux下SVN配置</a>\n<a href=\"http://weibingsheng.cn/blog/index.php/home/index/read.html?id=202\" target=\"_blank\">linux安装SVN和配置</a>\n```\nyum install -y httpd httpd-devel subversion mod_dav_svn mod_auth_mysql\n```","tags":["linux"]},{"title":"[jenkins] 自动化部署之jenkins及简介","url":"/2019/05/19//articles/2019/05/19/1558239524000.html/","content":"<a href=\"https://www.cnblogs.com/jimmy-xuli/p/9020825.html\" target=\"_blank\">自动化部署之jenkins及简介</a>\n```\n/var/lib/jenkins/plugins/\n```\n","tags":["jenkins"]},{"title":"[jenkins] jenkins+SVN+maven+tomcat","url":"/2019/05/19//articles/2019/05/19/1558239523000.html/","content":"<a href=\"https://www.cnblogs.com/chenpi/p/5715029.html\" target=\"_blank\">项目持续集成环境（jenkins + SVN + maven + tomcat）</a>\n<a href=\"https://blog.csdn.net/pein_zero/article/details/52597615\" target=\"_blank\">jenkins+maven+svn实现简单的一键发布</a>\n```\n<tomcat-users xmlns=\"http://tomcat.apache.org/xml\"\n              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n              xsi:schemaLocation=\"http://tomcat.apache.org/xml tomcat-users.xsd\"\n              version=\"1.0\">\n  <role rolename=\"manager-gui\"/>\n  <role rolename=\"manager-script\"/>\n  <user username=\"test\" password=\"test\" roles=\"manager-gui,manager-script\"/>\n</tomcat-users>\n```\n<a href=\"https://www.linuxidc.com/Linux/2016-01/127258.htm\" target=\"_blank\">快速部署Tomcat项目的Shell脚本</a>\n","tags":["jenkins"]},{"title":"[docker] windows+docker镜像加速","url":"/2019/05/19//articles/2019/05/19/1558239522000.html/","content":"国内较快的镜像原地址\n```\n#Docker 官方中国区\nhttps://registry.docker-cn.com\n#网易\nhttp://hub-mirror.c.163.com\n#ustc\nhttps://docker.mirrors.ustc.edu.cn\n```\n\n使用 --registry-mirror 配置 Docker 守护进程\n```\ndocker --registry-mirror=https://registry.docker-cn.com daemon\n```\n\n```\ndocker-machine ssh default\n\nsudo sed -i \"s|EXTRA_ARGS='|EXTRA_ARGS='--registry-mirror=https://registry.docker-cn.com |g\" /var/lib/boot2docker/profile\n\nexit\n\ndocker-machine restart default\ndocker-machine ssh default\n```","tags":["docker"]},{"title":"[docker] windows+docker镜像加速","url":"/2019/05/19//articles/2019/05/19/1558239521000.html/","content":"国内较快的镜像原地址\n```\n#Docker 官方中国区\nhttps://registry.docker-cn.com\n#网易\nhttp://hub-mirror.c.163.com\n#ustc\nhttps://docker.mirrors.ustc.edu.cn\n```\n\n使用 --registry-mirror 配置 Docker 守护进程\n```\ndocker --registry-mirror=https://registry.docker-cn.com daemon\n```\n\n```\ndocker-machine ssh default\n\nsudo sed -i \"s|EXTRA_ARGS='|EXTRA_ARGS='--registry-mirror=https://registry.docker-cn.com |g\" /var/lib/boot2docker/profile\n\nexit\n\ndocker-machine restart default\ndocker-machine ssh default\n```\n\n```\ndocker-machine env --shell cmd default\n\ndocker镜像加速\nhttps://blog.csdn.net/cacacai/article/details/80461733\n\n国内较快的镜像原地址\n#Docker 官方中国区\nhttps://registry.docker-cn.com\n#网易\nhttp://hub-mirror.c.163.com\n#ustc\nhttps://docker.mirrors.ustc.edu.cn\n\n\n在 Docker 守护进程启动时传入 --registry-mirror 参数：\ndocker --registry-mirror=https://registry.docker-cn.com daemon\n{\n  \"registry-mirrors\": [\"http://hub-mirror.c.163.com\"]\n}\nsystemctl restart docker\n```","tags":["docker"]},{"title":"[docker] gitlab","url":"/2019/05/19//articles/2019/05/19/1558239520000.html/","content":"<a href=\"https://blog.csdn.net/ouyang_peng/article/details/72903221\" target=\"_blank\">在CenterOS系统上安装GitLab并自定义域名访问GitLab管理页面</a>\n\n","tags":["docker"]},{"title":"[blog] jenkins","url":"/2019/05/19//articles/2019/05/19/1558239519000.html/","content":"<a href=\"http://www.eryajf.net/category/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/jenkins\" target=\"_blank\">jenkins博客</a>\n","tags":["blog"]},{"title":"[AE] 软件和教程","url":"/2019/05/19//articles/2019/05/19/1558239518000.html/","content":"<a href=\"http://www.ddooo.com/softdown/132514.htm\" target=\"_blank\">after effects cs6中文版</a>\n<a href=\"https://uiiiuiii.com/aftereffects/12125462.html\" target=\"_blank\">AE基础 视频</a>\n<a href=\"http://www.xueui.cn/tutorials/20181031emoji.html\" target=\"_blank\">表情小动画【AE教程】</a>\n","tags":["AE"]},{"title":"[python] 安装","url":"/2019/05/19//articles/2019/05/19/1558239517000.html/","content":"<a href=\"https://www.runoob.com/python/python-install.html\" target=\"_blank\">Python 环境搭建</a>\n<a href=\"https://www.python.org/downloads/windows/\">Window 平台安装 Python</a>\n<a href=\"https://www.python.org/ftp/python/2.7.16/python-2.7.16.amd64.msi\">python-2.7.16.amd64.msi</a>","tags":["python"]},{"title":"[政策] 珠海人力资源和社会保障","url":"/2019/05/11//articles/2019/05/11/1557582139000.html/","content":"<a href=\"http://www.zhrsj.gov.cn/zcfg/zxwj/201806/t20180629_46655773.html\" target=\"_blank\">珠海2018社保年度社会保险缴费基数上、下限一览表</a>\n<a href=\"http://salarycalculator.sinaapp.com/report/%E7%8F%A0%E6%B5%B7\" target=\"_blank\">2019年珠海市薪资水平报告</a>\n<a href=\"https://mp.weixin.qq.com/s/LBwA8gfskQnTMsAolj6-7g\" target=\"_blank\">珠海人社</a>\n<a href=\"http://m.vobao.com/news/920735450972630065.shtml\" target=\"_blank\">官方最新公布：2018-2019年度珠海市社保缴费比例及缴费基数</a>\n<a href=\"http://m.sohu.com/a/288798339_100298869\" target=\"_blank\">珠海市社保五险下限基数 （2018.7-2019.6）</a>\n","tags":["政策"]},{"title":"[工具] vscode小程序插件","url":"/2019/05/11//articles/2019/05/11/1557582138000.html/","content":"vsCode 开发微信小程序插件\n```\n解决方案\n用 vsCode 开发微信小程序可以配置以下插件，让开发更美好： \n1. vscode weapp api \n2. vscode wxml \n3. vscode-wechat \n4. Easy WXLESS\n```","tags":["工具"]},{"title":"[工具] devcpp","url":"/2019/05/11//articles/2019/05/11/1557582137000.html/","content":"<a href=\"https://sourceforge.net/projects/orwelldevcpp/files/latest/download\" target=\"_blank\">devcpp</a>\n","tags":["工具"]},{"title":"[weui] weui中的css详解","url":"/2019/05/11//articles/2019/05/11/1557582136000.html/","content":"<a href=\"https://www.cnblogs.com/lgx5/p/7711142.html\" target=\"_blank\">weui中的css详解</a>\n\n","tags":["weui"]},{"title":"[TortoiseGit] 配置账号","url":"/2019/05/11//articles/2019/05/11/1557582135000.html/","content":"<a href=\"https://www.cnblogs.com/popfisher/p/5466174.html\" target=\"_blank\">Git-TortoiseGit完整配置流程</a>\n```\n9. 使用TortoiseGit来下拉代码配置2--->配置TortoiseGit客户端\n```\n","tags":["TortoiseGit"]},{"title":"[springboot] 配置swagger","url":"/2019/05/11//articles/2019/05/11/1557582134000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/u011212427/article/details/78024126\" target=\"_blank\">SpringBoot配置Swagger</a>\n<a href=\"https://www.jianshu.com/p/dcaff30f91cc\" target=\"_blank\">Spring boot集成Swagger，并配置多个扫描路径</a>\n<a href=\"https://blog.csdn.net/u014231523/article/details/76522486\" target=\"_blank\">swagger2常用注解说明</a>\n```\n#配置header，表示参数放在header中\nparamType=\"header\"\n\n@ApiImplicitParam(paramType=\"header\",name = \"openid\", value = \"openid\", required = false, dataType = \"String\")\n```\n\nswagger2 配置参数类型\n```\nparamType的参数有以下几种方式：\nheader：请求参数放置于Request Header，使用@RequestHeader获取\nquery：请求参数放置于请求地址，使用@RequestParam获取\npath：（用于restful接口）-->请求参数的获取：@PathVariable\nbody（一般不用）\nform（一般不用）\n```\n<a href=\"https://blog.csdn.net/u014231523/article/details/76522486\" target=\"_blank\">swagger2 隐藏接口</a>\n```\n@ApiIgnore\n```\n<a href=\"https://blog.csdn.net/u012946310/article/details/82379429\" target=\"_blank\">生产环境关闭swagger</a>\n\n<a href=\"https://blog.csdn.net/weixin_41846320/article/details/82963246\" target=\"_blank\">一直提示：swagger: fetching resource list: http://...</a>\n```\ngroupName设置了中文，要改成英文\n```\n<a href=\"https://blog.csdn.net/shecanwin/article/details/55667102\" target=\"_blank\">使用swagger 遇到 Can't read swagger JSON 错误</a>\n```\n@Bean\npublic TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory() {\n   TomcatEmbeddedServletContainerFactory tomcat=new TomcatEmbeddedServletContainerFactory();\n   tomcat.setUriEncoding(Charset.forName(\"UTF-8\"));\n   tomcat.setPort(8001);\n   return tomcat;\n}\n```\n\n","tags":["springboot"]},{"title":"[php] 微信支付统一下单demo","url":"/2019/05/11//articles/2019/05/11/1557582133000.html/","content":"<a href=\"https://blog.csdn.net/weixin_42616063/article/details/80924976\" target=\"_blank\">微信支付统一下单demo（小程序，扫码）</a>\n```\n<?php //微信支付\n \n/**\n * 适用于微信所有支付， 扫码支付 小程序支付 二维码的需要接入生成二维码的代码，这个可以共用\n *    xml 根据文档自行删改， 共用微信统一下单dome \n */    \nclass Payapi\n{\n \n        统一下单\n      public function Pay($orderid,$total_fee){   参数是订单号 加金额，  可以改动， \n          $fee = $total_fee;//举例充值0.01\n          $appid ='';//如果是公众号 就是公众号的appid\n          $body = '名字';\n          $mch_id ='商户号';\n          $nonce_str = $this->nonce_str();//随机字符串\n          $notify_url ='回调地址';\n          $out_trade_no = $orderid;//商户订单号\n          $spbill_create_ip = '主机ip';\n          $total_fee = $fee*100;//因为充值金额最小是1 而且单位为分 如果是充值1元所以这里需要*100\n          $trade_type = 'NATIVE';//交易类型 默认\n \n \n          //这里是按照顺序的 因为下面的签名是按照顺序 排序错误 肯定出错\n          $post['appid'] = $appid;\n          $post['body'] = $body;\n          $post['mch_id'] = $mch_id;\n          $post['nonce_str'] = $nonce_str;//随机字符串\n          $post['notify_url'] = $notify_url;\n        //  $post['openid'] = $openid;\n          $post['out_trade_no'] = $out_trade_no;\n          $post['spbill_create_ip'] = $spbill_create_ip;//终端的ip\n          $post['total_fee'] = $total_fee;//总金额 最低为一块钱 必须是整数\n          $post['trade_type'] = $trade_type;\n          $sign = $this->sign($post);//签名\n          $post_xml = '<xml>\n                 <appid>'.$appid.'</appid>\n                 <body>'.$body.'</body>\n                 <mch_id>'.$mch_id.'</mch_id>\n                 <nonce_str>'.$nonce_str.'</nonce_str>\n                 <notify_url>'.$notify_url.'</notify_url>\n                 <openid>'.$openid.'</openid>\n                 <out_trade_no>'.$out_trade_no.'</out_trade_no>\n                 <spbill_create_ip>'.$spbill_create_ip.'</spbill_create_ip>\n                 <total_fee>'.$total_fee.'</total_fee>\n                 <trade_type>'.$trade_type.'</trade_type>\n                 <sign>'.$sign.'</sign>\n              </xml> ';\n          //统一接口prepay_id\n          $url = 'https://api.mch.weixin.qq.com/pay/unifiedorder';\n          $xml = $this->http_request($url,$post_xml);\n          $array = $this->xml($xml);//全要大写\n          if($array['RETURN_CODE'] == 'SUCCESS' && $array['RESULT_CODE'] == 'SUCCESS'){\n              $time = time();\n              $tmp='';//临时数组用于签名\n              $tmp['appId'] = $appid;\n              $tmp['nonceStr'] = $nonce_str;\n              $tmp['package'] = 'prepay_id='.$array['PREPAY_ID'];\n              $tmp['signType'] = 'MD5';\n              $tmp['timeStamp'] = \"$time\";\n              $data['state'] = 1;\n              $data['timeStamp'] =\"$time\";//时间戳\n              $data['nonceStr'] = $nonce_str;//随机字符串\n              $data['signType'] = 'MD5';//签名算法，暂支持 MD5\n              $data['package'] = 'prepay_id='.$array['PREPAY_ID'];//统一下单接口返回的 prepay_id 参数值，提交格式如：prepay_id=*\n              $data['paySign'] = $this->sign($tmp);//签名,具体签名方案参见微信公众号支付帮助文档;\n              $data['out_trade_no'] = $out_trade_no;\n               $data['CODE_URL']  =$array['CODE_URL'];\n          }else{\n              $data['state'] = 0;\n              $data['text'] = \"错误\";\n              $data['RETURN_CODE'] = $array['RETURN_CODE'];\n              $data['RETURN_MSG'] = $array['RETURN_MSG'];\n          }\n        return  json_encode($data);\n \n      }\n \n \n \nprivate function nonce_str(){//随即字符串\n          $result = '';\n          $str = 'QWERTYUIOPASDFGHJKLZXVBNMqwertyuioplkjhgfdsamnbvcxz';\n          for ($i=0;$i<32;$i++){\n              $result .= $str[rand(0,48)];\n          }\n          return $result;\n      }\n \n \n \n \n      //生成订单号\n      private function order_number($openid){\n        // date('Ymd',time()).time().rand(10,99);//18位\n      return md5($openid.time().rand(10,99));//32位\n      }\n \n \n \n      //签名 $data要先排好顺序\n      private function sign($data){\n      ksort($data);\n          $stringA = '';\n          foreach ($data as $key=>$value){\n              if(!$value) continue;\n              if($stringA) $stringA .= '&'.$key.\"=\".$value;\n              else $stringA = $key.\"=\".$value;\n          }\n          $wx_key = '';//申请支付后有给予一个商户账号和密码，登陆后自己设置key\n      $stringSignTemp = $stringA.'&key='.$wx_key;//申请支付后有给予一个商户账号和密码，登陆后自己设置key\n      return strtoupper(md5($stringSignTemp));\n    }\n\n      //curl请求啊\n      function http_request($url,$data = null,$headers=array())\n      {\n          $curl = curl_init();\n          if( count($headers) >= 1 ){\n              curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);\n          }\n          curl_setopt($curl, CURLOPT_URL, $url);\n \n \n          curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);\n          curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);\n \n \n          if (!empty($data)){\n              curl_setopt($curl, CURLOPT_POST, 1);\n              curl_setopt($curl, CURLOPT_POSTFIELDS, $data);\n          }\n          curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n          $output = curl_exec($curl);\n          curl_close($curl);\n          return $output;\n      }\n\n      //获取xml\n      public function xml($xml){\n          $p = xml_parser_create();\n          xml_parse_into_struct($p, $xml, $vals, $index);\n          xml_parser_free($p);\n          $data = \"\";\n          foreach ($index as $key=>$value) {\n              if($key == 'xml' || $key == 'XML') continue;\n              $tag = $vals[$value[0]]['tag'];\n              $value = $vals[$value[0]]['value'];\n              $data[$tag] = $value;\n          }\n          return $data;\n      }\n}\n```\n\n","tags":["php"]},{"title":"[mysql] 字符串分割","url":"/2019/05/11//articles/2019/05/11/1557582132000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/pjymyself/article/details/81668157\" target=\"_blank\">MySQL - 字符串拆分（含分隔符的字符串截取）</a>\n```\nSELECT \n    SUBSTRING_INDEX(SUBSTRING_INDEX('7654,7698,7782,7788',',',help_topic_id+1),',',-1) AS num \nFROM \n    mysql.help_topic \nWHERE \n    help_topic_id < LENGTH('7654,7698,7782,7788')-LENGTH(REPLACE('7654,7698,7782,7788',',',''))+1\n```","tags":["mysql"]},{"title":"[js] 生成验证码","url":"/2019/05/11//articles/2019/05/11/1557582131000.html/","content":"<a href=\"https://blog.ihoey.com/posts/javascript/2017-11-29-javascript-getGverify.html\" target=\"_blank\">JAVASCRIPT生成图形验证码</a>\n```\ngetGVerify: function(id) {\n  function GVerify(options) {\n    //创建一个图形验证码对象，接收options对象为参数\n    this.options = {\n      //默认options参数值\n      id: '', //容器Id\n      canvasId: 'verifyCanvas', //canvas的ID\n      width: '100', //默认canvas宽度\n      height: '30', //默认canvas高度\n      type: 'blend', //图形验证码默认类型blend:数字字母混合类型、number:纯数字、letter:纯字母\n      code: ''\n    }\n    if (Object.prototype.toString.call(options) == '[object Object]') {\n      //判断传入参数类型\n      for (var i in options) {\n        //根据传入的参数，修改默认参数值\n        this.options[i] = options[i]\n      }\n    } else {\n      this.options.id = options\n    }\n\n    this.options.numArr = '0,1,2,3,4,5,6,7,8,9'.split(',')\n    this.options.letterArr = getAllLetter()\n\n    this._init()\n    this.refresh()\n  }\n\n  GVerify.prototype = {\n    /**版本号**/\n    version: '1.0.0',\n\n    /**初始化方法**/\n    _init: function() {\n      var con = document.getElementById(this.options.id)\n      var canvas = document.createElement('canvas')\n      /*this.options.width = con.offsetWidth > 0 ? con.offsetWidth : \"100\";\n              this.options.height = con.offsetHeight > 0 ? con.offsetHeight : \"30\";*/\n      canvas.id = this.options.canvasId\n      canvas.width = this.options.width\n      canvas.height = this.options.height\n      canvas.style.cursor = 'pointer'\n      canvas.innerHTML = '您的浏览器版本不支持canvas'\n      con.appendChild(canvas)\n      var parent = this\n      canvas.onclick = function() {\n        parent.refresh()\n      }\n    },\n\n    /**生成验证码**/\n    refresh: function() {\n      this.options.code = ''\n      var canvas = document.getElementById(this.options.canvasId)\n      if (canvas.getContext) {\n        var ctx = canvas.getContext('2d')\n      }\n      ctx.textBaseline = 'middle'\n\n      ctx.fillStyle = randomColor(180, 240)\n      ctx.fillRect(0, 0, this.options.width, this.options.height)\n\n      if (this.options.type == 'blend') {\n        //判断验证码类型\n        var txtArr = this.options.numArr.concat(this.options.letterArr)\n      } else if (this.options.type == 'number') {\n        var txtArr = this.options.numArr\n      } else {\n        var txtArr = this.options.letterArr\n      }\n\n      for (var i = 1; i <= 4; i++) {\n        var txt = txtArr[randomNum(0, txtArr.length)]\n        this.options.code += txt\n        ctx.font = '20px SimHei'\n        //ctx.font = randomNum(this.options.height/2, this.options.height) + 'px SimHei'; //随机生成字体大小\n        ctx.fillStyle = randomColor(50, 160) //随机生成字体颜色\n        /* ctx.shadowOffsetX = randomNum(-3, 3);\n                  ctx.shadowOffsetY = randomNum(-3, 3);*/\n        ctx.shadowBlur = randomNum(-3, 3)\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.3)'\n        var x = (this.options.width / 5) * i\n        var y = this.options.height / 2\n        var deg = randomNum(-30, 30)\n        /**设置旋转角度和坐标原点**/\n        ctx.translate(x, y)\n        ctx.rotate((deg * Math.PI) / 180)\n        ctx.fillText(txt, 0, 0)\n        /**恢复旋转角度和坐标原点**/\n        ctx.rotate((-deg * Math.PI) / 180)\n        ctx.translate(-x, -y)\n      }\n      /**绘制干扰线**/\n      for (var i = 0; i < 4; i++) {\n        ctx.strokeStyle = randomColor(40, 180)\n        ctx.beginPath()\n        ctx.moveTo(\n          randomNum(0, this.options.width / 2),\n          randomNum(0, this.options.height / 2)\n        )\n        ctx.lineTo(\n          randomNum(0, this.options.width / 2),\n          randomNum(0, this.options.height)\n        )\n        ctx.stroke()\n      }\n      /**绘制干扰点**/\n      for (var i = 0; i < this.options.width / 4; i++) {\n        ctx.fillStyle = randomColor(0, 255)\n        ctx.beginPath()\n        ctx.arc(\n          randomNum(0, this.options.width),\n          randomNum(0, this.options.height),\n          1,\n          0,\n          2 * Math.PI\n        )\n        ctx.fill()\n      }\n    },\n\n    /**验证验证码**/\n    validate: function(code) {\n      var verifyCode = code.toLowerCase()\n      var v_code = this.options.code.toLowerCase()\n      if (verifyCode == v_code) {\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n\n  /**生成字母数组**/\n  function getAllLetter() {\n    var letterStr =\n      'a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z'\n    return letterStr.split(',')\n  }\n  /**生成一个随机数**/\n  function randomNum(min, max) {\n    return Math.floor(Math.random() * (max - min) + min)\n  }\n  /**生成一个随机色**/\n  function randomColor(min, max) {\n    var r = randomNum(min, max)\n    var g = randomNum(min, max)\n    var b = randomNum(min, max)\n    return 'rgb(' + r + ',' + g + ',' + b + ')'\n  }\n\n  return new GVerify(id)\n}\n```\n","tags":["js"]},{"title":"[go] Go语言","url":"/2019/05/11//articles/2019/05/11/1557582130000.html/","content":"<a href=\"https://github.com/astaxie/go-best-practice\" target=\"_blank\">github|Go环境配置</a>\n<a href=\"https://github.com/astaxie/go-best-practice\" target=\"_blank\">github|go最佳实践</a>\n<a href=\"http://mosir.org/html/y2012/gtk-chinese-char-font-in-windows.html\" target=\"_blank\">Windows下GTK中文显示问题</a>\n","tags":["go"]},{"title":"[gitlab] 安装及使用","url":"/2019/05/11//articles/2019/05/11/1557582129000.html/","content":"<a href=\"https://www.jianshu.com/p/b04356e014fa\" target=\"_blank\">手把手教你 GitLab 的安装及使用</a>\n","tags":["gitlab"]},{"title":"[docker] 后台运行注意事项","url":"/2019/05/11//articles/2019/05/11/1557582128000.html/","content":"<a href=\"https://www.cnblogs.com/jing1617/p/9474545.html\" target=\"_blank\">Docker启动一个Centos镜像</a>\n```\ndocker pull centos:7.2.1511\ndocker run -dit <imageID> /bin/bash\n\n#这样就能启动一个一直停留在后台运行的Centos了\n#如果少了/bin/bash的话\n#Docker会生成一个Container但是马上就停止了，不会一致运行即使有了-d参数。\n```\n\n然后我们可以进入我们这个Centos\n```\ndocker attach <ContainerID>\n```","tags":["docker"]},{"title":"[centos] nginx配置https","url":"/2019/05/11//articles/2019/05/11/1557582127000.html/","content":"```\nyum install -y gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel\n#访问\n#https://nginx.org/en/download.html\nwget -c https://nginx.org/download/nginx-1.10.1.tar.gz\ntar -zxvf nginx-1.10.1.tar.gz\ncd nginx-1.10.1\n./configure\nmake\nmake install\nwhereis nginx\n```\n\n启动、停止nginx\n```\ncd /usr/local/nginx/sbin/\n/usr/local/nginx/sbin/nginx -t\n./nginx\n./nginx -s stop\n./nginx -s quit\n./nginx -s reload\n```\n\n先停止再启动\n```\n./nginx -s quit\n./nginx\n```\n\n查询nginx进程：\n```\nps aux|grep nginx\n```\n\nnginx开启SSL模块\n```\n./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module\nmake\ncp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak\ncp ./objs/nginx /usr/local/nginx/sbin/\n/usr/local/nginx/sbin/nginx -V\n```\n\nnginx.conf文件部分内容\n```\n{\n    upstream tomcat {\n       server  127.0.0.1:<使用端口> weight=10;\n    }\n    # HTTPS server\n    #\n    server {\n        listen       443 ssl;\n        server_name  localhost;\n        #server_name  tourtest.d-chip.com;\n\n        ssl_certificate      cert/filename.pem;\n        ssl_certificate_key  cert/filename.key;\n\n        ssl_session_cache    shared:SSL:1m;\n        ssl_session_timeout  5m;\n\n        ssl_ciphers  HIGH:!aNULL:!MD5;\n        ssl_prefer_server_ciphers  on;\n\n        #location / {\n        #    root   html;\n        #    index  index.html index.htm;\n        #}\n\n        location / {\n            include uwsgi_params;\n            proxy_pass http://<公网ip>:<使用端口>/;\n            proxy_set_header Host $host:$server_port;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header REMOTE-HOST $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            client_max_body_size    2000m;\n        }\n    }\n}\n```","tags":["centos"]},{"title":"[css] 文本显示在下角","url":"/2019/05/11//articles/2019/05/11/1557582127000.html/","content":"```xml\n<!DOCTYPE html>\n<html>\n\n<head>\n    <title>文本显示在下角</title>\n</head>\n\n<body>\n    <div style=\"position:relative;width: 200px;height: 200px;\">\n        <div style=\"position:absolute; bottom:0;right:0\">\n            我是文本\n        </div>\n    </div>\n</body>\n\n</html>\n```","tags":["css"]},{"title":"[blog] springboot","url":"/2019/05/11//articles/2019/05/11/1557582126000.html/","content":"<a href=\"https://github.com/yidao620c/SpringBootBucket\" target=\"_blank\">SpringBootBucket</a>\n<a href=\"https://www.jsanf.com/\" target=\"_blank\">jsanf.com</a>\n<a href=\"https://github.com/zhaoqize/blog\" target=\"_blank\">github|blog</a>\n<a href=\"https://zhaoqize.github.io/blog/#/\" target=\"_blank\">技术演示</a>\n\n<a href=\"http://clawhub.me\" target=\"_blank\">blog</a>\n<a href=\"https://github.com/ClawHub?tab=repositories\" target=\"_blank\">ClawHub的gihtub</a>\n<a href=\"https://blog.52itstyle.vip/\" target=\"_blank\">柒's Blog</a>","tags":["blog"]},{"title":"[android] 极光推送","url":"/2019/05/11//articles/2019/05/11/1557582125000.html/","content":"<a href=\"https://blog.csdn.net/jun_tong/article/details/80460592\" target=\"_blank\">极光推送jpush</a>","tags":["android"]},{"title":"[android] SDK","url":"/2019/05/11//articles/2019/05/11/1557582124000.html/","content":"<a href=\"http://blog.sina.com.cn/s/blog_6804f09d01011vi3.html\" target=\"_blank\">Android SDK的安装与环境变量配置</a>\n```\nANDROID_HOME\nE:\\Android\\Sdk\n\n.;%ANDROID_HOME%\\platform-tools;%ANDROID_HOME%\\tools\n\nandroid -h\n\nAndroid Studio中安装Genymotion插件\nhttps://www.cnblogs.com/whycxb/p/6850454.html\nhttps://www.genymotion.com/plugins/\n\nandroid studio 点击 View > Toolbar\n\n下载arm的支持组件，然后直接拖到Genymotion建立的虚拟器上面点击OK重启就可以正常调试了。\nGenymotion-ARM-Translation.zip\n链接：\nhttps://pan.baidu.com/s/1V94cQQtPdqhkLyWYGTa-Pg\n密码：\nt94m\n\nndk\nhttps://blog.csdn.net/qiujuer/article/details/42040963\n```","tags":["android"]},{"title":"[小程序] 消息提示组件","url":"/2019/05/11//articles/2019/05/11/1557582123000.html/","content":"<a href=\"https://www.jianshu.com/p/d210f12b63ff\" target=\"_blank\">小程序 发送模板消息的功能实现</a>\n<a href=\"https://github.com/JingYin007/wxSendTemplateCode\" target=\"_blank\">消息推送</a>\n<a href=\"https://blog.csdn.net/sinat_27612147/article/details/78456363\" target=\"_blank\">小程序即时通讯聊天控件（一）</a>\n<a href=\"https://github.com/unmagic/wechat-im\" target=\"_blank\">微信小程序即时通讯模板</a>\n<a href=\"https://www.cnblogs.com/cisum/p/10421658.html\" target=\"_blank\">微信小程序 - 提示消息组件 component</a>\n<a href=\"https://www.playsort.cn/file/alert.zip\" target=\"_blank\">alert.zip</a>\n<a href=\"http://www.cnblogs.com/okaychen/p/7275873.html\" target=\"_blank\">微信小程序-滚动消息通知</a>\n<a href=\"http://grace.hcoder.net/\" target=\"_blank\">graceUI</a>\n","tags":["小程序"]},{"title":"[小程序] 扫码支付","url":"/2019/05/11//articles/2019/05/11/1557582122000.html/","content":"<a href=\"https://www.cnblogs.com/zhuanzhuanfe/p/8137467.html\" target=\"_blank\">图解 | 扫码登录、扫码支付</a>\n<a href=\"http://www.php.cn/php-weizijiaocheng-409805.html\" target=\"_blank\">php实现微信以及小程序扫码支付的代码</a>\n\n","tags":["小程序"]},{"title":"[小程序] 获取经纬度","url":"/2019/05/11//articles/2019/05/11/1557582121000.html/","content":"<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/wx.getLocation.html\" target=\"_blank\">官方文档</a>\n```\nwgs84 返回 gps 坐标，gcj02 返回可用于 wx.openLocation 的坐标\n\n火星坐标指的就是实际坐标经过GCJ02算法得到的坐标，而百度坐标则是BD09，还有WGS84坐标\n```\n<a href=\"https://www.jianshu.com/p/464aa3d0e251\" target=\"_blank\">使用小程序内置地图wx.getLocation和wx.openLocation</a>\n代码以及注释说明\n```\n  //GCJ-02是由中国国家测绘局制订的地理信息系统的坐标系统\n  //G表示Guojia国家,C表示Cehui测绘,J表示Ju局\n  onLoad: function() {\n      wx.getLocation({\n          type: 'gcj02',\n          success: function (res) {\n              var latitude = res.latitude;\n              var longitude = res.longitude;\n          }\n      });\n  },\n\n  //World Geodetic System 1984，是为GPS全球定位系统使用而建立的坐标系统\n  getLocation:function(){\n    var _this=this;\n    wx.getLocation({\n      type: 'wgs84',\n      success: function (res) {\n        var latitude = res.latitude\n        var longitude = res.longitude\n        var speed = res.speed\n        var accuracy = res.accuracy\n        var altitude = res.altitude\n        var verticalAccuracy = res.verticalAccuracy\n        var horizontalAccuracy = res.horizontalAccuracy\n        _this.setData({\n          latitude: latitude,\n          longitude: longitude,\n          speed: speed,\n          accuracy: accuracy,\n          altitude: altitude,\n          verticalAccuracy: verticalAccuracy,\n          horizontalAccuracy: horizontalAccuracy\n        })\n      }\n    })\n  }\n```\n<a href=\"https://blog.csdn.net/qq_37968920/article/details/82315755\" target=\"_blank\">微信小程序API 之 位置API wx.getLocation(OBJECT)、wx.chooseLocation(OBJECT)、wx.openLocation(OBJECT)</a>\n<a href=\"https://blog.csdn.net/qq_34775102/article/details/87004878\" target=\"_blank\">微信小程序wx.getLocation 位置精确定位 wgs84转百度坐标系</a>\n<a href=\"https://blog.csdn.net/yzyssg1/article/details/76120617\" target=\"_blank\">火星坐标、百度坐标、WGS84坐标转换代码（JS、python版）</a>","tags":["小程序"]},{"title":"[小程序] 欢迎页","url":"/2019/05/11//articles/2019/05/11/1557582120000.html/","content":"<a href=\"https://blog.csdn.net/qq_35324453/article/details/81269944\" target=\"_blank\">微信小程序登录欢迎页面demo</a>\n<a href=\"https://github.com/super456/wechatWeclomePage\" target=\"_blank\">github</a>\n<a href=\"https://github.com/EastWorld/wechat-app-mall\" target=\"_blank\">EastWorld/wechat-app-mall</a>\n<a href=\"https://github.com/qindiandadudu/TianguoguoXiaopu\" target=\"_blank\">甜果果小铺 | 基于EastWorld的微信小程序商城</a>\n包含\n```\n精选\n发现\n分类\n购物车\n我的\n```","tags":["小程序"]},{"title":"[小程序] 工具类","url":"/2019/05/11//articles/2019/05/11/1557582119000.html/","content":"<a href=\"https://blog.csdn.net/sinat_17775997/article/details/54982055\" target=\"_blank\">【造轮子】utils工具类（常用方法的封装）</a>\n<a href=\"https://blog.csdn.net/qq_20330595/article/details/82836396\" target=\"_blank\">小程序 Utils工具集合（包含链接复制）</a>\n<a href=\"https://www.jianshu.com/p/27f6be651286\" target=\"_blank\">在微信小程序中创建一个统一的网络请求工具类（带token）</a>\n","tags":["小程序"]},{"title":"[小程序] 分页加载","url":"/2019/05/11//articles/2019/05/11/1557582118000.html/","content":"<a href=\"https://blog.csdn.net/xiehuimx/article/details/74938034\" target=\"_blank\">微信小程序分页加载</a>\n<a href=\"https://github.com/xiehui999/SmallAppForQQ\" target=\"_blank\">SmallAppForQQ</a>\n","tags":["小程序"]},{"title":"[小程序] weui","url":"/2019/05/11//articles/2019/05/11/1557582117000.html/","content":"<a href=\"https://github.com/Tencent/weui-wxss\" target=\"_blank\">weui-wxss</a>\n\n","tags":["小程序"]},{"title":"[小程序] UI组件库","url":"/2019/05/11//articles/2019/05/11/1557582116000.html/","content":"<a href=\"https://www.jianshu.com/p/4182f4a18cb6\" target=\"_blank\">6个最优秀的微信小程序UI组件库</a>\n\n```\nWeUI WXSS\nWeUI WXSS是腾讯官方UI组件库WeUI的小程序版，提供了跟微信界面风格一致的用户体验。\n\nGitHub地址：https://github.com/Tencent/weui-wxss\nnpm下载：npm i weui-wxss\n```\n\n```\niView WeApp\niView是TalkingData发布的一款高质量的基于Vue.js组件库，而iView weapp则是它们的小程序版本。\nGitHub地址：https://github.com/TalkingData/iview-weapp\nnpm下载：npm i iview-weapp\n```\n\n```\nZanUI WeApp\nZanUI WeApp是有赞移动 Web UI 规范 ZanUI 的小程序实现版本，结合了微信的视觉规范，为用户提供更加统一的使用感受。\n现已包含 badge、btn、card、cell、dialog、icon、label、noticebar、panel、popup、switch、tab、toast、tooltips 等组件或元素。\nGitHub地址：https://github.com/youzan/zanui-weapp\nnpm下载：npm i zanui-weapp\n另外，ZanUI也使用mpvue重写了zanui-weapp，实现了其中所有组件，为使用mpvue的开发者提供了方便。\nGitHub地址：https://github.com/samwang1027/mpvue-zanui\nnpm下载：npm i mpvue-zanui\n```\n\n\n```\nMinUI\nMinUI 是蘑菇街前端开发团队开发的基于微信小程序自定义组件特性开发而成的一套简洁、易用、高效的组件库，适用场景广，覆盖小程序原生框架，各种小程序组件主流框架等，并且提供了专门的命令行工具。\nGitHub地址：https://github.com/meili/minui\n```\n\n```\nWux WeApp\nWux WeApp也是一个非常不错的微信小程序自定义 UI 组件库，组件比较丰富，值得使用。\n\nGitHub地址：https://github.com/wux-weapp/wux-weapp\nnpm下载：npm i wux-weapp\n```\n\n```\nColorUI\nColorUI是一个Css类的UI组件库！不是一个Js框架。相比于同类小程序组件库，ColorUI更注重于视觉交互！\n\n其组件在美观性方面比较突出。\n\nGitHub地址：https://github.com/weilanwl/ColorUI\n```","tags":["小程序"]},{"title":"[springcloud] 简书专栏","url":"/2019/05/11//articles/2019/05/11/1557582115000.html/","content":"<a href=\"https://segmentfault.com/blog/spring-cloud\" target=\"_blank\">SpringCloud Finchley 从入门到精通实战系列</a>\n<a href=\"https://www.jianshu.com/c/d0c5b34afc5f\" target=\"_blank\">简书专栏SpringCloud</a>","tags":["springcloud"]},{"title":"[springcloud] 代码生成器","url":"/2019/05/11//articles/2019/05/11/1557582114000.html/","content":"<a href=\"https://github.com/2014shijina2014/jeeSpringCloud\" target=\"_blank\">JeeSpringCloudV2.5-互联网云快速开发框架</a>\n```\n五、架构说明\n技术选型\n\n使用目前流行的多种web技术，包括spring boot spring mvc、mybatis、Vue.js。\n\nSpring cloud 分布式、微服务、集群、zookeper、nignx。\n\n代码生成（前端界面、底层代码、微服务的生成）。\n\nRepositoryORM仓库,提供ORM接口和多种实现,可进行配置实现。\n\nRepositoryRedis仓库,提供Redis接口和多种实现,可进行配置实现。可以配置调用单机、redis、云redis对接。\n\nRepositoryService仓库,提供Service接口和多种实现,可进行配置实现。可以配置调用dubbo、微服务、基础服务器对接接口和实现。\n\n六、代码生成器\n代码生成器\n\nspring mvc/Vue.js\n控制层、服务层、数据访问层\nRedis\nmybatis\nalibaba dubbo\n微服务\n集群\n前端界面（增删改查）\n图表统计页面\n地图统计页面\n```","tags":["springcloud"]},{"title":"[springcloud] eurake注册中心","url":"/2019/05/11//articles/2019/05/11/1557582113000.html/","content":"<a href=\"https://blog.csdn.net/zhangxing52077/article/details/81335021\" target=\"_blank\">eurake注册中心</a>\n\n","tags":["springcloud"]},{"title":"[springboot] 极光推送","url":"/2019/05/11//articles/2019/05/11/1557582112000.html/","content":"<a href=\"https://blog.csdn.net/x541211190/article/details/81123829\" target=\"_blank\">【使用】极光推送Springboot微服务搭建教程</a>\n<a href=\"https://www.cnblogs.com/V1haoge/p/6439313.html\" target=\"_blank\">极光推送经验之谈-Java后台服务器实现极光推送的两种实现方式</a>","tags":["springboot"]},{"title":"[springboot] Apollo","url":"/2019/05/11//articles/2019/05/11/1557582111000.html/","content":"<a href=\"https://blog.csdn.net/niuchenliang524/article/details/89332496\" target=\"_blank\">【Apollo】分布式配置中心Apollo环境搭建</a>\n\n<a href=\"https://blog.csdn.net/z960339491/article/details/80667559\" target=\"_blank\">Apollo分布式配置中心部署以及使用</a>\n\n<a href=\"https://blog.csdn.net/luhong327/article/details/81453001\" target=\"_blank\">携程Apollo统一配置中心的搭建和使用（java）</a>\n","tags":["springboot"]},{"title":"[springboot] jpa","url":"/2019/05/11//articles/2019/05/11/1557582110000.html/","content":"<a href=\"https://www.cnblogs.com/crawl/p/7703679.html\" target=\"_blank\">JPA + SpringData 操作数据库原来可以这么简单</a>\n\n<a href=\"https://blog.csdn.net/niuchenliang524/article/details/81744819\" target=\"_blank\">【JPA】Springboot+jpa简单的增删改查</a>\n\n简书\n<a href=\"https://www.jianshu.com/p/1720cba80119\" target=\"_blank\">（1）SpringBoot 的第一次邂逅</a>\n<a href=\"https://www.jianshu.com/p/c14640b63653\" target=\"_blank\">（2）SpringBoot 中 JPA 的使用</a>\n\n\n\n","tags":["springboot"]},{"title":"[ubuntu] ssh","url":"/2019/05/11//articles/2019/05/11/1557582109000.html/","content":"```\napt-get install openssh-server\n```\n\n端口修改\n```\n/etc/ssh/sshd_config\nPort 22\n```\n\n开启允许root账号使用密码登陆\n```\nsudo gedit /etc/ssh/sshd_config\n#找到下面相关配置：\n# Authentication:\nLoginGraceTime 120\nPermitRootLogin prohibit-password\nStrictModes yes\n\n#更改为：\n# Authentication:\nLoginGraceTime 120\n#PermitRootLogin prohibit-password\nPermitRootLogin yes\nStrictModes yes\n\n#重启ssh\nsudo service ssh restart\n#或\nsudo /etc/init.d/ssh restart\n```\n\n<a href=\"https://www.cnblogs.com/ftl1012/p/ssh.html\" target=\"_blank\">密码登陆</a>\n```\nvim /etc/ssh/sshd_config\nPasswordAuthentication yes\nPermitRootLogin yes\n\n#启动ssh服务\n/etc/init.d/ssh start\n\n#设置开机自动启动\nupdate-rc.d ssh enable\n```\n\n密钥登录\n```\nvim /etc/ssh/sshd_config\n\nRSAAuthentication yes\nPubkeyAuthentication yes\n\n#root 用户通过 SSH 登录：\nPermitRootLogin yes\n#当你完成全部设置，并以密钥方式登录成功后，再禁用密码登录：\nPasswordAuthentication no\nservice sshd restart\n```","tags":["ubuntu"]},{"title":"[ubuntu] jdk8","url":"/2019/05/11//articles/2019/05/11/1557582108000.html/","content":"<a href=\"https://blog.csdn.net/xiamoyanyulrq/article/details/83022632\" target=\"_blank\">Ubuntu安装jdk8的两种方式</a>\n```\nadd-apt-repository ppa:webupd8team/java\napt-get update\napt-get install oracle-java8-installer\necho oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\njavac -version\n```\n","tags":["ubuntu"]},{"title":"[debian] jdk8","url":"/2019/05/11//articles/2019/05/11/1557582107000.html/","content":"<a href=\"\" target=\"_blank\"></a>\ndebian9安装java8\n1.添加webupd8team Java PPA(Personal Package Archives) repository到系统里;\n```\nvim /etc/apt/sources.list.d/java-8-debian.list\n\ndeb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\ndeb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\n```\n2.在安装之前导入GPG key到系统验证包的合法性;\n```\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886\n#\n出现以下的错误提示：\nError:\nExecuting: /tmp/apt-key-gpghome.iKAAqs0hjL/gpg.1.sh --keyserver keyserver.ubuntu.com --recv-keys EEA14886\ngpg: failed to start the dirmngr '/usr/bin/dirmngr': No such file or directory\ngpg: connecting dirmngr at '/tmp/apt-key-gpghome.iKAAqs0hjL/S.dirmngr' failed: No such file or directory\ngpg: keyserver receive failed: No dirmngr\n\nTip:No dirmngr\n提示没有dirmngr，安装dirmngr：\napt-get install software-properties-common dirmngr\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886\n```\n3.apt-get update(更新索引文件);\n```\napt-get update\n```\n\n<a href=\"https://www.jianshu.com/p/986efb4025e8\" target=\"_blank\">执行apt-add-repository 提示command not found 处理</a>\n\n4.安装java8;\n```\napt-get install python-software-properties\napt-get install software-properties-common\nadd-apt-repository ppa:webupd8team/java\napt-get update\n# 开始安装\napt-get install oracle-java8-installer\n```\n5.查看java版本，以及java, javac命令是否可用；\n```\njava -version\njava\njavac\n```\n6.将oracle-java8设置为默认的java环境；\n```\napt-get install oracle-java8-set-default\n```\n<a href=\"https://www.cnblogs.com/duyinqiang/p/5182797.html\" target=\"_blank\">debian安装jdk8安装包</a>\n<a href=\"https://www.cnblogs.com/xuliangxing/p/7066913.html\" target=\"_blank\">linux jdk8</a>\n<a href=\"http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz\" target=\"_blank\">官网|jdk8</a>\n```\nmkdir -p /usr/lib/jvm/\nvi /etc/profile\n\nexport JAVA_HOME=/usr/lib/jvm/jdk1.8 \nexport JRE_HOME=${JAVA_HOME}/jre \nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n\nsource /etc/profile\nsource ~/.bashrc\n```\n7.配置JDK1.8中的java，javac工具：\n```\nsudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.8.0/bin/java 300 \nsudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.8.0/bin/javac 300\n```\n8.修改系统默认java及javac版本：\n```\nsudo update-alternatives --config java \nsudo update-alternatives --config javac \n```","tags":["debian"]},{"title":"[debian] iptables","url":"/2019/05/11//articles/2019/05/11/1557582106000.html/","content":"<a href=\"https://my.oschina.net/u/2404183/blog/509676?p=1\" target=\"_blank\">debian下配置防火墙iptables</a>\nDebian安装配置Iptables防火墙\n```\napt-get install iptables\niptables -A INPUT -p tcp --dport 22 -j ACCEPT\niptables -A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT\niptables -A INPUT -p tcp --dport 80 -j ACCEPT\niptables -A INPUT -p tcp --dport 443 -j ACCEPT\nservice iptables save\n```\n<a href=\"https://my.oschina.net/u/2404183/blog/509676?p=1\" target=\"_blank\">iptables设置</a>\n```\n#若要停止iptables，iptables -F清空所有配置效果等同于停止\n\n#查找iptables 所在的路径。\nwhereis iptables\n\n#1、将iptables配置保存到/etc/iptables，这个文件名可以自己定义，与下面的配置一致即可\niptables-save > /etc/iptables\n\n#2、创建自启动配置文件，并授于可执行权限\niptables-save > /etc/iptables\n\n#3、编辑该自启动配置文件，内容为启动网络时恢复iptables配置\nvi /etc/network/if-pre-up.d/iptables\n内容为：\n#!/bin/sh\n/sbin/iptables-restore < /etc/iptables\n##注意：在下次修改iptables规则之后要重新导出配置文件\n\n#清空配置\niptables -F\niptables -X\niptables -Z\n\n#配置，禁止进，允许出，允许回环网卡\niptables -P INPUT DROP\niptables -A OUTPUT -j ACCEPT\niptables -A INPUT -i lo -j ACCEPT\n\n#允许ping\niptables -A INPUT -p icmp -j ACCEPT\n\n#允许ssh\niptables -A INPUT -p tcp --dport 22 -j ACCEPT\n\n#允许ftp\niptables -A INPUT -p tcp --dport 21 -j ACCEPT\niptables -A INPUT -p tcp --dport 20 -j ACCEPT\n\n#允许ftp被动接口范围，在ftp配置文件里可以设置\niptables -A INPUT -p tcp --dport 20000:30000 -j ACCEPT\n\n#学习felix，把smtp设成本地\niptables -A INPUT -p tcp -m tcp --dport 25 -j ACCEPT -s 127.0.0.1\niptables -A INPUT -p tcp -m tcp --dport 25 -j REJECT\n\n#允许DNS\niptables -A INPUT -p tcp -m tcp --dport 53 -j ACCEPT\niptables -A INPUT -p udp -m udp --dport 53 -j ACCEPT\n\n#允许http和https\niptables -A INPUT -p tcp --dport 80 -j ACCEPT\niptables -A INPUT -p tcp --dport 443 -j ACCEPT\n\n#允许已建立的或相关连的通行\niptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n#禁止其他未允许的规则访问\niptables -A INPUT -j REJECT  #（注意：如果22端口未加入允许规则，SSH链接会直接断开。）\niptables -A FORWARD -j REJECT\n\n#保存配置\niptables-save > /etc/iptables\n```\n\n根据iptables.rule导入规则防火墙规则\n```\nvim /etc/iptables.rule\niptables-restore < /etc/iptables.rule\n\n#如果发现iptables-restore v1.x.x: no command specified的错误，就把脚本里面的空行全部删除，然后再重新回车添加\n```\niptables.rule\n```\n*filter\n\n# Allows all loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0\n-A INPUT -i lo -j ACCEPT\n-A INPUT ! -i lo -d 127.0.0.0/8 -j REJECT\n\n# Accepts all established inbound connections\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n# Allows all outbound traffic\n# You could modify this to only allow certain traffic\n-A OUTPUT -j ACCEPT\n\n# Allows HTTP and HTTPS connections from anywhere (the normal ports for websites)\n-A INPUT -p tcp --dport 80 -j ACCEPT\n-A INPUT -p tcp --dport 443 -j ACCEPT\n\n# Allows SSH connections for script kiddies\n# THE -dport NUMBER IS THE SAME ONE YOU SET UP IN THE SSHD_CONFIG FILE\n-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT\n\n# Allow ping\n-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT\n\n# log iptables denied calls (access via 'dmesg' command)\n-A INPUT -m limit --limit 5/min -j LOG --log-prefix \"iptables denied: \" --log-level 7\n\n# Reject all other inbound - default deny unless explicitly allowed policy:\n-A INPUT -j REJECT\n-A FORWARD -j REJECT\n```","tags":["debian"]},{"title":"[debian] ssh","url":"/2019/05/11//articles/2019/05/11/1557582105000.html/","content":"```\napt-get install openssh-server\n```\n\n端口修改\n```\n/etc/ssh/sshd_config\nPort 22\n```\n\n开启允许root账号使用密码登陆\n```\nvim /etc/ssh/sshd_config\n#找到下面相关配置：\n# Authentication:\nLoginGraceTime 120\nPermitRootLogin prohibit-password\nStrictModes yes\n\n#更改为：\n# Authentication:\nLoginGraceTime 120\n#PermitRootLogin prohibit-password\nPermitRootLogin yes\nStrictModes yes\n\n#重启ssh\nservice ssh restart\n#或\n/etc/init.d/ssh restart\n/etc/init.d/ssh reload\n```\n\n<a href=\"https://www.cnblogs.com/ftl1012/p/ssh.html\" target=\"_blank\">密码登陆</a>\n```\nvim /etc/ssh/sshd_config\nPasswordAuthentication yes\nPermitRootLogin yes\nUsePAM no\n\n#启动ssh服务\n/etc/init.d/ssh start\n\n#设置开机自动启动\nupdate-rc.d ssh enable\n```\n\n密钥登录\n```\nvim /etc/ssh/sshd_config\n\nRSAAuthentication yes\nPubkeyAuthentication yes\n\n#root 用户通过 SSH 登录：\nPermitRootLogin yes\n#当你完成全部设置，并以密钥方式登录成功后，再禁用密码登录：\nPasswordAuthentication no\nservice sshd restart\n```\n\n<a href=\"https://blog.csdn.net/superljn/article/details/81532073\" target=\"_blank\">修改ssh端口+禁止密码登陆+密钥对登陆</a>\n<a href=\"http://www.runoob.com/w3cnote/set-ssh-login-key.html\" target=\"_blank\">菜鸟教程 | 设置 SSH 通过密钥登录</a>\n\nssh修改登陆密码\n```\n#修改密码的命令\npasswd\n\nls /etc/ssh/ssh_config \nls /etc/ssh/sshd_config\n\n#修改SSH的端口为23\nwhereis sshd\n/usr/sbin/sshd -p 23\n```\n\niptables必须工作在容器的privileged模式下，否则就会如上报错\ncan't initialize iptables table Permission denied (you must be root)\n```\ndocker run -privileged [imageName]\n```\n","tags":["debian"]},{"title":"[centos] 设置免密登陆","url":"/2019/05/11//articles/2019/05/11/1557582104000.html/","content":"<a href=\"https://www.jianshu.com/p/991b39c48b0f\" target=\"_blank\">centos7设置SSH免密码登录教程</a>\n\n","tags":["centos"]},{"title":"[Alpine] 常用命令","url":"/2019/05/11//articles/2019/05/11/1557582103000.html/","content":"<a href=\"https://blog.csdn.net/qq_34924407/article/details/82056717\" target=\"_blank\">Alpine Linux常用命令</a>\n<a href=\"https://www.cnblogs.com/jackadam/p/9290366.html\" target=\"_blank\">Alpine Linux常用命令(同上)</a>\n","tags":["Alpine"]},{"title":"[pdm] powerdesigner学习","url":"/2019/05/11//articles/2019/05/11/1557582102000.html/","content":"<a href=\"https://www.cnblogs.com/biehongli/p/6025954.html\" target=\"_blank\">powerdesigner学习</a>\n","tags":["pdm"]},{"title":"[requirejs] requirejs入门到精通","url":"/2019/05/11//articles/2019/05/11/1557582101000.html/","content":"<a href=\"https://blog.csdn.net/bluesky1215/article/details/71079667\" target=\"_blank\">requirejs入门到精通</a>\n<a href=\"https://www.w3cschool.cn/jfinal/\" target=\"_blank\">w3cschool|jfinal</a>\n","tags":["requirejs"]},{"title":"[jenkins] windows+docker+centos镜像","url":"/2019/05/11//articles/2019/05/11/1557582100000.html/","content":"<a href=\"https://www.runoob.com/docker/windows-docker-install.html\" target=\"_blank\">windows安装docker</a>\n```\ndocker search centos\ndocker pull ansible/centos7-ansible\ndocker tag ansible/centos7-ansible centos7\ndocker run -dit -p 18080:8080 -p 10443:443 -p 10080:80 -p 10022:22 -p 3690:3690 --name myjenkins centos7\ndocker exec -it myjenkins /bin/bash\nyum install -y java\n```\n\n安装maven\n```\nwget http://mirror.bit.edu.cn/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz\n# 解压\ntar vxf apache-maven-3.6.1-bin.tar.gz\n# 移动\nmv apache-maven-3.6.1 /usr/local/maven3\n\n# 修改环境变量\nvim /etc/profile\nMAVEN_HOME=/usr/local/maven3\nexport MAVEN_HOME\nexport PATH=${PATH}:${MAVEN_HOME}/bin\n\nsource /etc/profile\n\n#验证maven是否安装成功\nmvn -v\n```\n\n<a href=\"https://www.cnblogs.com/weifeng1463/p/7593729.html\" target=\"_blank\">CentOS下搭建SVN服务器</a>\n```\n#安装\nyum install subversion\n\n#新建一个目录用于存储SVN目录\nmkdir /svn\n\n#新建一个测试仓库\nsvnadmin create /svn/test/\ncd /svn/test/conf\nvim svnserve.conf\n[general]\nanon-access = read\nauth-access = write\npassword-db = passwd\nauthz-db = authz\nrealm = /svn/test\n[sasl]\n\nvim passwd\n[users]\n# harry = harryssecret\n# sally = sallyssecret\nadmin = 123456\n\nvim\n[aliases]\n\n[groups]\nadmin = admin\n\n[/svn/test/]\n@admin = rw \n@user = r\n\nyum -y install psmisc\nkillall svnserve\n#启动svn服务\nsvnserve -d -r /svn/\n```\n\n<a href=\"https://www.cnblogs.com/liuhouhou/p/8975812.html\" target=\"_blank\">CentOS 7安装和配置ssh</a>\n```\nyum install -y openssl openssh-server\n```\n\n<a href=\"https://blog.csdn.net/u013218443/article/details/80184542\" target=\"_blank\">win10 上安装docker docker上安装centos 6.7 用ssh工具连接centos踩坑到出坑</a>\n\n<a href=\"https://www.mioshu.com/archives/112.html\" target=\"_blank\">使用Docker搭建svn服务器教程</a>\n```\n#注意svnserve.conf文件内容不要带上文字和符号'#',否则会导致启动失败\n```\n\n<a href=\"https://blog.csdn.net/chen_pt/article/details/53103995\" target=\"_blank\">Linux服务器下重启svn服务</a>\n```\nkillall svnserve\nps -ef|grep svnserve\nsvnserve -d -r /path/to/svn\n```\n\n\n安装jenkins\n```\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\nyum install -y jenkins\n#如果不能安装就到官网下载jenkis的rmp包，官网地址（http://pkg.jenkins-ci.org/redhat-stable/）\nwget http://pkg.jenkins-ci.org/redhat-stable/jenkins-2.7.3-1.1.noarch.rpm\nrpm -ivh jenkins-2.7.3-1.1.noarch.rpm\n```\n\n```\nyum -y install initscripts\nservice jenkins start\n```\n\n查看ip\n```\ndocker-machine ip\n```\n\n查看jenkins初始密码\n```\ncat /var/lib/jenkins/secrets/initialAdminPassword\n```\n\njenkins安装插件\n```\nGit plugin\nMaven Integration plugin\npublish over SSH\n```\n\n全局安全配置（Configure Global Security）\n```\n```\n\n全局工具配置（Global Tool Configuration）\n```\nBuild:\nRoot POM:\npom.xml\nGoals and options:\nclean install -Dmaven.test.skip=true -Ptest\n\nPost Steps:\n\n\n```\n\n\njenkins默认工作目录\n```\n/var/lib/jenkins/workspace/\n```\n\nSpringboot+Maven项目创建（idea）\nhttp://www.pianshen.com/article/711940390/\n```\nhttps://start.spring.io/\n```\n\nspring boot 项目利用Jenkins实现自动化部署\nhttps://blog.csdn.net/rengee202/article/details/80894872\n```\n1.后台技术架构：Spring boot 1.4.2.RELEASE +Mybatis 3+ Redis+ Mysql 5.6+JDK8;\n2.代码构建工具：maven 3.3;\n3.源代码托管工具：Gitlab;\n4.利用maven的docker插件打包成docker镜像在docker容器中部署项目；\n5.服务器是阿里云的ECS;\n```\n\n----------------------------------------------\n\n使用docker-svn镜像\nhttps://www.jianshu.com/p/0146b5ba69a6\n```\n```\n\nDocker搭建SVN服务器\nhttps://www.jianshu.com/p/6a7eac04692c\n```\n```\n\nlinux查看openjdk的安装的路径（环境变量）\nhttps://blog.csdn.net/zhangxiaohui4445/article/details/86626517\n查看openjdk位置\n```\nwhich java\nls -lrt /usr/bin/java\nls -lrt /etc/alternatives/java\n```\n\n<a href=\"https://www.cnblogs.com/ityouknow/archive/2017/11/26/7899349.html\" target=\"_blank\">纯洁的微笑 | Spring Boot(十六)：使用 Jenkins 部署 Spring Boot</a>\n\nJenkins部署SpringBoot应用到远程服务器(含脚本)\nhttps://www.jianshu.com/p/ba09cdc53343\nchl-deploy.sh\n```sh\n#!/bin/sh\n## java env\nexport JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64\nexport JRE_HOME=$JAVA_HOME/jre\n\n## exec shell name\nEXEC_SHELL_NAME=$1\\.sh\n## service name\nSERVICE_NAME=$1\nSERVICE_DIR=/chl\nJAR_NAME=$SERVICE_NAME\\.jar\nPID=pid/$SERVICE_NAME\\.pid\nWORK_DIR=$SERVICE_DIR/work\n\n#function start\nstart(){\n    cd $WORK_DIR\n   if [ ! -d \"log\" ]; then\n        mkdir log\n    fi\n   nohup $JRE_HOME/bin/java -Xms256m -Xmx512m -jar $JAR_NAME >log/$SERVICE_NAME.out 2>&1 &\n        echo $! > $SERVICE_DIR/$PID\n        echo \"#### start $SERVICE_NAME\"\n}\n\n# function stop\nstop(){\n    cd $WORK_DIR\n   if [ -f \"$SERVICE_DIR/$PID\" ]; then\n                kill `cat $SERVICE_DIR/$PID`\n                rm -rf $SERVICE_DIR/$PID\n        fi\n        echo \"#### stop $SERVICE_NAME\"\n        sleep 6\n        TEMP_PID=`ps -ef | grep -w \"$SERVICE_NAME\" | grep \"java\" | awk '{print $2}'`\n        if [ \"$TEMP_PID\" == \"\" ]; then\n            echo \"#### $SERVICE_NAME process not exists or stop success\"\n        else\n            echo \"#### $SERVICE_NAME process pid is:$TEMP_PID .\"\n            kill -9 $TEMP_PID\n        fi\n}\n\n# function clean\nclean(){\n    cd $WORK_DIR\n        if [ ! -d \"lastDeploy\" ]; then\n           mkdir lastDeploy\n        else\n           rm lastDeploy/$SERVICE_NAME*\n        fi\n        if [ -f \"$JAR_NAME\" ]; then\n           mv $JAR_NAME lastDeploy\n        fi \n}\n\ncase \"$2\" in\n\n    start)\n   start\n        ;;\n\n    stop)\n   stop\n        ;;\n\n    restart)\n        stop\n        sleep 2\n        start\n        echo \"#### restart $SERVICE_NAME\"\n        ;;\n   \n    clean)\n   stop\n    sleep 2\n   clean\n    echo \"#### clean $SERVICE_NAME\"\n   ;;\n\n    *)\n       ## restart\n       stop\n       sleep 2\n       start\n       ;;\n\nesac\nexit 0\n```\n\n```\ncd /chl/exec\nsh ./chl-deploy.sh springboot-demo1 clean\n```\n\njenkins+springboot+svn linux 自动化部署\nhttps://www.cnblogs.com/fengwenzhee/p/10448474.html\n\njenkins + springboot + svn + maven 搭建自动化构建平台\nhttps://blog.csdn.net/xw0111/article/details/80992733\n\n\n<a href=\"https://www.cnblogs.com/xiaoqi/p/docker-jenkins-cicd.html\" target=\"_blank\">Docker+Jenkins持续集成环境（1）使用Docker搭建Jenkins+Docker持续集成环境</a>\n<a href=\"https://www.cnblogs.com/Erick-L/p/8818697.html\" target=\"_blank\">\n使用Docker+Jenkins自动构建部署</a>","tags":["jenkins"]},{"title":"[java] idea+ssm+pagehelper+easyui","url":"/2019/05/11//articles/2019/05/11/1557582098000.html/","content":"<a href=\"https://www.cnblogs.com/hackyo/p/6646051.html\" target=\"_blank\">（1）使用idea2017搭建SSM框架</a>\n<a href=\"https://blog.csdn.net/wscwj8/article/details/78953301\" target=\"_blank\">（2）SSM框架+PageHelper实现EasyUI分页</a>\n<a href=\"https://blog.csdn.net/qq_26790807/article/details/62429290\" target=\"_blank\">spring配置pagehelper</a>\n在mybatis-config.xml中配置分页插件\n```\n    <!-- 配置分页插件 -->\n    <plugins>\n        <plugin interceptor=\"com.github.pagehelper.PageHelper\">\n            <!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库-->\n            <property name=\"dialect\" value=\"mysql\"/>\n        </plugin>\n    </plugins>\n```","tags":["java"]},{"title":"[java] cxf作webservice接口调用","url":"/2019/05/11//articles/2019/05/11/1557582097000.html/","content":"<a href=\"https://www.cnblogs.com/mengxuanyou/p/6881624.html\" target=\"_blank\">cxf作webservice接口调用</a>","tags":["java"]},{"title":"[css] 几种文字竖直排布","url":"/2019/05/11//articles/2019/05/11/1557582096000.html/","content":"<a href=\"https://blog.csdn.net/sangjinchao/article/details/60139706\" target=\"_blank\">CSS几种简单方法实现文字竖向排版</a>\n```\n1.一个句子的竖向排列 分中英文\n2.多个句子竖向排列（如古诗）三种\n3.字体横行，整体竖向排版\n```","tags":["css"]},{"title":"[debian] docker+jenkins","url":"/2019/05/08//articles/2019/05/08/1557327839000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.linuxidc.com/Linux/2018-06/152768.htm\" target=\"_blank\">CentOS 7.4下部署GitLab+Jenkins持续集成环境</a>\n<a href=\"https://www.linuxidc.com/Linux/2018-09/154475.htm\" target=\"_blank\">如何在Debian 9上安装Jenkins</a>\n\n<a href=\"https://www.cnblogs.com/keithtt/p/8438649.html\" target=\"_blank\">debian9部署jenkins</a>\n1、安装JDK\n```\napt install -y openjdk-8-jdk\njava -version\n```\n\n```\ndocker run -dit -p 10080:80 -p 10443:80 -p 18080:8080 --name=<container_name> <image_name>\n\ndocker run -dit -p 10080:80 -p 10443:80 -p 18080:8080 --name=gitlab2 my/gitlab\ndocker exec -it gitlab2 /bin/bash\n```\n\n<a href=\"https://blog.csdn.net/lsziri/article/details/69396990\" target=\"_blank\">Docker动态给容器Container暴露端口</a>\n\n查看Container的IP地址\n```\ndocker inspect <container name or id>| grep IPAddress\n```\n\n查看Container的映射的端口\n```\ndocker port <container name or id>\n```\n\n用iptables查看容器映射情况\n```\niptables -t nat -nvL\niptables -t nat -nvL --line-number\n```\n\n举例新增端口的映射\n```\n192.168.42.2 是根据 docker inspect <container name or id> | grep IPAddress 的结果\n##将主机31101 映射到 容器 6379端口\niptables -t nat -A PREROUTING  -p tcp -m tcp --dport 31101 -j DNAT --to-destination 192.168.42.2:6379\n```\n\n保存iptables规则\n```\niptables-save\n```\n\n查映射关系\n```\niptables -t nat -nvL | grep 192.168.42.2\n```\n\n用tomcat作为web容器部署jenkins\n1、安装tomcat\n```\napt update\napt install -y tomcat8\n\ndpkg -L tomcat8\n/etc/default/tomcat8\n/etc/init.d/tomcat8\n/etc/tomcat8/catalina.properties\n/etc/tomcat8/logging.properties\n/etc/tomcat8/server.xml\n/etc/tomcat8/web.xml\n/var/lib/tomcat8/webapps\n/var/lib/tomcat8/conf\n/var/lib/tomcat8/logs\n```\n","tags":["debian"]},{"title":"[redhat] docker+jenkins+springboot+svn触发构建","url":"/2019/05/08//articles/2019/05/08/1557327838000.html/","content":"<a href=\"https://blog.csdn.net/kefengwang/article/details/54233584\" target=\"_blank\">Jenkins 持续集成综合实战</a>\n\n拉取镜像,并创建container\n```\ndocker search redhat\ndocker pull hjd48/redhat\ndocker tag hjd48/redhat redhat6\ndocker run -dit -p 18080:8080 -p 10443:443 -p 10080:80 -p 10022:22 -p 3690:3690 --name myjenkins redhat6\ndocker ps\ndocker exec -it myjenkins /bin/bash\n```\n\n<a href=\"https://blog.csdn.net/chaigang/article/details/82759417\" target=\"_blank\">redhat6+centos6+yum源配置+中文安装信息提示</a>\n```\n#主机中下载CentOS6-Base-163.repo，并用docker cp放入容器中\n#http://mirrors.163.com/.help/CentOS6-Base-163.repo\n\ncp CentOS6-Base-163.repo /etc/yum.repos.d/\ncd /etc/yum.repos.d/\nmv rhel-source.repo rhel-source.repo.bak\nvi CentOS6-Base-163.repo\n:%s/$releasever/6/g\n#然后按enter建\n\n#清理缓存\nyum clean all\nyum makecache\n#验证\nyum install -y telnet passwd\n```\n\n```\nyum install -y wget vim git subversion openssl openssh-server psmisc initscripts\n```\n\n安装maven\n```\nwget http://mirror.bit.edu.cn/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz\n# 解压\ntar vxf apache-maven-3.6.1-bin.tar.gz\n# 移动\nmv apache-maven-3.6.1 /usr/local/maven3\n\n# 修改环境变量\nvim /etc/profile\nMAVEN_HOME=/usr/local/maven3\nexport MAVEN_HOME\nexport PATH=${PATH}:${MAVEN_HOME}/bin\n\nsource /etc/profile\n\n#验证maven是否安装成功\nmvn -v\n```\n\n安装和查看openjdk位置\n```\nrpm -qa | grep java | xargs rpm -e --nodeps\nyum -y install java-1.8.0-openjdk*\nwhich java\nls -lrt /usr/bin/java\nls -lrt /etc/alternatives/java\n```\n\n<a href=\"https://www.cnblogs.com/weifeng1463/p/7593729.html\" target=\"_blank\">CentOS下搭建SVN服务器</a>\n```\n#安装\nyum install subversion\n\n#新建一个目录用于存储SVN目录\nmkdir /svn\n\n#新建一个测试仓库\nsvnadmin create /svn/test/\n\n#注意svnserve.conf文件内容不要带上文字和符号'#',否则会导致启动失败\ncd /svn/test/conf\nvim svnserve.conf\n[general]\nanon-access = read\nauth-access = write\npassword-db = passwd\nauthz-db = authz\nrealm = /svn/test\n[sasl]\n\nvim passwd\n[users]\n# harry = harryssecret\n# sally = sallyssecret\nadmin = 123456\n\nvim authz\n[aliases]\n\n[groups]\n\n[/]\nadmin=rw\n\nyum -y install psmisc\nkillall svnserve\nps -ef|grep svnserve\n#启动svn服务\nsvnserve -d -r /svn/\n#检测\nsvn co svn://127.0.0.1/test\nsvn co svn://192.168.99.100/test\n```\n\n安装和启动jenkins\n```\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\nyum install -y jenkins\n#如果不能安装就到官网下载jenkis的rmp包，官网地址（http://pkg.jenkins-ci.org/redhat-stable/）\nwget http://pkg.jenkins-ci.org/redhat-stable/jenkins-2.7.3-1.1.noarch.rpm\nrpm -ivh jenkins-2.7.3-1.1.noarch.rpm\n```\n\n备份自定义对jenkins容器\n```\ndocker commit -a \"jenkins\" -m \"a new jenkins image\" myjenkins my/jenkins\n#docker run -dit -p 18080:8080 -p 10443:443 -p 10080:80 -p 10022:22 -p 3690:3690 --name jenkins my/jenkins\n```\n\n查看ip\n```\ndocker-machine ip\n#默认是:\n#192.168.99.100\n```\n\n运行jenkins\n```\ndocker exec -it myjenkins /bin/bash\n#yum -y install initscripts\n#service jenkins start\n#或\n/etc/init.d/jenkins start\n#访问:\n#http://192.168.99.100:18080\n```\n\n<a href=\"http://blog.chinaunix.net/uid-26118446-id-3512228.html\" target=\"_blank\">jenkins dead but pid file exists</a>\n\n查看jenkins初始密码\n```\ncat /var/lib/jenkins/secrets/initialAdminPassword\n```\n\n一些必要的包\n```\nmaven\n/usr/local/maven3/\nMaven Configuration\n/usr/local/maven3/conf/settings.xml\n\njdk\n/usr/lib/jvm/java-1.8.0\n/usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java\n\n\ntomcat8\nhttps://tomcat.apache.org/download-80.cgi\nwget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.41/bin/apache-tomcat-8.5.41.tar.gz\ntar zxvf apache-tomcat-8.5.41.tar.gz\nmkdir /tomcat\nmv apache-tomcat-8.5.41 /tomcat/tomcat8\necho 'export CATALINA_HOME=/tomcat/tomcat8' >> /etc/profile\nsource /etc/profile\n\nvim /tomcat/tomcat8/conf/server.xml\n80\ncd /tomcat/tomcat8/bin\nsh startup.sh\nsh shutdown.sh\nls /tomcat/tomcat8/webapps/\ntail -f ../logs/catalina.out\n```\n\njenkins插件\n```\nMaven Integration Plugin\n\nPublish over SSH\n\nDeploy to container\n\nSVN Publisher plugin\n```\n\njenkins默认工作目录\n```\n/var/lib/jenkins/workspace/\n```\n\n<a href=\"https://blog.csdn.net/zxd1435513775/article/details/80618640\" target=\"_blank\">持续集成工具Jenkins结合SVN的安装和使用</a>\nspringboot demo.zip\n```\n访问\nhttps://start.spring.io/\n下载springboot demo.zip\n```\n\n\nspringboot支持tomcat\n添加依赖\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <packaging>war</packaging>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n            <!-- 移除嵌入式tomcat插件 -->\n            <exclusions>\n                <exclusion>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-tomcat</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n            <scope>provided</scope>\n        </dependency>\n\n    </dependencies>\n</project>\n```\n\n启动类文件DemoApplication.java\n```\npackage com.example.demo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n\n\n@SpringBootApplication\npublic class DemoApplication extends SpringBootServletInitializer {\n\n    public static void main(String[] args) {\n        SpringApplication.run(DemoApplication.class, args);\n    }\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\n        return builder.sources(DemoApplication.class);\n    }\n\n}\n```\n\n<a href=\"https://www.cnblogs.com/xuxiaojian/p/9079132.html\" target=\"_blank\">jenkins部署到tomcat注意</a>\n```\n配置tomcat之前先确保目标tomcat已经启动\n```\n<a href=\"https://blog.51cto.com/ellenv/1932817\" target=\"_blank\">配置tomcat图解</a>\npost-commit\n```\ncd /svn/test/hooks/\ncp post-commit.tmpl post-commit\nchmod a+x post-commit\nvim post-commit\n#post-commit追加\n/usr/bin/curl -X post -v -u <jenkins用户名>:<jenkins用户密码> <jenkins构建URL地址>/job/<工程名>/build?token=<token>\n\nkillall svnserve\nsvnserve -d -r /svn/\n\n#触发和构建完，访问\nhttp://192.168.99.100:10080/demo/index/test\n```\n","tags":["redhat"]},{"title":"[css] div中内容上下居中","url":"/2019/05/08//articles/2019/05/04/1557325897000.html/","content":"<a href=\"http://www.divcss5.com/rumen/r50304.shtml\" target=\"_blank\">div中内容上下居中</a>\n```\n情形一：div限高，内容长度限一行\n情形二：div限高，内容不限\n情形三：div高度不定，内容高度一定\n情形四：div高度不定，内容高度不定\n```\n","tags":["css"]},{"title":"[css] png换色","url":"/2019/05/08//articles/2019/05/08/1557324399000.html/","content":"png换色\n```\n<!DOCTYPE html>\n<html>\n\n<head>\n    <title></title>\n</head>\n<style type=\"text/css\">\n\n.imgWrap {\n    width: 50px;\n    height: 50px;\n    overflow: hidden;\n    margin: 50px auto;\n}\n\n.imgWrap .targetImg {\n    width: 50px;\n    height: 50px;\n    position: relative;\n    background: url(\"https://www.easyicon.net/download/png/1233139/308/\") no-repeat center;\n    background-size: 50px 50px;\n}\n\n.imgWrap .targetImg:hover {\n    left: -50px;\n    border-right: 50px solid transparent;\n    -webkit-filter: drop-shadow(50px 0 0px red);\n    filter: drop-shadow(50px 0 0px red);\n}\n</style>\n\n<body>\n    <div class=\"imgWrap\">\n        <div class=\"targetImg\"></div>\n    </div>\n</body>\n\n</html>\n```","tags":["css"]},{"title":"[springboot] 专栏","url":"/2019/05/05//articles/2019/05/04/1557016263000.html/","content":"blog Moshow郑锴\n<a href=\"https://github.com/moshowgame\" target=\"_blank\">github|moshowgame</a>\n<a href=\"https://blog.csdn.net/moshowgame/article/details/83024867\" target=\"_blank\">SpringBoot2+WebSocket之聊天应用实战(优化版本)</a>\n","tags":["springboot"]},{"title":"[idea] github中的idea教程","url":"/2019/05/05//articles/2019/05/04/1557016262000.html/","content":"<a href=\"https://github.com/judasn/IntelliJ-IDEA-Tutorial\" target=\"_blank\">github中的idea教程</a>","tags":["idea"]},{"title":"[xmind] java技术栈导图","url":"/2019/05/05//articles/2019/05/04/1557016261000.html/","content":"<a href=\"https://github.com/chenyufeng1991/tech_repo/blob/master/Java%20EE%E6%8A%80%E6%9C%AF%E6%A0%88.xmind\" target=\"_blank\">JavaEE技术栈</a>\n.xmind\n```\nJava EE技术栈\nJava SE技术栈\nJava Web技术栈\nLinux技术栈\nMySQL技术栈\nREADME.md\nSpring主要jar包-思维导图\nSpring常用模块\nSpring常用注解-思维导图\nSpring特征\nSpring第三方框架集成-思维导图\nSpring装配注解比较-思维导图\ngit技术栈\nredis技术栈\n```","tags":["xmind"]},{"title":"[java] 工具类","url":"/2019/05/05//articles/2019/05/04/1557015903000.html/","content":"<a href=\"https://gitee.com/whvse\" target=\"_blank\">whvse的工具类</a>\n<a href=\"https://github.com/yz-java/common-project\" target=\"_blank\">common-project</a>\n```\nJava后端常用工具类、缓存接口、消息队列接口、第三方支付接口封装；\nRestful接口参数验证，错误信息友好提示。\n```\n<a href=\"https://github.com/chenssy89/jutils\" target=\"_blank\">jutils</a>\n```\n主要包括基础工具类（时间、正则表达式、字符串、随机数等等），\nexcel解析生成、word解析生成、文件操作、图片操作、敏感字、加解密、二维码生成\n```\n<a href=\"https://github.com/keaijohnee/JCake\" target=\"_blank\">JCake</a>\n```\n1、DateUtils.java(日期处理工具类)\n2、EmailUtils.java(邮件发送工具类)\n3、FileUtils.java(文件及文件件处理工具类)\n4、HttpUtils.java(HTTP POST和GET处理工具类)\n5、StringUtils.java(字符串处理工具类)\n6、TaskUtils.java(Java多线程、队列实现任务调度)\n7、AES.java(AES加密和解密算法)\n8、MD5.java(MD5加密和解密算法)\n```\n正则表达式验证工具类\n<a href=\"https://www.cnblogs.com/lr393993507/p/5234857.html\" target=\"_blank\">cnblogs|正则表达式验证工具类RegexUtils.java</a>\n<a href=\"https://www.jianshu.com/p/583998f435d0\" target=\"_blank\">简书|工具类之RegexUtils（正则工具类）</a>\n\n<a href=\"https://github.com/whvcse/RedisUtil\" target=\"_blank\">RedisUtil</a>\n```\n封装了对Redis五种基本类型的各种操作，力求符合Redis的原生操作，使用StringRedisTemplate实现！\nkey命令操作 | String数据操作 | Hash数据操作 | List数据操作 | Set数据操作 | zSet数据操作\n```\n\nReflectUtils\n对象转成json时只转指定的字段\n<a href=\"https://github.com/whvcse/EasyCaptcha\" target=\"_blank\">EasyCaptcha验证码</a>\n\nHttpUtil请求类\n<a href=\"https://gitee.com/whvse/HttpUtil\" target=\"_blank\">HttpUtil和HttpBaseUtil</a>\n\n<a href=\"https://github.com/evil0ps/utils\" target=\"_blank\">Java Utils工具类大全</a>","tags":["java"]},{"title":"[springboot] 微信扫描登陆","url":"/2019/05/05//articles/2019/05/04/1557015902000.html/","content":"<a href=\"https://github.com/pengziliu/spring-boot-2.0-leaning.git\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/lzp492782442/article/details/80268565\" target=\"_blank\">springBoot实战之揭秘网站微信扫码登录</a>\n","tags":["springboot"]},{"title":"[前端] HTML+CSS+JS实现鼠标点击特效富强民主文明","url":"/2019/05/05//articles/2019/05/04/1557015901000.html/","content":"<a href=\"https://blog.csdn.net/qq_30467901/article/details/81751267\" target=\"_blank\">HTML+CSS+JS实现鼠标点击特效\"富强\"\"民主\"\"文明\"方法</a>\n```html\n//定义获取词语下标\nvar a_idx = 0;\njQuery(document).ready(function($) {\n    //点击body时触发事件\n    $(\"body\").click(function(e) {\n    //需要显示的词语\n    var a = new Array(\"富强\",\"民主\", \"文明\", \"和谐\",\"自由\", \"平等\", \"公正\",\"法治\", \"爱国\", \"敬业\",\"诚信\", \"友善\");\n    //设置词语给span标签\n    var $i = $(\"<span/>\").text(a[a_idx]);\n    //下标等于原来下标+1  余 词语总数\n    a_idx = (a_idx + 1)% a.length;\n    //获取鼠标指针的位置，分别相对于文档的左和右边缘。\n    //获取x和y的指针坐标\n    var x = e.pageX, y = e.pageY;\n    //在鼠标的指针的位置给$i定义的span标签添加css样式\n    $i.css({\"z-index\" : 999999999999999999999999999999999999999999999999999999999999999999999,\n        \"top\" : y - 20,\n        \"left\" : x,\n        \"position\" : \"absolute\",\n        \"font-weight\" : \"bold\",\n        \"color\" : \"#ff6651\"\n        });\n    //在body添加这个标签\n    $(\"body\").append($i);\n        //animate() 方法执行 CSS 属性集的自定义动画。\n        //该方法通过CSS样式将元素从一个状态改变为另一个状态。CSS属性值是逐渐改变的，这样就可以创建动画效果。\n        //详情请看http://www.w3school.com.cn/jquery/effect_animate.asp\n        $i.animate({\n            //将原来的位置向上移动180\n            \"top\" : y - 180,\n            \"opacity\" : 0\n            //1500动画的速度\n        }, 1500, function() {\n            //时间到了自动删除\n            $i.remove();\n        });\n    });\n});\n\n```","tags":["前端"]},{"title":"[php] ubuntu14中apache2+nginx+phpmyadmin+mysql","url":"/2019/05/05//articles/2019/05/04/1557015899000.html/","content":"apache2\n```\nsudo apt-get update\nsudo apt-get install apache2\ncat /etc/apache2/apache2.conf\nsudo chmod 777 /var/www\n#对注册为服务的程序可以全局使用 service\nsudo service apache2 restart\n#未注册 service 需要制定到程序目录\nsudo /etc/init.d/apache2 restart\n```\n\nnginx\n```\n#Nginx 和 Apache 会抢夺80端口，最好先停止其中一个再装。\nsudo apt-get install nginx\n```\n\nphp5\n```\n#安装PHP5以及常用模块\nsudo apt-get install libapache2-mod-php5 php5 php5-gd php5-mysql php5-fpm php5-mcrypt php5-curl libcurl3 libcurl3-dev\n#apache的php.ini\n/etc/php5/apache2/php.ini;\n#nginx的php.ini\n/etc/php5/fpm/php.ini\n\n#另外装PHP的时候，也自动装了解析器，用来解析PHP语法，两个主要的文件分别在这两个目录：\n/var/run/php5-fpm.sock\n/var/run/php5-fpm.pid\n#在程序工作中，可能会因为权限问题PHP无法创建目录，这是因为在这里有个用户组配置\n/etc/php5/fpm/pool.d/www.conf\n#里面有两个默认设置是\nuser = www-data\ngroup = www-data\n#需要给目录设置用户组以及用户为 www-data:www-data 并重启FPM\nuser = www-data:www-data\ngroup = www-data:www-data\n```\n\nmysql\n```\n#安装过程中需要设置 root 密码，我设置的是 root。这步要记住自己设置的密码！\nsudo apt-get install mysql-server mysql-client\n```\n\nphpmyadmin\n```\nsudo apt-get install phpmyadmin\n```\nphpmyadmin配置\n```\nln -s /usr/share/phpmyadmin /var/www/html\n#phpMyAdmin 需要配置扩展目录 extension_dir，需要修改 php.ini\n#假如配置 Apache 位置在这里：\nsudo vi /etc/php5/apache2/php.ini\n#假如配置 Nginx 位置在这里：\nsudo vi /etc/php5/fpm/php.ini\n需要做这几个改动\nextension_dir 启用，并且值等于 \"PHP扩展目录\"\nextension=msql.so 的注释解除\nextension=curl.so 解决 curl 问题 （Nginx）\n```\n\n记录几个重要的目录位置\n```\nphp.ini 目录：\n/etc/php5/apache2/php.ini\n\nPHP扩展目录（日期可能不同）：\n/usr/lib/php5/20131226\n\nnginx.conf 配置文件：\n/etc/nginx/nginx.conf\n\nNginx 的 php.ini\n/etc/php5/fpm/php.ini\n\nApache2 配置文件：\n/etc/apache2/apache2.conf\n\nphpmyadmin 所在目录：\n/usr/share/phpmyadmin\n\nphpmyadmin 配置文件：\n/usr/share/phpmyadmin/libraries/config.default.php\n```\n\n小技巧\n```\n#安装完成可以通过命令查看执行文件位置，这样不用担心忘记\nwhich apache2\n/usr/sbin/apache2\n\nwhich php\n/usr/bin/php\n\nwhich mysql\n/usr/bin/mysql\n```\n\n重启部分：\n```\nservice php5-fpm restart\nservice nginx restart\n```","tags":["php"]},{"title":"[小程序] web-view","url":"/2019/05/05//articles/2019/05/04/1557015898000.html/","content":"<a href=\"https://www.jianshu.com/p/50657f9af5b4\" target=\"_blank\">微信小程序之内嵌网页(webview)</a>\n<a href=\"https://www.jianshu.com/p/292f73512948\" target=\"_blank\">内联h5页面 webview组件</a>\n\n","tags":["小程序"]},{"title":"[小程序] 定时器","url":"/2019/05/05//articles/2019/05/04/1557015897000.html/","content":"<a href=\"https://blog.csdn.net/yechaoa/article/details/81985664\" target=\"_blank\">定时器setInterval</a>\n```\n  onLoad: function() {\n  \tthis.startInterval(5,function(){\n    });\n  },\n\n  //开启定时器\n  startInterval: function(speed,callback) { \n    var that = this; \n    that.data.interval = setInterval(function() {\n      if (!that.data.seconds) {\n        that.setData({\n          seconds: 0\n        });\n      }\n      var seconds = that.data.seconds + speed;\n      that.setData({\n        seconds: seconds\n      });\n      console.log('seconds ' + that.data.seconds + \"s\");\n      typeof callback == 'function' && callback();\n    } , 1000 * speed);\n  },\n  //手动关闭\n  endInterval: function() { \n    var that = this; \n    clearInterval(that.data.interval)\n  },\n  onUnload: function() {\n    // 页面关闭\n    var that = this;\n    clearInterval(that.data.interval)\n  },\n\n```","tags":["小程序"]},{"title":"[springboot] 七牛云图片上传","url":"/2019/05/05//articles/2019/05/04/1557015896000.html/","content":"<a href=\"https://www.jianshu.com/p/f53ab800de36\" target=\"_blank\">七牛云图片上传</a>\n<a href=\"https://blog.csdn.net/niaoer2010/article/details/80183564\" target=\"_blank\">七牛云上传本地图片工具类</a>\n<a href=\"https://www.jianshu.com/p/3ef4796fc861\" target=\"_blank\">springboot七牛云java（服务端）通用工具类</a>\n<a href=\"https://github.com/jeesun/oauthserver\" target=\"_blank\">github|oauthserver</a>\n\n","tags":["springboot"]},{"title":"[centos] 安装GitLab并自定义域名访问GitLab管理页面","url":"/2019/05/05//articles/2019/05/04/1557015895000.html/","content":"<a href=\"https://blog.csdn.net/ouyang_peng/article/details/72903221\" target=\"_blank\">安装GitLab并自定义域名访问GitLab管理页面</a>","tags":["centos"]},{"title":"[cmd] cmd新建、删除文件和文件夹","url":"/2019/05/05//articles/2019/05/04/1557015894000.html/","content":"新建文件夹和文件\n```\ncd ..           返回上一级\nmd test         新建test文件夹\nmd d:\\test\\my   d盘下新建文件夹\ncd test         进入test文件夹\ncd .> cc.txt      新建cc.txt文件\ndir             列出文件夹下所有文件及文件夹\n```\n删除文件夹和文件\n```\ncd test         进入test文件夹\ndir             查看所有文件目录\ndel a.txt       删除a.txt的文件\ndel *.txt       删除所有后缀为.txt的文件\nrd test         删除名为test的空文件夹\nrd /s D:\\test   删除D盘里的test文件夹  会出现如下 test, 是否确认(Y/N)?  直接输入 Y 在回车\nrd test/s       删除此文件夹下的所有文件  test, 是否确认(Y/N)?  直接输入 Y 在回车\n```","tags":["cmd"]},{"title":"[ubuntu] 安装ifconfig","url":"/2019/05/05//articles/2019/05/04/1557015893000.html/","content":"```\napt-get update\napt install net-tools\napt install iputils-ping\n```","tags":["ubuntu"]},{"title":"[前端] Jquery实现鼠标移过小图显示大图","url":"/2019/05/05//articles/2019/05/04/1557015892000.html/","content":"<a href=\"https://blog.csdn.net/qq_36410795/article/details/72823525\" target=\"_blank\">Jquery实现鼠标移动/移过到商品小图片上时替换掉大图片上的图片</a>\n\n","tags":["前端"]},{"title":"[小程序] 加减号","url":"/2019/05/05//articles/2019/05/04/1557015891000.html/","content":"<a href=\"https://www.cnblogs.com/xiaobai-y/p/7234506.html\" target=\"_blank\">小程序购物车 数量加减功能</a>\n\nwxml：\n```\n<!-- 主容器 -->  \n<view class=\"stepper\">  \n    <!-- 减号 -->  \n    <text class=\"{{minusStatus}}\" bindtap=\"bindMinus\">-</text>  \n    <!-- 数值 -->  \n    <input type=\"number\" bindchange=\"bindManual\" value=\"{{num}}\" />  \n    <!-- 加号 -->  \n    <text class=\"normal\" bindtap=\"bindPlus\">+</text>  \n</view>  \n```\n\nwxss：\n```\n/*全局样式*/  \npage {  \n    padding: 20px 0;  \n}  \n  \n/*主容器*/  \n.stepper {  \n    width: 80px;  \n    height: 26px;  \n    /*给主容器设一个边框*/  \n    border: 1px solid #ccc;  \n    border-radius: 3px;  \n    margin:0 auto;  \n}  \n  \n/*加号和减号*/  \n.stepper text {  \n    width: 19px;  \n    line-height: 26px;  \n    text-align: center;  \n    float: left;  \n}  \n  \n/*数值*/  \n.stepper input {  \n    width: 40px;  \n    height: 26px;  \n    float: left;  \n    margin: 0 auto;  \n    text-align: center;  \n    font-size: 12px;  \n    /*给中间的input设置左右边框即可*/  \n    border-left: 1px solid #ccc;  \n    border-right: 1px solid #ccc;  \n}  \n  \n/*普通样式*/  \n.stepper .normal{  \n    color: black;  \n}  \n  \n/*禁用样式*/  \n.stepper .disabled{  \n    color: #ccc;  \n}\n```\n\njs：\n``` \nPage({  \n    data: {  \n        // input默认是1  \n        num: 1,  \n        // 使用data数据对象设置样式名  \n        minusStatus: 'disabled'  \n    },  \n    /* 点击减号 */  \n    bindMinus: function() {  \n        var num = this.data.num;  \n        // 如果大于1时，才可以减  \n        if (num > 1) {  \n            num --;  \n        }  \n        // 只有大于一件的时候，才能normal状态，否则disable状态  \n        var minusStatus = num <= 1 ? 'disabled' : 'normal';  \n        // 将数值与状态写回  \n        this.setData({  \n            num: num,  \n            minusStatus: minusStatus  \n        });  \n    },  \n    /* 点击加号 */  \n    bindPlus: function() {  \n        var num = this.data.num;  \n        // 不作过多考虑自增1  \n        num ++;  \n        // 只有大于一件的时候，才能normal状态，否则disable状态  \n        var minusStatus = num < 1 ? 'disabled' : 'normal';  \n        // 将数值与状态写回  \n        this.setData({  \n            num: num,  \n            minusStatus: minusStatus  \n        });  \n    },  \n    /* 输入框事件 */  \n    bindManual: function(e) {  \n        var num = e.detail.value;  \n        // 将数值与状态写回  \n        this.setData({  \n            num: num  \n        });  \n    }  \n});\n```","tags":["小程序"]},{"title":"[小程序] 评价星号","url":"/2019/05/05//articles/2019/05/04/1557015890000.html/","content":"<a href=\"https://www.jianshu.com/p/4d7359dfa040\" target=\"_blank\">微信小程序星星评价，拿去不谢！</a>\n\nwxml代码\n```\n<!--星星评价-->\n<view class=\"container\">\n  <view class=\"comment1-description\">\n    <view class=\"star-pos\" style=\"display:flex;flex-direction:row;\">\n      <view class=\"stars  {{flag>=1? 'on': ''}}\" bindtap=\"changeColor1\"></view>\n      <view class=\"stars  {{flag>=2? 'on': ''}}\" bindtap=\"changeColor2\"></view>\n      <view class=\"stars  {{flag>=3? 'on': ''}}\" bindtap=\"changeColor3\"></view>\n      <view class=\"stars  {{flag>=4? 'on': ''}}\" bindtap=\"changeColor4\"></view>\n      <view class=\"stars  {{flag>=5? 'on': ''}}\" bindtap=\"changeColor5\"></view>\n    </view>\n  </view>\n  <!--文本域  -->\n  <view class=\"weui-cells_after-title\">\n    <view class=\"weui-cell\">\n      <view class=\"weui-cell__bd\">\n        <textarea class=\"weui-textarea\" bindinput=\"bindTextAreaChange\" placeholder=\"我要提出建议...\" style=\"height: 8em\" value=\"{{info}}\" maxlength=\"{{noteMaxLen}}\" focus />\n        <view class=\"weui-textarea-counter\">{{noteNowLen}}/{{noteMaxLen}}</view>\n      </view>\n    </view>\n  </view>\n  <!--发布按钮  -->\n  <view class=\"btnSf\">\n    <button bindtap=\"bindSubmit\">发布</button>\n  </view>\n</view>\n```\n\nwxss代码\n```\n.comment1-description {\n  padding: 30rpx 0;\n  display: flex;\n  flex-direction: row;\n}\n\n.stars {\n  background: url(\"http://wximg.youtasc.com/star.png\");\n  width: 50rpx;\n  height: 50rpx;\n  background-size: 50rpx 50rpx;\n  margin-left: 30rpx;\n  transition: 600ms;\n}\n\n.on {\n  background: url(\"http://wximg.youtasc.com/f_star.png\");\n  width: 50rpx;\n  height: 50rpx;\n  background-size: 50rpx 50rpx;\n  transition: 1s;\n  transform: scale(1, 1);\n}\n\n.weui-cells_after-title {\n  width: 92%;\n  margin: 0 auto;\n  border: 1px solid #ddd;\n}\n\n.btnSf {\n  width: 92%;\n  margin: 30rpx auto;\n}\n\n.btnSf button {\n  background: #57b6ba;\n  color: #fff;\n}\n\n.btnSf button:active {\n  background: #5bc2c6;\n  color: #fff;\n}\n```\n\njs代码\n```\nPage({\n  data: {\n    flag: 0,\n    noteMaxLen: 300, // 最多放多少字\n    info: \"\",\n    noteNowLen: 0,//备注当前字数\n  },\n  // 监听字数\n  bindTextAreaChange: function (e) {\n    var that = this\n    var value = e.detail.value,\n      len = parseInt(value.length);\n    if (len > that.data.noteMaxLen)\n      return;\n    that.setData({ info: value, noteNowLen: len })\n\n  },\n  // 提交清空当前值\n  bindSubmit: function () {\n    var that = this;\n    wx.showToast({\n      title: '发布成功',\n      icon: 'success',\n      duration: 1500,\n      mask: false,\n      success: function () {\n        that.setData({ info: '', noteNowLen: 0, flag: 0 })\n      }\n    })\n\n  },\n  changeColor1: function () {\n    var that = this;\n    that.setData({\n      flag: 1\n    });\n  },\n  changeColor2: function () {\n    var that = this;\n    that.setData({\n      flag: 2\n    });\n  },\n  changeColor3: function () {\n    var that = this;\n    that.setData({\n      flag: 3\n    });\n  },\n  changeColor4: function () {\n    var that = this;\n    that.setData({\n      flag: 4\n    });\n  },\n  changeColor5: function () {\n    var that = this;\n    that.setData({\n      flag: 5\n    });\n  }\n})\n```\n\n<a href=\"https://blog.csdn.net/weixin_41257563/article/details/82756738\" target=\"_blank\">星星评分效果(单个评价)</a>\n<a href=\"https://www.jb51.net/article/150081.htm\" target=\"_blank\">星星评价效果(多个同时评价)</a>\n\n代码实现\n\nwxml文件\n```xml\n<!--pages/evaluatepage/evaluatepage.wxml-->\n<view class='container'>\n <view class='evaluate_contant'>\n <!--外层循环控制有几个评价条目 -->\n  <block wx:for='{{evaluate_contant}}' wx:key='' wx:for-index='idx'>\n  <view class='evaluate_item'>\n   <view class='evaluate_title'>{{item}}</view>\n\n   <!--星星评价 -->\n   <view class='evaluate_box'>\n   <!--内层循环展示每个评价条目的星星 -->\n   <block wx:for=\"{{stars}}\" wx:key=''>\n    <image class=\"star-image\" style=\"left: {{item*80}}rpx\" src=\"{{scores[idx] > item ?(scores[idx]-item == 0.5?halfSrc:selectedSrc) : normalSrc}}\">\n    <view class=\"item\" style=\"left:0rpx\" data-score=\"{{item + 0.5}}\" data-idx='{{idx}}' bindtap=\"selectLeft\"></view>\n    <view class=\"item\" style=\"left:20rpx\" data-score=\"{{item + 1}}\" data-idx='{{idx}}' bindtap=\"selectRight\"></view>\n    </image>\n   </block>\n   </view>\n\n  </view>\n  </block>\n  <button class='submit_button' bindtap='submit_evaluate' type='primary'>提交</button>\n </view>\n</view>\n```\njs文件\n```js\nPage({\n\n data: {\n evaluate_contant: ['评价条目一', '评价条目二', '评价条目三'],\n stars: [0, 1, 2, 3, 4],\n normalSrc: '../../images/no-star.png',\n selectedSrc: '../../images/full-star.png',\n halfSrc: '../../images/half-star.png',\n score: 0,\n scores: [0, 0, 0],\n },\n\n // 提交事件\n submit_evaluate: function () {\n console.log('评价得分' + this.data.scores)\n },\n\n //点击左边,半颗星\n selectLeft: function (e) {\n var score = e.currentTarget.dataset.score\n if (this.data.score == 0.5 && e.currentTarget.dataset.score == 0.5) {\n  score = 0;\n }\n\n this.data.scores[e.currentTarget.dataset.idx] = score,\n  this.setData({\n  scores: this.data.scores,\n  score: score\n  })\n\n },\n\n //点击右边,整颗星\n selectRight: function (e) {\n var score = e.currentTarget.dataset.score\n\n this.data.scores[e.currentTarget.dataset.idx] = score,\n  this.setData({\n  scores: this.data.scores,\n  score: score\n  })\n }\n})\n```\nwxss\n```css\n/*评价区域 */\n.container .evaluate_contant .evaluate_item {\n font-size: 30rpx;\n color: gray;\n margin-left: 20rpx;\n margin-top: 30rpx;\n}\n\n/*评价标题 */\n.container .evaluate_contant .evaluate_item .evaluate_title {\n display: inline-block;\n}\n\n/*评价盒子 */\n.container .evaluate_contant .evaluate_item .evaluate_box {\n position: absolute;\n left: 220rpx;\n width: 100%;\n display: inline-block;\n}\n\n/*星星评价的每个图片 */\n.container .evaluate_contant .evaluate_item .evaluate_box .star-image {\n position: absolute;\n width: 40rpx;\n height: 40rpx;\n src: \"../../images/no-star.png\";\n}\n\n/*星星的左边和右边区域<点击左边半个星星，点击右边整个星星> */\n.container .evaluate_contant .evaluate_item .evaluate_box .star-image .item {\n position: absolute;\n top: 0rpx;\n width: 20rpx;\n height: 40rpx;\n}\n\n/*按钮 */\n.container .evaluate_contant .submit_button {\n height: 60rpx;\n font-size: 30rpx;\n line-height: 60rpx;\n margin: 20rpx;\n}\n```","tags":["小程序"]},{"title":"[小程序] 获取日期并计算星期几","url":"/2019/05/05//articles/2019/05/04/1557015889000.html/","content":"<a href=\"http://www.pianshen.com/article/657765511/\" target=\"_blank\">获取日期并计算星期几</a>\n<a href=\"https://github.com/Rattenking/GetPeriod\" target=\"_blank\">github|获取日期并计算星期几</a>\n","tags":["小程序"]},{"title":"[小程序] template列表+数据+事件","url":"/2019/05/05//articles/2019/05/04/1557015888000.html/","content":"<a href=\"https://blog.csdn.net/yingtian648/article/details/79813564\" target=\"_blank\">使用模板(template)填充列表项、模板中添加列表项(item)点击事件</a>\n\n模板文件listItem.wmxl\n4个数据：id,path,title,content\n绑定点击事件:readDetail\n```\n<template name='list'>\n   <view style=\"display:flex;flex-direction:row;margin-top:5px;background-color:#e6e6e6\" \n      bindtap='readDetail' data-id='{{id}}'>\n      <image style=\"width:40%;height:80px;\" src='{{path}}' mode='widthFix'/>\n      <view style=\"display:flex;flex-direction:column;margin-left:10px\">\n         <text>{{title}}</text>\n         <text>{{content}}</text> \n      </view>\n   </view>\n</template>\n```\n\n引入\n```xml\n<import src='listItem.wxml'/><!--导入列表项模板-->\n<view>\n   <view wx:for=\"{{arrays}}\">\n      <template is=\"list\" data=\"{{id:index,path:item.path,title:item.title,content:item.content}}\"/>\n   </view>\n</view>\n```\n\njs\n```js\nPage({\n  \n  /**\n   * 页面的初始数据\n   */\n  data: {\n     arrays: [{\n        id:0,\n        path:'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522750024551&di=2a3059f66cada3c3fcf09ed6fbfa7ff0&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimgad%2Fpic%2Fitem%2Feaf81a4c510fd9f9a499b16e2f2dd42a2834a42f.jpg',\n      title:'大源中央公园',\n      content:'大源'},\n        {\n           id: 1,\n           path:'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749957085&di=f63a53aa11dc3d2c6ee656ecf26a734e&imgtype=0&src=http%3A%2F%2Fimg.pconline.com.cn%2Fimages%2Fupload%2Fupc%2Ftx%2Fphotoblog%2F1109%2F09%2Fc1%2F8912689_8912689_1315533674830.jpg',\n      title:'花园国际',\n      content:'花儿'},\n        {\n           id: 2,\n           path: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749957089&di=52d63a22521f4928cefc91097853bae4&imgtype=0&src=http%3A%2F%2Fscimg.jb51.net%2Fallimg%2F140812%2F11-140Q21045523K.jpg',\n           title: '大源中央公园',\n           content: '大源'\n        },\n        {\n           id: 3,\n           path: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749848712&di=c12381be5ff7dea1de88bbdf0128eb23&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimgad%2Fpic%2Fitem%2F1c950a7b02087bf407286efaf8d3572c10dfcfd8.jpg',\n           title: '大源中央公园',\n           content: '大源'\n        },\n        {\n           id: 4,\n           path: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749848714&di=5a60edbf62ceff57de82e46de6f28b35&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimgad%2Fpic%2Fitem%2Fb219ebc4b74543a9f58db25114178a82b801149c.jpg',\n           title: '大源中央公园',\n           content: '大源'\n        },\n        {\n           id: 5,\n           path: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749848720&di=96beca6c27cf406900332cdd7bda8515&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimage%2Fc0%253Dpixel_huitu%252C0%252C0%252C294%252C40%2Fsign%3Dc5f68d1bb81bb0519b29bb685f02bfd8%2F10dfa9ec8a1363270e51430a9a8fa0ec08fac74f.jpg',\n           title: '大源中央公园',\n           content: '大源'\n        },\n        {\n           id: 6,\n           path: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749957089&di=52d63a22521f4928cefc91097853bae4&imgtype=0&src=http%3A%2F%2Fscimg.jb51.net%2Fallimg%2F140812%2F11-140Q21045523K.jpg',\n           title: '大源中央公园',\n           content: '大源'\n        },\n        {\n           id: 7,\n           path: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749848712&di=c12381be5ff7dea1de88bbdf0128eb23&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimgad%2Fpic%2Fitem%2F1c950a7b02087bf407286efaf8d3572c10dfcfd8.jpg',\n           title: '大源中央公园',\n           content: '大源'\n        },\n        {  \n           id: 8,\n           path: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749848714&di=5a60edbf62ceff57de82e46de6f28b35&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimgad%2Fpic%2Fitem%2Fb219ebc4b74543a9f58db25114178a82b801149c.jpg',\n           title: '大源中央公园',\n           content: '大源'\n        },\n        {\n           id: 9,\n           path: 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1522749848720&di=96beca6c27cf406900332cdd7bda8515&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimage%2Fc0%253Dpixel_huitu%252C0%252C0%252C294%252C40%2Fsign%3Dc5f68d1bb81bb0519b29bb685f02bfd8%2F10dfa9ec8a1363270e51430a9a8fa0ec08fac74f.jpg',\n           title: '大源中央公园',\n           content: '大源'\n        },],\n  },\n  readDetail: function (e) {//点击列表项函数\n     var index = e.currentTarget.dataset.id; //打印可以看到，此处已获取到了对应的id\n     console.log('位置：'+index);\n  },\n});\n```","tags":["小程序"]},{"title":"[小程序] button去除边框","url":"/2019/05/05//articles/2019/05/04/1557015887000.html/","content":"```\nbutton::after {\n  border: none\n}\n```","tags":["小程序"]},{"title":"[小程序] 横向滚动","url":"/2019/05/05//articles/2019/05/04/1557015886000.html/","content":"<a href=\"https://www.cnblogs.com/miu-key/p/7606024.html\" target=\"_blank\">横向滚动</a>\n```\nscroll-view 中分别有上下竖向滑动和左右横向滑动\n\n1.scroll-view 中的需要滑动的元素不可以用 float 浮动；\n\n2.scroll-view 中的包裹需要滑动的元素的大盒子用 display:flex; 是没有作用的；\n\n3.scroll-view 中的需要滑动的元素要用 dislay:inline-block; 进行元素的横向编排；\n\n4.包裹 scroll-view 的大盒子有明确的宽和加上样式-->  overflow:hidden;white-space:nowrap;\n```\n\n.wxml\n```\n<view class=\"scroll_box\"> \n    <scroll-view class=\"scroll-view_x\" scroll-x style=\"width: auto;overflow:hidden;\">\n\n      <view class=\"item_list\" wx:for=\"{{list}}\">\n        <image src=\"../../images/head.jpg\" class=\"item_book_img\" mode=\"aspectFill\"></image>\n        <view class=\"item_book_text\">测试数据</view>\n      </view>\n     \n    </scroll-view>\n</view>\n```\n.wxss\n```\n.scroll_box{\n   width: 100%;\n   height: 307rpx;\n   overflow: hidden;\n   padding: 20rpx;\n   background: #fff;\n   white-space: nowrap;\n}\n.item_list{\n   width: 160rpx;\n   height: auto;\n   margin-right: 23rpx;\n   display: inline-block;\n}\n```","tags":["小程序"]},{"title":"[小程序] 技巧","url":"/2019/05/05//articles/2019/05/04/1557015885000.html/","content":"<a href=\"https://blog.csdn.net/u010651383/article/details/82810185\" target=\"_blank\">微信小程序-wxs实现时间格式化过滤器（正则）</a>\n","tags":["小程序"]},{"title":"[redis] windows+redis启动和关闭","url":"/2019/05/05//articles/2019/05/04/1557015884000.html/","content":"redis启动出错Creating Server TCP listening socket 127.0.0.1:6379: bind: No error\nwindows下安装Redis第一次启动报错：\n```\nredis-cli.exe\nshutdown\nexit\n```\n\n启动Redis\n```\nredis-server redis.windows.conf\n#redis-server redis.windows.conf --maxmemory 200m\n```\n\n部署Redis\n```\n#安装成windows服务的，开机自启动，命令如下：\nredis-server --service-install redis.windows.conf\nredis-server --service-start\n#redis-server --service-stop\n```","tags":["redis"]},{"title":"[小程序] 消息推送","url":"/2019/05/05//articles/2019/05/04/1557015883000.html/","content":"<a href=\"https://www.cnblogs.com/zhangjiabin/p/8037523.html\" target=\"_blank\">微信小程序简单的推送消息流程</a>\n\n","tags":["小程序"]},{"title":"[小程序] 官方scroll-view","url":"/2019/05/05//articles/2019/05/04/1557015882000.html/","content":"<a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html\" target=\"_blank\">官方scroll-view</a>\n```\n<view class=\"section\">\n  <view class=\"section__title\">vertical scroll</view>\n  <scroll-view\n    scroll-y\n    style=\"height: 200px;\"\n    bindscrolltoupper=\"upper\"\n    bindscrolltolower=\"lower\"\n    bindscroll=\"scroll\"\n    scroll-into-view=\"{{toView}}\"\n    scroll-top=\"{{scrollTop}}\"\n  >\n    <view id=\"green\" class=\"scroll-view-item bc_green\"></view>\n    <view id=\"red\" class=\"scroll-view-item bc_red\"></view>\n    <view id=\"yellow\" class=\"scroll-view-item bc_yellow\"></view>\n    <view id=\"blue\" class=\"scroll-view-item bc_blue\"></view>\n  </scroll-view>\n\n  <view class=\"btn-area\">\n    <button size=\"mini\" bindtap=\"tap\">click me to scroll into view</button>\n    <button size=\"mini\" bindtap=\"tapMove\">click me to scroll</button>\n  </view>\n</view>\n<view class=\"section section_gap\">\n  <view class=\"section__title\">horizontal scroll</view>\n  <scroll-view class=\"scroll-view_H\" scroll-x style=\"width: 100%\">\n    <view id=\"green\" class=\"scroll-view-item_H bc_green\"></view>\n    <view id=\"red\" class=\"scroll-view-item_H bc_red\"></view>\n    <view id=\"yellow\" class=\"scroll-view-item_H bc_yellow\"></view>\n    <view id=\"blue\" class=\"scroll-view-item_H bc_blue\"></view>\n  </scroll-view>\n</view>\n```\n\n```\nconst order = ['red', 'yellow', 'blue', 'green', 'red']\nPage({\n  data: {\n    toView: 'red',\n    scrollTop: 100\n  },\n  upper(e) {\n    console.log(e)\n  },\n  lower(e) {\n    console.log(e)\n  },\n  scroll(e) {\n    console.log(e)\n  },\n  tap(e) {\n    for (let i = 0; i < order.length; ++i) {\n      if (order[i] === this.data.toView) {\n        this.setData({\n          toView: order[i + 1]\n        })\n        break\n      }\n    }\n  },\n  tapMove(e) {\n    this.setData({\n      scrollTop: this.data.scrollTop + 10\n    })\n  }\n})\n```","tags":["小程序"]},{"title":"[小程序] 正则验证","url":"/2019/05/05//articles/2019/05/04/1557015881000.html/","content":"正则表达式(验证手机号-身份证-邮箱..)\n\n手机号验证:\n```\nfunction isPhone(phone){\n  if (!phone || !(/^1[34578]\\d{9}$/.test(phone))) {\n    return false;\n  }\n  return true;\n}\n```\n\n身份证\n```\nfunction isIdCard(code) {\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(code)) {\n    return false;\n  }\n  return true;\n}\n```\n\n邮箱验证:\n```\nif(!(/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/.test(that.data.Emlia))){\n  wx.showToast({\n    title: '邮箱输入有误',\n    duration: 2000,\n    icon: 'none'\n  });\n  return false;\n}\n```\n\n中英文姓名验证(没有长度限制)：\n```\nif (!(/^[\\u4E00-\\u9FA5A-Za-z]+$/.test(e.detail.value.name))) {\n   wx.showToast({\n     title: '姓名有误',\n     duration: 2000,\n     icon: true\n   });\n   return false;\n}\n```\n身份证验证\n```\nif (!(/(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(e.detail.value.sfz))) {\n    wx.showToast({\n      title: '身份证号码有误',\n      duration: 2000,\n      icon: 'none'\n    });\n    return false;\n}\n```\n\n验证数字的正则表达式集\n```\n验证数字：^[0-9]*$ \n验证n位的数字：^\\d{n}$ \n验证至少n位数字：^\\d{n,}$ \n验证m-n位的数字：^\\d{m,n}$ \n验证零和非零开头的数字：^(0|[1-9][0-9]*)$ \n验证有两位小数的正实数：^[0-9]+(.[0-9]{2})?$ \n验证有1-3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$ \n验证非零的正整数：^\\+?[1-9][0-9]*$ \n验证非零的负整数：^\\-[1-9][0-9]*$ \n验证非负整数（正整数 + 0） ^\\d+$ \n验证非正整数（负整数 + 0） ^((-\\d+)|(0+))$ \n验证长度为3的字符：^.{3}$ \n验证由26个英文字母组成的字符串：^[A-Za-z]+$ \n验证由26个大写英文字母组成的字符串：^[A-Z]+$ \n验证由26个小写英文字母组成的字符串：^[a-z]+$ \n验证由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$ \n验证由数字、26个英文字母或者下划线组成的字符串：^\\w+$ \n验证用户密码:^[a-zA-Z]\\w{5,17}$ 正确格式为：以字母开头，长度在6-18之间，只能包含字符、数字和下划线。 \n验证是否含有 ^%&',;=?$\\\" 等字符：[^%&',;=?$\\x22]+ \n验证汉字：^[\\u4e00-\\u9fa5],{0,}$ \n验证Email地址：/^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\n验证InternetURL：^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$ ；^[a-zA-z]+://(w+(-w+)*)(.(w+(-w+)*))*(?S*)?$ \n验证电话号码：^(\\d3,4\\d3,4\\d{3,4}|\\d{3,4}-)?\\d{7,8}$：--正确格式为：XXXX-XXXXXXX，XXXX-XXXXXXXX，XXX-XXXXXXX，XXX-XXXXXXXX，XXXXXXX，XXXXXXXX。 \n验证身份证号（15位或18位数字）：^\\d{15}|\\d{}18$ \n验证一年的12个月：^(0?[1-9]|1[0-2])$ 正确格式为：“01”-“09”和“1”“12” \n验证一个月的31天：^((0?[1-9])|((1|2)[0-9])|30|31)$ 正确格式为：01、09和1、31。 \n整数：^-?\\d+$ \n非负浮点数（正浮点数 + 0）：^\\d+(\\.\\d+)?$ \n正浮点数 ^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$ \n非正浮点数（负浮点数 + 0） ^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$ \n负浮点数 ^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$ \n浮点数 ^(-?\\d+)(\\.\\d+)?$\n```","tags":["小程序"]},{"title":"[js] 去除空格","url":"/2019/05/05//articles/2019/05/04/1557015880000.html/","content":"<a href=\"https://blog.csdn.net/qq_38819293/article/details/81610855\" target=\"_blank\">js去除空格12种方法</a>\n```\nString.prototype.trim = function() {\n  return this.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n```\n<a href=\"https://www.cnblogs.com/fanyf/p/3785387.html\" target=\"_blank\">JS去除字符串左右两端的空格</a>\n```\n<script language=\"javascript\">\n　　 String.prototype.trim=function(){\n　　    return this.replace(/(^\\s*)|(\\s*$)/g, \"\");\n　　 }\n　　 String.prototype.ltrim=function(){\n　　    return this.replace(/(^\\s*)/g,\"\");\n　　 }\n　　 String.prototype.rtrim=function(){\n　　    return this.replace(/(\\s*$)/g,\"\");\n　　 }\n</script>\n```\n写成函数可以这样：(trim(str))\n```\n<script type=\"text/javascript\">\n     //删除左右两端的空格\n　　 function trim(str){\n　　     return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n　　 }\n\t //删除左边的空格\n　　 function ltrim(str){\n　　     return str.replace(/(^\\s*)/g,\"\");\n　　 }\n     //删除右边的空格\n　　 function rtrim(str){\n　　     return str.replace(/(\\s*$)/g,\"\");\n　　 }\n</script>\n```","tags":["js"]},{"title":"[小程序] 提示框","url":"/2019/05/05//articles/2019/05/04/1557015879000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\n  wx.showModal({\n    title: '提示',\n    content: '上传失败',\n    showCancel: false\n  });\n```","tags":["小程序"]},{"title":"[小程序] 多文件上传","url":"/2019/05/05//articles/2019/05/04/1557015878000.html/","content":"<a href=\"https://www.jianshu.com/p/7e62b751d4f3\" target=\"_blank\">小程序之一次性上传多个本地相片</a>\n\n\n","tags":["小程序"]},{"title":"[centos] nginx的https配置","url":"/2019/05/05//articles/2019/05/04/1557015877000.html/","content":"<a href=\"https://www.centos.bz/2017/10/centos%E4%B8%8Bnginx%E7%9A%84https%E9%85%8D%E7%BD%AE/\" target=\"_blank\">CentOS下Nginx的HTTPS配置</a>\n","tags":["centos"]},{"title":"[springboot] 配置https","url":"/2019/05/05//articles/2019/05/04/1557015876000.html/","content":"<a href=\"https://blog.csdn.net/shouldnotappearcalm/article/details/78047047\" target=\"_blank\">csdn|\nSpringboot配置使用ssl，使用https</a>\n生成密钥证书\n```\nkeytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650\n```\n（1）关键字解释：\n```\nalias  密钥别名\nstoretype 指定密钥仓库类型\nkeyalg 生证书的算法名称，RSA是一种非对称加密算法\nkeysize 证书大小\nkeystore 生成的证书文件的存储路径\nvalidity 证书的有效期\n```\n\n（2）生成证书注意：\n```\n在输入证书生成命令之后，会提示输入：\n\n密钥库口令：证书密码，在后面的项目中配置证书时用到\n姓氏：一般没什么用，在浏览器中查看证书时会显示，用于正式场合的证书还是需要填写标准。\n组织单位：证书使用单位信息，一般没什么用，在浏览器中查看证书时会显示，用于正式场合的证书还是需要填写标准。\n组织单位名称：证书使用单位名称，一般没什么用，在浏览器中查看证书时会显示，用于正式场合的证书还是需要填写标准。\n所在的城市或区域名称:浏览器中查看证书信息时会显示。\n所在的省/市/自治区名称：浏览器中查看证书信息时会显示。\n单位的双字母国家/地区代码：国家或地区编码，浏览器中查看证书信息时会显示。\n```\n\n将生成的密钥证书拷贝到项目中的resource中\n\napplication.properties\n```\n#（密钥文件路径，也可以配置绝对路径）\nserver.ssl.key-store=classpath:keystore.p12\n#（密钥生成时输入的密钥库口令）\nserver.ssl.key-store-password=aqjcpt\n#（密钥类型，与密钥生成命令一致）\nserver.ssl.keyStoreType=PKCS12\n#（密钥别名，与密钥生成命令一致）\nserver.ssl.keyAlias=tomcat\n```\n<a href=\"https://www.jianshu.com/p/eb52e0f5ee85\" target=\"_blank\">简书|在Spring Boot中配置ssl证书实现https</a>","tags":["springboot"]},{"title":"[小程序] 禁止页面拉动","url":"/2019/05/05//articles/2019/05/04/1557015875000.html/","content":"<a href=\"https://blog.csdn.net/weixin_39872588/article/details/79580288\" target=\"_blank\">禁止页面拉动</a>\n```\n{\n\t\"enablePullDownRefresh\":false,\n    \"disableScroll\":true\n}\n```","tags":["小程序"]},{"title":"[地图] 点击地图查看经纬度","url":"/2019/05/05//articles/2019/05/04/1557015874000.html/","content":"<a href=\"http://www.gpsspg.com/maps.htm\" target=\"_blank\">点击地图查看经纬度</a>\n\n","tags":["地图"]},{"title":"[小程序] 导航功能","url":"/2019/05/05//articles/2019/05/04/1557015873000.html/","content":"<a href=\"https://www.jb51.net/article/142856.htm\" target=\"_blank\">微信小程序中进行地图导航功能的实现方法</a>\n```\nwx.getLocation({\n type: 'gcj02', //返回可以用于wx.openLocation的经纬度\n success: function(res) {\n  var latitude = res.latitude\n  var longitude = res.longitude\n  wx.openLocation({\n   latitude: latitude,\n   longitude: longitude,\n   name:\"花园桥肯德基\",\n   scale: 28\n  })\n }\n});\n```","tags":["小程序"]},{"title":"[blog] 百撕可乐","url":"/2019/05/05//articles/2019/05/04/1557015872000.html/","content":"<a href=\"https://www.cnblogs.com/web1/\" target=\"_blank\">百撕可乐</a>\n","tags":["blog"]},{"title":"[servlet] MultiPartEmail邮件发送","url":"/2019/05/05//articles/2019/05/04/1557015871000.html/","content":"<a href=\"https://blog.csdn.net/openblogs/article/details/22125429\" target=\"_blank\">Apache公司MultiPartEmail 邮件发送</a>\n```\npublic class SendServlet extends HttpServlet {\n\n    private Map<String,String> map = new LinkedHashMap<String,String>();\n    \n    public void doPost(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {\n        try {\n            //处理上传文件，保存到指定服务端目录下，并返回这个上传的文件\n            File file = doAttachment(request);\n            //创建一个复杂邮件，即文本+附件\n            MultiPartEmail multiPartEmail = new MultiPartEmail();\n            multiPartEmail.setHostName(\"smtp.163.com\");\n            multiPartEmail.setAuthentication(\"runsin0723\",get163password());\n            multiPartEmail.setCharset(\"UTF-8\");\n            multiPartEmail.setFrom(map.get(\"from\"));\n            multiPartEmail.addTo(map.get(\"to\"));\n            multiPartEmail.setSubject(map.get(\"subject\"));\n            multiPartEmail.setMsg(map.get(\"msg\"));\n            //如果有附件\n            if(file != null){\n                //创建附件\n                EmailAttachment emailAttachment = new EmailAttachment();\n                //封装附件的位置\n                emailAttachment.setPath(file.getPath());\n                //封装附件的标题\n                emailAttachment.setName(file.getName());\n                //将附件加入到上述的邮件中\n                multiPartEmail.attach(emailAttachment);\n            }\n            //发送邮件\n            multiPartEmail.send();\n            response.setContentType(\"text/html;charset=UTF-8\");\n            PrintWriter pw = response.getWriter();\n            pw.write(\"<script>\" + \"window.alert('发送成功');\" + \"window.location.href='\"+request.getContextPath()+\"/send.jsp'\" + \"</script>\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    private File doAttachment(HttpServletRequest request) throws Exception{\n        File file = null;\n        DiskFileItemFactory diskFileItemFactory = new DiskFileItemFactory();\n        ServletFileUpload servletFileUpload = new ServletFileUpload(diskFileItemFactory);\n        servletFileUpload.setHeaderEncoding(\"UTF-8\");\n        List<FileItem> fileItemList = servletFileUpload.parseRequest(request);\n        for(FileItem fileItem : fileItemList){\n            if(fileItem.isFormField()){\n                String fieldName = fileItem.getFieldName();\n                String fieldValue = fileItem.getString(\"UTF-8\");\n                //收集fieldName和fieldValue\n                map.put(fieldName,fieldValue);\n            }else{\n                String name = fileItem.getName();\n                File temp = new File(name);\n                String realFileName = temp.getName();\n                String uploadPath = this.getServletContext().getRealPath(\"/WEB-INF/upload\");\n                //封装上传文件保存的目录\n                file = new File(uploadPath + \"/\" + realFileName);\n                fileItem.write(file);\n                fileItem.delete();\n            }\n        }\n        return file;\n    }\n\n    private static void main(String[] args) throws Exception{\n        File file = new File(\"e:/163password.txt\");\n        FileReader fileReader = new FileReader(file);\n        BufferedReader bufferedReader = new BufferedReader(fileReader);\n        return bufferedReader.readLine();\n    }\n}\n```","tags":["servlet"]},{"title":"[centos] 搭建邮件服务器","url":"/2019/05/05//articles/2019/05/04/1557015870000.html/","content":"<a href=\"https://www.cnblogs.com/chris-cp/p/4843407.html\" target=\"_blank\">centos搭建邮件服务器</a>\n\n安装过程\n```\n1.安装Postfix\nyum -y install postfix\n安装完成还需要替换系统自带的sendmail：\n\nrpm -e sendmail\n#或\n#yum remove sendmail\n\n#修改MTA（默认邮件传输代理）\nalternatives --config mta\n\n#检查一下是不是已经设置成功了。\nalternatives --display mta\n#第一行可以看到mta的状态。 例如：mat - status is manual.\n\n2.安装Dovecot\nyum -y install dovecot\n3.配置Postfix\n编辑/etc/postfix/main.cf，可以下载下来修改，也可以使用vi进行编辑：\n\nvi /etc/postfix/main.cf\n修改如下：\n\n# 75行: 取消注释，设置hostname\nmyhostname = mail.lomu.me\n# 83行: 取消注释，设置域名\nmydomain = lomu.me\n# 99行: 取消注释\nmyorigin = $mydomain\n# 116行: 修改\ninet_interfaces = all\n# 119行: 推荐ipv4，如果支持ipv6，则可以为all\ninet_protocols = ipv4\n# 164行: 添加\nmydestination = $myhostname, localhost.$mydomain, localhost, $mydomain\n# 264行: 取消注释，指定内网和本地的IP地址范围\nmynetworks = 127.0.0.0/8, 10.0.0.0/24\n# 419行: 取消注释，邮件保存目录\nhome_mailbox = Maildir/\n# 571行: 添加\nsmtpd_banner = $myhostname ESMTP\n\n# 添加到最后\n# 规定邮件最大尺寸为10M\nmessage_size_limit = 10485760\n# 规定收件箱最大容量为1G\nmailbox_size_limit = 1073741824\n# SMTP认证\nsmtpd_sasl_type = dovecot\nsmtpd_sasl_path = private/auth\nsmtpd_sasl_auth_enable = yes\nsmtpd_sasl_security_options = noanonymous\nsmtpd_sasl_local_domain = $myhostname\nsmtpd_recipient_restrictions = permit_mynetworks,permit_auth_destination,permit_sasl_authenticated,reject\n修改好了之后使用/etc/rc.d/init.d/postfix start开启postfix，使用chkconfig postfix on将postfix开机启动。\n\n4.配置Dovecot\n修改如下：\n\nvi /etc/dovecot/dovecot.conf\n# 26行: 如果不使用IPv6，请修改为*\nlisten = *\n\nvi /etc/dovecot/conf.d/10-auth.conf\n# 9行: 取消注释并修改\ndisable_plaintext_auth = no\n# 97行: 添加\nauth_mechanisms = plain login\n\nvi /etc/dovecot/conf.d/10-mail.conf\n# 30行: 取消注释并添加\nmail_location = maildir:~/Maildir\n\nvi /etc/dovecot/conf.d/10-master.conf\n# 88-90行: 取消注释并添加\n# Postfix smtp验证\nunix_listener /var/spool/postfix/private/auth {\n    mode = 0666\n    user = postfix\n    group = postfix\n}\n\n/etc/rc.d/init.d/dovecot start\n\nchkconfig dovecot on\n\n\n5.域名解析\n最后别忘了还需要进行域名解析工作。\n\n添加一个子域名mail，A记录解析到服务器IP。\n\n再添加一个MX记录，主机记录为空，记录值为上面解析的二级域名mail.lomu.me，优先级10。\n\n注意：解析生效可能需要一段时间。\n\n6.邮箱使用\n一切都弄好以后，就可以使用Foxmail等第三方软件来收发邮件了。在这里需要说一下，系统用户就是邮件的用户，例如root，就是一个邮箱用户，邮箱是root@domain.com，密码就是root的密码，所以需要创建用户，只要使用useradd创建用户，再使用passwd设置密码。\n\n好了，假如我们创建一个admin的用户：\n\n# 创建用户\nuseradd admin\n#设置密码，会要求输入两次密码\npasswd admin\n```","tags":["centos"]},{"title":"[springboot] elasticsearch+quartz","url":"/2019/05/05//articles/2019/05/04/1557015869000.html/","content":"<a href=\"https://github.com/simonsfan/springboot-quartz-demo\" target=\"_blank\">springboot-quartz-demo</a>\n","tags":["springboot"]},{"title":"[git] git的使用","url":"/2019/05/05//articles/2019/05/04/1557015868000.html/","content":"<a href=\"https://blog.csdn.net/qq_36410795/article/details/87925528\" target=\"_blank\">Git 使用详解</a>\n\n","tags":["git"]},{"title":"[h5] 本地存储","url":"/2019/05/05//articles/2019/05/04/1557015867000.html/","content":"<a href=\"https://blog.csdn.net/qq_36410795/article/details/86684994\" target=\"_blank\">Html5 本地存储 local Storage 完整功能小案例demo</a>\n\n\n> 2. 涉及功能知识点\n\n```\n添加本地存储\n查询本地存储\n根据 index 删除本地存储\n清空本地存储\n模板引擎渲染\n```\n\n> 3.模板引擎渲染\n\n```\n<script id=\"localHistroy\" type=\"text/html\">\n    {{if list.length > 0}}\n        {{each list value index}}\n            <li class=\"mui-table-view-cell\">{{value.key}}\n                <span class=\"mui-badge mui-badge-primary btn-delete fa fa-close\" data-index=\"{{index}}\">\n                </span>\n            </li>\n        {{/each}}\n    {{else}}\n        <li class=\"mui-table-view-cell\">暂时没有历史记录</li>\n    {{/if}}\n</script>\n```\n\n> 4. 功能实现JS代码\n\n```\n$(function(){\n    // 1. 点击搜索触发点击tap事件\n    // 2. 获取文本框的内容\n    //  2.1 对文本框的值进去空格去除\n    // 3. 追加值到本地存储\n    //  3.1 判断值不能为空\n    //  3.2 查询下本地存储，判断输入的值是否存在，存在则删除原来的值，往数组的最前面插入新值\n    //  3.3 本地存储一般都是对象形式，所以最好以对象形式存储\n    // 4. 文本框内容清空\n\n    // 点击搜索按钮添加数据到localStorage里面\n    $('.btn-search').on('tap',function(){\n        // console.log()\n        // 获取文本框的值 去除两端空格，不会去除中间的空格\n        var inputValue = $('.input-search').val().trim();\n        // 如果内容为空提示\n        if(inputValue == ''){\n            mui.toast('内容不能为空',{ duration:'long', type:'div' })\n            return\n        }\n        // 判断内容是否存在，存在就删掉原来的，把新的加进去\n        var str = localStorage.getItem('localHistroy');\n        // 由于取出来也是一个字符串 （因为存进去是字符串 ） 取出来之后要转成真正的数组\n        var arr = JSON.parse(str) || []; // 把取出来的字符串srt 转成一个数组 如果转换失败 就使用空数组\n        for(var i=0;i<arr.length;i++){\n            if(arr[i].key == inputValue){\n                arr.splice(i,1)\n                i--\n            }\n        }\n        // 往数组前面插入\n        arr.unshift({\n            key: inputValue\n        });\n        localStorage.setItem('localHistroy',JSON.stringify(arr))\n        // 文本框内容清空\n        $('.input-search').val('')\n        queryHistroty()\n    })\n    queryHistroty();\n\n    // 1. 获取本地存储\n    // 2. 渲染到模板里面\n    // 3. 添加到页面\n    // 页面加载的时候遍历本地存储的值到页面\n    function queryHistroty(){\n        var str = localStorage.getItem('localHistroy')\n        var arr = JSON.parse(str) || []; // 把取出来的字符串srt 转成一个数组 如果转换失败 就使用空数组\n        var html = template('localHistroy',{list : arr})\n        $('.history-list').html(html);\n    }\n\n    // 1. 设置id值，并获取\n    // 2. 获取本地存储，根据 id 删除数组值\n    // 3. 重新存入本地存储\n    // 4. 刷新页面\n    // 删除指定的记录\n    $('.history-list').on('tap','.btn-delete',function(){\n        var index = $(this).data('index')\n        var str = localStorage.getItem('localHistroy')\n        // 由于取出来也是一个字符串 （因为存进去是字符串 ） 取出来之后要转成真正的数组\n        var arr = JSON.parse(str) || []; // 把取出来的字符串srt 转成一个数组 如果转换失败 就使用空数组\n        arr.splice(index,1)\n        localStorage.setItem('localHistroy',JSON.stringify(arr))\n        queryHistroty()\n    })\n\n    // 1. 根据本地存储名清除本地存储数据\n    // 2. 重新刷新页面\n    // 清空记录\n    $('.btn-clear').on('tap',function(){\n        localStorage.removeItem('localHistroy')\n        queryHistroty()\n    })\n})\n```\n","tags":["h5"]},{"title":"[hexo] 评论","url":"/2019/05/05//articles/2019/05/04/1557015866000.html/","content":"<a href=\"https://blog.csdn.net/yanzi1225627/article/details/77890414\" target=\"_blank\">hexo评论</a>\n\n","tags":["hexo"]},{"title":"[java] 条形码","url":"/2019/05/05//articles/2019/05/04/1557015865000.html/","content":"<a href=\"https://blog.csdn.net/qq_36410795/article/details/79052956\" target=\"_blank\">Java条形码生成技术-Barcode4j</a>\n","tags":["java"]},{"title":"[java] 使用POI对Excel进行读写操作","url":"/2019/05/05//articles/2019/05/04/1557015864000.html/","content":"<a href=\"https://blog.csdn.net/M_WBCG/article/details/75142807\" target=\"_blank\">java-使用POI对Excel进行读写操作</a>\npom.xml\n```\n<dependency>\n    <groupId>org.apache.poi</groupId>\n    <artifactId>poi</artifactId>\n    <version>3.9</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.poi</groupId>\n    <artifactId>poi-ooxml</artifactId>\n    <version>3.9</version>\n</dependency>\n```\n\ngithub\n```\nhttps://gitee.com/Crab2Died/Excel4J/blob/master/src/main/java/com/github/crab2died/ExcelUtils.java\nhttps://github.com/Crab2died/Excel4J/blob/master/src/main/java/com/github/crab2died/ExcelUtils.java\n```\n\n<a href=\"https://www.cnblogs.com/wishwzp/p/5494346.html\" target=\"_blank\">JAVA使用POI操作excel</a>\n```\n1.单元格对齐方式\n2.单元格边框处理\n3.单元格填充色和颜色操作\n4.单元格合并\n5.字体处理\n```\n","tags":["java"]},{"title":"[js] 在线库","url":"/2019/05/05//articles/2019/05/04/1557015863000.html/","content":"<a href=\"https://www.bootcdn.cn/clipboard.js/\" target=\"_blank\">js在线库</a>\n\n","tags":["js"]},{"title":"[linux] 常用软件","url":"/2019/05/05//articles/2019/05/04/1557015862000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.linuxprobe.com/nginx-9000-forward-80.html\" target=\"_blank\">如何用nginx在本地把9000端口转发到80端口上</a>\n<a href=\"https://www.linuxidc.com/\" target=\"_blank\">linux公社</a>\n\n<a href=\"https://www.lulinux.com/\" target=\"_blank\">小撸linux</a>\n<a href=\"https://www.lulinux.com/archives/5557\" target=\"_blank\">我的Linux桌面常用软件列表 (2019年春)</a>\n\n```\nTIM：开机必备聊天软件，deepinwine运行环境，稳定到爆，跟WINDOWS里的TIM没什么两样。\nXonotic：偶尔放松时玩的第一人称射击游戏。\n网页版网易云音乐：一条chrome命令实现的网页版独立应用，对我来说播放音乐不是特别重要的需求，有这个就够了。\nFirefox v58开发者版：这个v58版本的Firefox开发者版是我的默认浏览器，可以用到很多被官方强制清退的旧插件（如Scribefire、Hide Caption Titlebar Plus），非常适合我。\nRemmina：远程桌面控制软件，同时使用多台电脑的时候用到。\nPCManFM：小巧、强大、适用的文件管理器。\nxfce4-terminal：小巧适用的终端管理器。\nXTerm：终端管理器备胎，好好配置一下，还是美美哒。\nPhpStorm：无比强大的PHP开发IDE，无忧开发Wordpress网站。\nSublime Text 3：非常强大的前端开发工具，我主要用它来编辑CSS和js文件，其中的代码格式化美化插件用的好爽。\nmysql-workbench：非常强大的MySQL可视化管理器，navicat的替代品，运行速度比wine版navicat快很多。唯一的缺憾就是没有中文语言包。\nVirtualBox：运行一些Windows软件或测试观赏多个Linux发行版的时候会用到。\nTerminator：分屏终端管理器。\nFirefox：上面那个Firefox开发者版的备胎，很少用。主要用处就是“撑撑场面”。\nGoogle Chrome：浏览器备胎，因为Chrome及其衍生版市场份额很高，所以必须用它来测试前端代码兼容性。\nChromium：浏览器备胎。\nGeany：小巧而又强大的文本编辑器，一直用它来做笔记。我不用EverNote之类的软件做笔记，因为不方便在文件管理器里直接点击文本查看。\npamac-manager：Manjaro系统默认的软件管理器，默认可查AUR，非常好用。\ngVim：本人不太喜欢这种所谓“编辑器之神”，被某些人吹到天上去了，结果配置的过程中非常浪费时间，效果也就一般般。不过写shell脚本的时候一定会用它，Ctrl+G一键美化脚本。\nxfce4-taskmanager：用它来杀死卡顿的应用程序。它有一个特点，可以快速定位应用程序窗口。\nFileZilla：上传FTP文件，web开发者必备。\ngcolor2：简单适用的取色器。\nSpectacle：截图工具的备胎，定时矩形截图的时候就用它。\nSimpleScreenRecorder：小巧而又强大的录屏工具，录制的视频效果非常好。\nkruler：屏幕直尺，设计作图必备。\nlxappearance：用来调整LXDE桌面的观感。时不时换换字体和鼠标指针主题，是很快乐的一件事。\nFalkon：好用的浏览器备胎，轻量，火狐浏览器无法观看视频的时候会用到它。\ngucharmap：字符映射表，用它来选取特殊字符插入到文本代码中。\nLibreOffice Writer：这个不用我介绍。我不怎么用办公软件，我主要喜欢它的Linux桌面兼容性，字体渲染比wps好多了。\ndeepin计算器：最养眼的计算器。\nAudacious：听本地MOD音乐的时候会用到。MOD音乐格式很神奇，体积超小，播放时间却跟mp3一样长。\nxfce4-mime-settings：设置文件关联应用程序的图形化工具，Linux桌面找不到第2个这样的工具。\nEvolution：收发邮件的利器，各方面功能都比较完善，汉化也做得不错。\npavucontrol：音量控制器。录屏的时候要用它来调整音道以便录入系统本身正在播放的音乐。\n然后是图中没有显示图标的应用程序，主要是在文件管理器中跟具体的文件关联的常用程序：\n\nViewnior：小巧、强大、实用的图片查看器，可以查看图像的尺寸。我将其设置为跟所有图片关联。\nKolourPaint：小巧而又强大的图片注释编辑工具，裁剪、缩放、添加文字、添加圆圈、橡皮擦、喷雾罐……该有的功能都有。截图之后我就用它来添加注释。本文最上面那张图就是用KolourPaint加工编辑的，其中的曲线像思维导图一样可以随意变换弯曲度，很有用。另外，KolourPaint本身也可以截图。\nxed：轻巧的文本编辑器，与所有文本格式文件关联。\nSMPlayer：所有媒体格式通吃的媒体播放器，还最不消耗系统资源，比VLC、deepin-movie都轻量许多。\ndeepin-screenshot：深度公司出品的小巧而又强大的截图工具，配合快捷键用的很爽。\nFontForge：字体查看和编辑工具，Web开发调用图标字体的时候常常用它来查看字符编码。\nPhotoShop 7：Gimp太拙劣，Krita又太不稳定，所以做复杂图像，我只用17年前的ps7。它能用wine稳定运行，其强大的图层样式功能，甩Gimp好几条街。\ninkscape：矢量图形制作必备工具。\n最后还有截图中完全没有显示、在系统和桌面底层运行的关键应用程序，为我的桌面工作效率提供N臂之力：\n\nCompiz：超级窗口管理器，可以设置多个快捷键、热键，可以平铺4个窗口，可以设置窗口变换过程中的3d特效，使我的定制LXDE桌面有了现代化的观感。\nAWN：全称叫avant-window-navigator，一种可以使用多种applets的dock面板，配合gnomenu和dockbarx，可以实现跟Windows 10的效果，我在《撸linux“游戏”成果展示》博文里有过介绍。\ndockbarx：一种模仿Windows 7高效图标式任务栏的应用，兼容于AWN和xfce面板。\nEasyStroke：此应用将浏览器里的鼠标手势应用到了系统级别，以致使用文件管理器跟使用浏览器一样方便，我最常用的两个手势是关闭标签和新建标签。\ncron：不用cron的肯定不是Linux高级用户。\ndunst：可以使不同程序的通知播放不同提示声音的系统通知应用，兼容于所有桌面环境和纯窗口管理器环境。上手曲线陡直，最终用起来还是很爽。每逢国外邮件到达，dunst就会发出动听的警示音，间接地提高了我的赚钱效率。\nfcitx-sogoupinyin：Linux下最好用的中文拼音输入法。\nzsh：sh的增强版，有很多不错的功能，包括命令补全和自动纠正等。\n```\n<a href=\"https://www.cnblogs.com/BCOI/p/8596574.html\" target=\"_blank\">在Linux上安装QQ</a>\n<a href=\"https://github.com/askme765cs/Wine-QQ-TIM/releases\" target=\"_blank\">Linux/Ubuntu下使用TIM</a>\n<a href=\"https://www.jianshu.com/p/bd7d8648c650\" target=\"_blank\">移动开发数据平台</a>\n\n在Linux上安装微信\n方案一：从ubuntu的Snap中下载安装微信\n```\nsudo apt install snapd snapd-xdg-open\nsudo snap install electronic-chat\n#命令启动：\nelectronic-chat\n#移除微信客户端\nsudo snao remove electronic-wechat\n```\n\n方案二：利用GitHub在安装Linux微信客户端\n```\n#github\n#https://github.com/geeeeeeeeek/electronic-wechat/releases\nwget https://github.com/geeeeeeeeek/electronic-wechat/releases/download/V2.0/linux-x64.tar.gz\ntar xvf linux-x64.tar.gz\n./electronic-chat\n```\n\n<a href=\"https://www.jianshu.com/p/e7e85ab38105\" target=\"_blank\">electronic-wechat.desktop</a>\n```\n/usr/share/applications/electronic-wechat.desktop\n\n[Desktop Entry]\nName=Electronic Wechat\nName[zh_CN]=微信电脑版\nName[zh_TW]=微信电脑版\nExec=/opt/electronic-wechat/electronic-wechat\nIcon=/opt/electronic-wechat/resources/electronic-wechat.png\nTerminal=false\nX-MultipleArgs=false\nType=Application\nEncoding=UTF-8\nCategories=Application;Utility;Network;InstantMessaging;\nStartupNotify=false\n```\n\nlinux安装wps\n```\nhttps://blog.csdn.net/u013115811/article/details/79140408/\n```","tags":["linux"]},{"title":"[小程序] iphonex适配","url":"/2019/05/05//articles/2019/05/04/1557015861000.html/","content":"<a href=\"https://www.cnblogs.com/superlizhao/p/8329386.html\" target=\"_blank\">iPhoneX适配</a>\n\n<a href=\"https://www.2cto.com/kf/201808/770691.html\" target=\"_blank\">微信小程序适配之iPhone X</a>\napp.js\n```\nApp({\n  // 全局数据\n  globalData: { // 其他数据定义 ...\n    isIPhoneX: false, // 当前设备是否为 iPhone X\n  },\n  // 小程序启动入口\n  onLaunch: function(options) {　 // 其他启动代码...\n    // 判断设备是否为 iPhone X\n    this.checkIsIPhoneX()\n  },\n  checkIsIPhoneX: function() {\n    const self = this;\n    wx.getSystemInfo({\n      success: function(res) { // 根据 model 进行判断\n        if (res.model.search('iPhone X') != -1) {\n          self.globalData.isIPhoneX = true\n        }\n      }\n    })\n  },\n}\n```\n\n(1)在每个页面的.js中先读取app.js中的isIPhoneX值\n```\nconst app = getApp();\n\nPage({\n\tdata: {\n\t\tisIPhoneX: app.globalData.isIPhoneX\n\t},\n}\n```\n\n```\n<view wx:if=\"{{isIphoneX}}\" class=\"{{isIphoneX?'fix-iphonex-button':''}}\">\n  这是一个吸底按钮区域\n</view>\n```\n\n(2)然后在样式文件中对某一个视图View分别为普通屏幕和 iPhone X 屏幕写两种样式，如下：\napp.wxss\n```\n.fix-iphonex-button {\n bottom:68rpx!important;\n}\n.fix-iphonex-button::after {\n content: ' ';\n position: fixed;\n bottom: 0!important;\n height: 68rpx!important;\n width: 100%;\n background: #fff;\n}\n```\n\n顶部区别\n```\n.navi-bar-view {\n  height: 64px;\n}\n.navi-bar-view-IPX {\n  height: 88px;\n}\n```\n\n```\n.fix-iphonex-button {\n width: 100%;\n height: 48px; /* 吸底按钮的高度 */\n bottom: 0;\n opacity: 0.95;\n position: fixed;\n border-top-style: solid;\n border-top-width: 0.5px; /* 分割线的高度 */\n border-color: lightgrey;\n background-color: #F8F8F8;\n}\n.fix-iphonex-button {\n /* iPhone X 内容往上偏移 34px */\n padding-bottom: 34px;\n}\n```","tags":["小程序"]},{"title":"[github] testall持续更新中···","url":"/2019/05/05//articles/2019/05/04/1557015860000.html/","content":"<a href=\"https://github.com/x113773/testall/\" target=\"_blank\">testall持续更新中···</a>\n```\n自动化运维工具Ansible\nCORS 跨域资源共享\n开启https协议\nMyBatis\nSpring Boot Redis\nSnakeYAML\nSolr\nSpring Security\nRemember-Me\nSwagger\nZipEntry\n\n#运行\nsolr start\nredis-server.exe\n```","tags":["github"]},{"title":"[小程序] demos","url":"/2019/05/05//articles/2019/05/04/1557015859000.html/","content":"<a href=\"https://github.com/ljybill/miniprogram-utils/blob/master/custom-tabbar/README.md\" target=\"_blank\">github|自定义tabBar</a>\n<a href=\"https://github.com/awesome-tips/awesome-tips-wx-app\" target=\"_blank\">github|awesome-tips-wx-app</a>\n<a href=\"https://pan.baidu.com/s/1Qin5OFqf_aZ6mIKsaFtdow\" target=\"_blank\">knse</a>\n<a href=\"https://blog.csdn.net/small_lack/article/details/80959278\" target=\"_blank\">自定义tabbar</a>\n<a href=\"https://github.com/harveyqing/BearDiary\" target=\"_blank\">微信小程序之小熊の日记（#记录 #工具 #媒体）</a>\n<a href=\"https://github.com/wechat-miniprogram/miniprogram-demo\" target=\"_blank\">小程序官方demo|miniprogram-demo</a>\n<a href=\"http://www.cnblogs.com/gaogaoyanjiu/p/9537657.html\" target=\"_blank\">微信小程序开源Demo精选</a>\n\n<a href=\"https://www.jianshu.com/p/65bc62529639\" target=\"_blank\">微信小程序开发资源汇总</a>\n<a href=\"https://www.jianshu.com/c/23f278ae3d61\" target=\"_blank\">简书专栏 | 小程序</a>\n<a href=\"https://www.jianshu.com/p/4969b36b75e3\" target=\"_blank\">近期200+热门微信小程序demo源码下载汇总</a>\n<a href=\"https://github.com/SuperKieran/weapp-artand\" target=\"_blank\">weapp-artand | api.js</a>\n<a href=\"http://www.see-source.com/minapp.html\" target=\"_blank\">看源社区 | 小程序专栏</a>\n<a href=\"http://javascript.ctolib.com/categories/javascript-wechat-weapp.html\" target=\"_blank\">微信小程序项目汇总</a>\n\n<a href=\"http://www.xcxwo.com\" target=\"_blank\">小程序窝</a>\n<a href=\"http://www.xcxwo.com/cate/component/c6ff2ede04749f548db996b5c4b6bc23\" target=\"_blank\">小程序窝-发现小程序组件</a>\n\n\n<a href=\"http://zwd596257180.gitee.io/blog/\" target=\"_blank\">小东的gitee博客</a>\n<a href=\"https://blog.csdn.net/wyf2017/article/category/8096001\" target=\"_blank\">流年若逝 微信小程序文章</a>\n<a href=\"https://github.com/yyzheng1729/loginDemo\" target=\"_blank\">微信小程序之授权登录的实现</a>\n<a href=\"https://github.com/yyzheng1729/menudown\" target=\"_blank\">微信小程序之下拉列表实现</a>\n\n微信小程序之首页圆形导航条\n<a href=\"https://blog.csdn.net/weidong_y/article/details/80727284\" target=\"_blank\">博客</a>\n<a href=\"https://github.com/yyzheng1729/wx_navigation.git\" target=\"_blank\">github demo</a>\n\n微信小程序之侧边栏滑动实现\n<a href=\"https://blog.csdn.net/weidong_y/article/details/82289375\" target=\"_blank\">博客</a>\n<a href=\"https://github.com/yyzheng1729/slide\" target=\"_blank\">github demo</a>\n原理解析\n```\n1.先实现侧边栏的内容，让侧边栏的内容居左，然后将侧边栏的内容置于屏幕的最底部。\n2.接着实现主页的内容，并且让主页的内容默认是覆盖在侧边栏的内容上面。\n3.然后，实现手指滑动屏幕的时候，主页的内容，向左滑动一定的宽度，让侧边栏的内容显示出来，而滑动的效果是通过 css 的 transition 来实现的。\n```\n","tags":["小程序"]},{"title":"[springboot] 电商系统","url":"/2019/05/05//articles/2019/05/04/1557015858000.html/","content":"<a href=\"https://github.com/waitingfy/mall\" target=\"_blank\">github|电商系统</a>","tags":["springboot"]},{"title":"[serlvet] kaptcha验证码组件","url":"/2019/05/05//articles/2019/05/04/1557015857000.html/","content":"<a href=\"https://www.cnblogs.com/libra0920/p/6116800.html\" target=\"_blank\">如何使用kaptcha验证码组件</a>\n<a href=\"https://blog.csdn.net/gao36951/article/details/48261003\" target=\"_blank\">简单Maven的Web项目之验证码(Kaptcha篇)</a>","tags":["serlvet"]},{"title":"[springboot] 慕课网mybatis代码生成","url":"/2019/05/05//articles/2019/05/04/1557015856000.html/","content":"<a href=\"https://github.com/leechenxiang/imooc-springboot-starter\" target=\"_blank\">慕课网mybatis代码生成</a>\n\n","tags":["springboot"]},{"title":"[springboot] rabbitmq","url":"/2019/05/05//articles/2019/05/04/1557015855000.html/","content":"<a href=\"https://www.cnblogs.com/hlhdidi/p/6535677.html\" target=\"_blank\">springboot整合RabbitMQ</a>\n","tags":["springboot"]},{"title":"[springboot] 内嵌mongo","url":"/2019/05/05//articles/2019/05/04/1557015854000.html/","content":"<a href=\"https://www.cnblogs.com/littleatp/p/10462395.html\" target=\"_blank\">springboot内嵌mongo</a>\n\n","tags":["springboot"]},{"title":"[springboot] jwt网站鉴权","url":"/2019/05/05//articles/2019/05/04/1557015853000.html/","content":"<a href=\"https://github.com/murraco/spring-boot-jwt\" target=\"_blank\">github|spring-boot-jwt</a>\n","tags":["springboot"]},{"title":"[springboot] mybatis-generator插件+分页","url":"/2019/05/05//articles/2019/05/04/1557015852000.html/","content":"<a href=\"https://blog.csdn.net/zl18310999566/article/details/54097273\" target=\"_blank\">mybatis-generator插件</a>\n<a href=\"https://github.com/wyh-spring-ecosystem-student/spring-boot-student/tree/releases\" target=\"_blank\">spring-boot-student</a>\n```\nspring-boot-student-banner\n修改Spring Boot启动时的默认图案（Banner）\n基于Docker的部署\nSpring Boot核心-基本配置\nspring-boot-student-config\nSpring 安全配置@ConfigurationProperties的使用\n自定义properties并使用@PropertySource注解引入配置文件，使用@Value获取属性值\n通过@ImportResource注解引入XML配置\nSpring Boot 核心-外部配置\n\nspring-boot-student-log\nSpring Boot日志配置\nSpring Boot 使用XML配置日志\nSpring Boot 切换日志框架\nlogback配置异步日志\nLogback 快速定位用户在一次请求中的所有日志\nSpring Boot 日志配置\n\nLogback 快速定位用户在一次请求中的所有日志\n\nspring-boot-student-profile\nSpring Boot Profile配置\nSpring Boot Profile 配置\n\nspring-boot-student-data-jpa\nSpring boot 和Spring data jpa配置\nDBCP2连接池配置\nSpring Boot连接池分析\nSpring MVC Test(测试Controller)\nSpring Boot+Spring Data Jpa+DBCP2数据源\n\ndbcp2数据源配置详解\n\nSpring Boot中Datasource配置分析\n\nSpring MVC 测试\n\nspring-boot-student-mybatis\nSpring boot集成Mybatis和PageHPagehelper分页\nMybatis一级缓存分析\nMybatis二级缓存分析\nMybatis自带二级缓存的配置\nMysql查询的执行过程\nSpring Boot+Mybatis+Pagehelper分页\n\nMySQL查询的执行过程\n\n《深入理解mybatis原理》 Mybatis数据源与连接池\n\nMyBatis的一级缓存实现详解\n\nMyBatis的二级缓存实现详解\n\nMyBatis缓存机制的设计与实现\n\nspring-boot-student-mybatis-ehcache\nSpring Boot集成Mybatis\n使用ehcache作为Mybatis的二级缓存\nSpring Boot + Mybatis + Ehcache 二级缓存实例\n\nSpring Boot + Mybatis + 二级缓存实例（Ehcache，Redis）\n\nspring-boot-student-mybatis-redis\nSpring Boot集成Mybatis\n使用Redis作为Mybatis的二级缓存\n通过实现ApplicationContextAware接口获取Spring容器，并获取容器中的Bean\nSpring Boot + Mybatis + Redis二级缓存实例\n\nSpring Boot + Mybatis + 二级缓存实例（Ehcache，Redis）\n\nspring-boot-student-mybatis-druid 自己定制\nDruid简介\nDruid数据源配置\nDruid监控的配置\nSpring Boot与Druid集成\nDruid简介（Spring Boot + Mybatis + Druid数据源）\n\nmaven替换中央仓库- 阿里云\n\nspring-boot-student-mybatis-druid-2\nSpring Boot 使用druid连接池连接数据库（官方start）\nDruid简介（Spring Boot + Mybatis + Druid数据源【官方start】）\n\nspring-boot-student-encode\nAES，MD5，SHA1加密算法\n加密算法 AES MD5 SHA1\n\nspring-boot-student-data-jpa-transaction\n开启事务\nSpring 事务类型\nSpring 事务原理\nSpring 事务的实现方式\nSpring 事务的注意事项\nSpring Boot Spring事务管理\n\nSpring Boot AOP代理\n\nspring-boot-student-cache\n缓存的简介\nSpring对缓存支持\n开启声名式缓存支持\n声名式缓存注解\nSpring Boot的支持\nSpring Boot 数据缓存 Cache\n\nSpring Boot缓存实战 默认Cache（ConcurrentMapCacheManager）\n\nspring-boot-student-cache-ehcache\nSpring Boot 使用 ehcache作为 Spring 缓存\nSpring Boot缓存实战 EhCache\n\nspring-boot-student-cache-redis\nSpring Boot缓存实战 Redis\nSpring Boot 使用 redis作为 Spring 缓存（自动刷新缓存）\n自动刷新缓存\nredis key、value的序列化\njava反射\n线程池\nSpring Boot缓存实战 Redis\n\nSpring Boot Cache + redis 设置有效时间和自动刷新缓存，时间支持在配置文件中配置\n\nRedis 序列化方式StringRedisSerializer、FastJsonRedisSerializer\n\nSpring Redis Cache @Cacheable 大并发下返回null\n\nspring-boot-student-cache-caffeine\nSpring Boot 使用 caffeine作为 Spring 缓存\ncaffeine 简介\nCaffeine 缓存\n\nSpring Boot 与 Caffeine的集成\n\nspring-boot-student-cache-redis-caffeine\n基于redis + caffeine实现的多级缓存\nRedis 序列化方式StringRedisSerializer、FastJsonRedisSerializer和KryoRedisSerializer\n\nSpring Boot缓存实战 Redis + Caffeine 实现多级缓存\n\nspring-boot-student-data-mongo\nSpring Boot 使用Spring data mongo 操作mongodb数据库\nspring-boot-student-data-redis\nSpring Boot 使用Spring data redis 操作redis数据库\nspring-boot-student-data-redis-distributed-lock\n基于redis实现的分布式锁\n分布式锁的实现方案\n基于 redis 实现的分布式锁（一）\n\n\nspring-boot-student-drools\ndrools规则引擎入门\nspring-boot-student-stock-redis\n基于redis实现的扣减库存\nspring-boot-student-rabbitmq\nDocker 安装部署RabbitMQ\nRabbitMQ基础概念详细介绍\nRabbitMQ 快速入门\nSpring Boot RabbitMQ实践\nspring-boot-student-monitor\n使用Spring Boot Actuator监控应用\nspring-boot-student-validated\n使用Spring Boot 参数校验\nspring-boot-student-guava-retrying\nguava-retrying 重试机制\nspring-boot-student-spring-retry\nspring-retry 重试机制\n\nspring-boot-student-completable-future\n```\n<a href=\"https://blog.csdn.net/xiaolyuh123/article/details/73506189\" target=\"_blank\">Spring Boot+Mybatis+Pagehelper分页</a>\n\n\n\n\n","tags":["springboot"]},{"title":"[springcloud] jwt网站鉴权","url":"/2019/05/05//articles/2019/05/04/1557015851000.html/","content":"<a href=\"https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies\" target=\"_blank\">spring-cloud-dependencies各版本</a>\n```\nSpring Cloud\t Spring Boot\nFinchley         兼容Spring Boot 2.0.x，不兼容Spring Boot 1.5.x\nDalston和Edgware\t 兼容Spring Boot 1.5.x，不兼容Spring Boot 2.0.x\nCamden           兼容Spring Boot 1.4.x，也兼容Spring Boot 1.5.x\nBrixton          兼容Spring Boot 1.3.x，也兼容Spring Boot 1.4.x\nAngel            兼容Spring Boot 1.2.x\n```","tags":["springcloud"]},{"title":"[sublime] SublimeText3取消自动检查更新","url":"/2019/05/05//articles/2019/05/04/1557015850000.html/","content":"```\n{ \n \"color_scheme\": \"Packages/Color Scheme - Default/Monokai.tmTheme\", \n\t\"ignored_packages\":\n\t[\n\t\t\"Vintage\"\n\t],\n \"update_check\": false\n}\n```","tags":["sublime"]},{"title":"[webpack] webpack入门","url":"/2019/05/05//articles/2019/05/04/1557015849000.html/","content":"<a href=\"https://xiehao.xyz/2019/03/05/%E5%85%A5%E9%97%A8webpack,%E8%BF%99%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86/\" target=\"_blank\">入门webpack,这篇就够了</a>","tags":["webpack"]},{"title":"[小程序] java+小程序websocket","url":"/2019/05/05//articles/2019/05/04/1557015848000.html/","content":"<a href=\"https://blog.csdn.net/weixin_39592397/article/details/83414335\" target=\"_blank\">java SpringBoot+webSocket聊天小程序 （复制代码即可用）</a>\n<a href=\"https://blog.csdn.net/gxk1992/article/details/79115847\" target=\"_blank\">springboot+websocket+微信小程序</a>\n\n","tags":["小程序"]},{"title":"[rabbitmq] windows+rabbitmq","url":"/2019/05/05//articles/2019/05/04/1557015847000.html/","content":"<a href=\"https://blog.csdn.net/qq_35098526/article/details/80009424\" target=\"_blank\">windows+rabbitmq</a>\n<a href=\"https://www.cnblogs.com/ericli-ericli/p/5902270.html\" target=\"_blank\">windows下 安装 rabbitMQ 及操作常用命令</a>\n<a href=\"http://www.erlang.org/downloads\" target=\"_blank\">erlang</a>\n```\nERLANG_HOME\n```\n<a href=\"http://www.rabbitmq.com/download.html\" target=\"_blank\">rabbitmq</a>\n<a href=\"https://github.com/rabbitmq/rabbitmq-server/releases\" target=\"_blank\">github|rabbitmq-server</a>\n<a href=\"http://erlang.org/download/otp_win64_21.2.exe\" target=\"_blank\">otp_win64_21.2.exe</a>\n<a href=\"https://github-production-release-asset-2e65be.s3.amazonaws.com/924551/e0f58a80-412e-11e9-9f9e-8e5aa8d63b11?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20190312%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20190312T145452Z&X-Amz-Expires=300&X-Amz-Signature=f7f8204068c00e37ffd411bca8544221c4bfa25de7e196cbaee5f06d5522fbca&X-Amz-SignedHeaders=host&actor_id=18598025&response-content-disposition=attachment%3B%20filename%3Drabbitmq-server-3.7.13.exe&response-content-type=application%2Foctet-stream\" target=\"_blank\">rabbitmq-server-3.7.13.exe</a>\n```\nrabbitmq-plugins enablerabbitmq_management\n#默认账号/密码\nguest/guest\n```\n出现问题：\n网址http://localhost:15672访问不通\n```\n#解决方案：\nrabbitmq-service stop\nrabbitmq-service remove\nrabbitmq-service install\nrabbitmq-service start\nrabbitmq-plugins enable rabbitmq_management\n```\nrabbitMQ 常用命令\n```\n#启动监控管理器：\nrabbitmq-plugins enable rabbitmq_management\n#关闭监控管理器：\nrabbitmq-plugins disable rabbitmq_management\n#启动rabbitmq：\nrabbitmq-service start\n#关闭rabbitmq：\nrabbitmq-service stop\n#查看所有的队列：\nrabbitmqctl list_queues\n#清除所有的队列：\nrabbitmqctl reset\n#关闭应用：\nrabbitmqctl stop_app\n#启动应用：\nrabbitmqctl start_app\n\n#用户和权限设置（后面用处）\n#添加用户：\nrabbitmqctl add_user username password\n#分配角色：\nrabbitmqctl set_user_tags username administrator\n```","tags":["rabbitmq"]},{"title":"[PyQt5] PyQt5开发","url":"/2019/05/05//articles/2019/05/04/1557015846000.html/","content":"<a href=\"https://blog.csdn.net/yanzi1225627/column/info/16637\" target=\"_blank\">PyQt5开发</a>\n","tags":["PyQt5"]},{"title":"[springboot] springboot+oauth2授权服务","url":"/2019/05/05//articles/2019/05/04/1557015845000.html/","content":"<a href=\"https://github.com/jeesun/oauthserver\" target=\"_blank\">github|oauthserver</a>\n\n","tags":["springboot"]},{"title":"[前端] 复制插件","url":"/2019/05/05//articles/2019/05/04/1557015844000.html/","content":"<a href=\"https://blog.csdn.net/ansu2009/article/details/80418229\" target=\"_blank\">前端页面复制粘贴插件Clipboard的使用</a>\n\n<a href=\"https://blog.csdn.net/qq_16494241/article/details/87006815\" target=\"_blank\">复制插件（兼容移动端）</a>\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\n\t<meta name=\"viewport\" content=\"width=640, user-scalable=no\">\n\t<meta http-equiv=\"pragma\" content=\"no-cache\">\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\">\n\t<meta http-equiv=\"Expires\" content=\"0\">\n\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n\t<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n\t<meta name=\"format-detection\" content=\"telephone=no\">\n\t<meta name=\"apple-mobile-web-app-title\" content=\"\">\n\t<title>constructor-selector</title>\n\t<style>\n\t.copy_btn{\n\t\tdisplay:inline-block;\n\t\twidth:190px; height:90px;\n\t\tline-height:90px; margin:0 5px;\n\t\ttext-align:center;\n\t\tfont-size:30px;\n\t\twhite-space:nowrap;\n\t\tborder:#ddd solid 1px;\n\t\tbackground-color:#efefef;\n\t\tcursor:pointer;\n\t}\n\t</style>\n</head>\n<body>\n \n<div class=\"copy_btn\" data-clipboard-text=\"1\">Copy-val: 1</div>\n<div class=\"copy_btn\" data-clipboard-text=\"2\">Copy-val: 2</div>\n<div class=\"copy_btn\" data-clipboard-text=\"3\">Copy-val: 3</div>\n\n<script src=\"https://cdn.bootcss.com/clipboard.js/2.0.4/clipboard.min.js\"></script> \n<script>\n    var clipboard = new Clipboard('.copy_btn');\n \n    clipboard.on('success', function(e) {\n\t\talert('复制成功 : ' + e.text);\n        //console.log(e);\n    });\n \n    clipboard.on('error', function(e) {\n        //console.log(e);\n    });\n    </script>\n</body>\n</html>\n```","tags":["前端"]},{"title":"[树莓] 树莓github代码","url":"/2019/05/05//articles/2019/05/04/1557015843000.html/","content":"<a href=\"https://github.com/zhaohuiyuliang/RaspberryPiIntelligentVehicle\" target=\"_blank\">github|RaspberryPiIntelligentVehicle</a>\n\n","tags":["树莓"]},{"title":"[素材] png、jpg、gif、icon等格式素材","url":"/2019/05/05//articles/2019/05/04/1557015842000.html/","content":"<a href=\"https://blog.csdn.net/qq_36410795/article/details/74078504\" target=\"_blank\"> png、jpg、gif、icon等格式素材</a>\n```\nhttp://findicons.com/\nhttp://www.iconfinder.com/\nhttp://www.iconarchive.com/\nhttp://www.freeiconsweb.com/\nhttp://www.easyicon.net/\nhttp://www.easyicon.cn/iconsearch/map/\n```","tags":["素材"]},{"title":"[java] 通过SAXReader解析XML","url":"/2019/05/05//articles/2019/05/04/1557015841000.html/","content":"需要导入包：\ndom4j-1.6.1.jar\njaxen-1.2.0-atlassian-2.jar\n```\n<!-- https://mvnrepository.com/artifact/dom4j/dom4j -->\n<dependency>\n    <groupId>dom4j</groupId>\n    <artifactId>dom4j</artifactId>\n    <version>1.6.1</version>\n</dependency>\n<!-- https://mvnrepository.com/artifact/jaxen/jaxen -->\n<dependency>\n    <groupId>jaxen</groupId>\n    <artifactId>jaxen</artifactId>\n    <version>1.1.6</version>\n</dependency>\n```","tags":["java"]},{"title":"[java] 物流API","url":"/2019/05/05//articles/2019/05/04/1557015840000.html/","content":"<a href=\"https://blog.csdn.net/qq_36410795/article/details/72462143\" target=\"_blank\">物流API</a>","tags":["java"]},{"title":"[小程序] 二维码扫描","url":"/2019/05/05//articles/2019/05/04/1557015839000.html/","content":"<a href=\"https://www.jianshu.com/p/61217e42a143\" target=\"_blank\">二维码扫描</a>\n","tags":["小程序"]},{"title":"[cocos2d-x] github游戏源码","url":"/2019/05/05//articles/2019/05/04/1557015838000.html/","content":"<a href=\"https://github.com/waitingfy/FallMan\" target=\"_blank\">github| cocos2d-x | FallMan</a>\n<a href=\"https://blog.csdn.net/fox64194167/column/info/cocos2d-x-games\" target=\"_blank\">csdn|cocos2d-x-games</a>\n\n","tags":["cocos2d-x"]},{"title":"[小程序] 时间选择器","url":"/2019/05/05//articles/2019/05/04/1557015837000.html/","content":"<a href=\"https://www.jianshu.com/p/57034f3a753a\" target=\"_blank\">微信小程序日期+时间选择器</a>\n<a href=\"https://github.com/Haloing/WXProgram\" target=\"_blank\">github|WXProgram</a>\n\n<a href=\"https://github.com/fuxingkai/frankui-weapp\" target=\"_blank\">frankui-weapp</a>\n```\n微信小程序自定义某些常用组件：\n自定义日期选择控件\n\n自定义城市选择控件\n\n滑动悬浮tab\n\n横向滚动tab\n\n折线图\n\n柱状图\n\n双折线图\n\n柱状折线图\n\n双柱状图\n\n刻度盘\n\n日，周，月，季度，自定义选择器\n\nlist分页加载组件和音频api使用\n\n通用搜索\n\n搜索和历史搜索结合使用\n```","tags":["小程序"]},{"title":"[小程序] 导航","url":"/2019/05/05//articles/2019/05/04/1557015836000.html/","content":"微信小程序开发mapdemo，地图导航、marker标注\n<a href=\"https://github.com/giscafer/wechat-weapp-mapdemo\" target=\"_blank\">github|wechat-weapp-mapdemo</a>","tags":["小程序"]},{"title":"[wxs] 时间格式化","url":"/2019/04/24//articles/2019/04/24/1556103616000.html/","content":"<a href=\"https://www.jianshu.com/p/4379da8668fb\" target=\"_blank\">小程序wxs中的时间格式化以及格式化时间和date时间互转</a>\n```\nfunction parse(fmt) {\n  fmt1 = fmt.substring(0, 19);\n  var reg = getRegExp(\"-\", \"g\");\n  fmt2 = fmt1.replace(reg, '/');\n  var timestamp = getDate(fmt2).getTime();\n  return timestamp;\n}\n\nfunction getDateByDateTimeFmt(dateTimeFmt) {\n  return dateFormat(parse(dateTimeFmt), 'yyyy-MM-dd');\n}\nmodule.exports = {\n  getDateByDateTimeFmt: getDateByDateTimeFmt\n};\n```\n\n<a href=\"https://wanglinyong.github.io/wanglinyong.github.io/2018/05/11/微信小程序日期格式化/\" target=\"_blank\">微信小程序日期格式化</a>\n```\nconst formatTime = date => {\n  var date = new Date(date);  \n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const day = date.getDate()\n  const hour = date.getHours()\n  const minute = date.getMinutes()\n  const second = date.getSeconds()\n\n  return [year, month, day].map(formatNumber).join('-') + ' ' + [hour, minute, second].map(formatNumber).join(':')\n}\n\nmodule.exports = {\n  formatTime: formatTime\n}\n```","tags":["wxs"]},{"title":"[小程序] 自定义顶部导航栏","url":"/2019/04/24//articles/2019/04/24/1556103615000.html/","content":"<a href=\"https://www.jianshu.com/p/5877a3dc0b1e\" target=\"_blank\">微信小程序电商实战-自定义顶部导航栏</a>\n<a href=\"https://github.com/FaureWu/weapp-clover\" target=\"_blank\">github|weapp-clover</a>\n<a href=\"https://www.cnblogs.com/juewuzhe/p/9884124.html\" target=\"_blank\">微信小程序（18）-- 自定义头部导航栏</a>\n<a href=\"https://www.jianshu.com/p/5753a0e1754f\" target=\"_blank\">微信小程序：自定义导航栏</a>\n<a href=\"https://www.jianshu.com/p/a046388be889\" target=\"_blank\">小程序-导航栏</a>\n<a href=\"https://segmentfault.com/q/1010000016234677\" target=\"_blank\">小程序自定义顶部导航栏的样式问题::after</a>\n\n","tags":["小程序"]},{"title":"[小程序] 自定义底部tab","url":"/2019/04/24//articles/2019/04/24/1556103614000.html/","content":"<a href=\"https://www.jianshu.com/p/8f1894e82dc6\" target=\"_blank\">weui小程序自定义底部tab</a>\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/ability/custom-tabbar.html\" target=\"_blank\">自定义tabBar</a>\ntemplates/tabbar.wxml\n```\n<template name=\"tabBar\">\n\n  <view class=\"tab-bar\" style=\"color: {{tabBar.color}}; background: {{tarBar.backgroundColor}}; {{tabBar.position=='top'? 'top: 0' : 'bottom: 0'}}; {{tabBar.borderStyle? (tabBar.position=='top'? 'border-bottom: solid 1px '+tabBar.borderStyle + ';' : 'border-top: solid 1px '+tabBar.borderStyle + ';') : ''}}\">\n\n    <block wx:for=\"{{tabBar.list}}\" wx:key=\"pagePath\">\n\n      <navigator url=\"{{item.pagePath}}\" open-type=\"redirect\" class=\"{{item.styleClass}}\" style=\"{{item.active? 'color: '+(item.selectedColor? item.selectedColor : tabBar.selectedColor) : ''}}\">\n\n        <image src=\"{{item.selectedIconPath}}\" wx:if=\"{{item.active}}\" class=\"bottom-tabbar-icon\"></image>\n        <image src=\"{{item.iconPath}}\"  wx:if=\"{{!item.active}}\" class=\"bottom-tabbar-icon\"></image>\n        <text>{{item.text}}</text>\n\n      </navigator>\n\n    </block>\n\n    <view class=\"clear\"></view>\n\n  </view>\n</template>\n```\n\napp.wxss\n```\n.bottom-tabbar-icon {\n  width: 23px;\n  height: 23px;\n  display: block;\n  margin: auto;\n}\n\n.clear {\n  clear: both;\n}\n\n.tab-bar {\n  background-color:rgb(243, 243, 243);\n  opacity: .8;\n  position: fixed;\n  width: 100%;\n  /* padding: 0px 2%; */\n}\n```\n\n```\nApp({\n editTabBar: function () {\n    var _curPageArr = getCurrentPages();\n    var _curPage = _curPageArr[_curPageArr.length - 1];\n    var _pagePath = _curPage.__route__;\n    if (_pagePath.indexOf('/') != 0) {\n      _pagePath = '/' + _pagePath;\n    }\n    var tabBar = this.globalData.tabBar;\n    for (var i = 0; i < tabBar.list.length; i++) {\n      tabBar.list[i].active = false;\n      if (tabBar.list[i].pagePath == _pagePath) {\n        tabBar.list[i].active = true;//根据页面地址设置当前页面状态\n      }\n    }\n    _curPage.setData({\n      tabBar: tabBar\n    });\n  },\n \n  globalData: {\n\n    tabBar: {\n      color: \"#a9b7b7\",\n      selectedColor: \"#ff8124\",\n      borderStyle: \"white\",\n      list: [\n        {\n          selectedIconPath: \"/images/logo.png\",\n          iconPath: \"/images/logo.png\",\n          pagePath: \"/pages/index/index\",\n          text: \"首页\",\n          styleClass: \"menu-item\",\n          selected: false,\n        },\n        {\n          selectedIconPath: \"/images/logo.png\",\n          iconPath: \"/images/logo.png\",\n          pagePath: \"/pages/mine/index\",\n          text: \"我的\",\n          styleClass: \"menu-item\",\n          selected: false\n        }\n      ],\n      position: \"bottom\"\n    }\n  },\n\n});\n```\n\nindex.js\n```\nconst app = getApp()\n \nPage({\n  onLoad: function (options) {\n    app.editTabBar();\n  }\n})\n```\n\nindex.wxml\n```\n<import src=\"../../templates/tabbar.wxml\" />\n\n<view class=\"container\">\n  <template is=\"tabBar\" data=\"{{tabBar}}\" />\n</view>\n```\n","tags":["小程序"]},{"title":"[小程序] 图片打包优化","url":"/2019/04/24//articles/2019/04/24/1556103613000.html/","content":"<a href=\"https://www.cnblogs.com/web1/p/8926807.html\" target=\"_blank\">小程序打包代码包过大的解决方法</a>\n```\n解决方案就是优化图片了，优化的主要过程和目的是减小图片的大小。\n\n　　1、去掉小图标的切图图片，改用iconfont字体图标\n\n　　2、尽量避免使用png格式的图片，使用jpg格式\n\n　　3、设计稿上图片是x2倍大小，切图导出时使用正常大小，不要使用x2大小的图片\n\n　　4、视情况压缩图片质量，在导出选项内有\n\n　　如果不是自己切图的，可以提醒ui切图注意以上几点\n```","tags":["小程序"]},{"title":"[小程序] 实现navbar导航栏","url":"/2019/04/24//articles/2019/04/24/1556103612000.html/","content":"<a href=\"https://www.cnblogs.com/llcdxh/p/9390375.html\" target=\"_blank\">实现navbar导航栏</a>\n","tags":["小程序"]},{"title":"[小程序] 上传多张图片","url":"/2019/04/24//articles/2019/04/24/1556103611000.html/","content":"```\nhttps://github.com/LeoMelody/jianshu/blob/master/smallDemo/upload/UploadController.java\nhttps://github.com/LeoMelody/jianshu/blob/master/smallDemo/upload/upload.js\n```\n<a href=\"https://segmentfault.com/a/1190000017026145\" target=\"_blank\">多文件上传（递归）</a>\n\nUploadFilesUtil.js\n```\nexport function uploadFiles(url, filePathArr) {\n  return uploadFilesSync(url, filePathArr, 0, {\n    success: [],\n    fail: []\n  });\n}\n\nfunction uploadFilesSync(url, filePathArr, index, result) {\n  return upload(url, filePathArr[index++], {})\n    .then(res => {\n      result.success.push({\n        index: index,\n        res: res\n      });\n      if (index === filePathArr.length) {\n        return result;\n      } else {\n        return uploadFilesSync(url, filePathArr, index, result);\n      }\n    })\n    .catch(err => {\n      result.fail.push({\n        index: index,\n        res: err\n      });\n      if (index === filePathArr.length) {\n        return result;\n      } else {\n        return uploadFilesSync(url, filePathArr, index, result);\n      }\n    });\n}\n\nexport function upload(url, filePath, formData = {}) {\n  let header = {\n    \"Content-Type\": \"multipart/form-data\"\n  };\n  return new Promise((resolve, reject) => {\n    wx.uploadFile({\n      url: config.server + url,\n      header: header,\n      filePath: filePath,\n      name: \"file\",\n      formData: formData,\n      success(res) {\n        resolve(res.data);\n      },\n      fail: function(error) {\n        reject(error);\n      }\n    });\n  });\n}\n```\n\n<a href=\"https://www.jianshu.com/p/296680d6b173\" target=\"_blank\">上传多张图片</a>\n<a href=\"https://github.com/dt8888/moreImgaes\" target=\"_blank\">github|上传多张图片</a>\n","tags":["小程序"]},{"title":"[小程序] 日期、星期选择功能","url":"/2019/04/24//articles/2019/04/24/1556103610000.html/","content":"<a href=\"https://blog.csdn.net/m0_37852904/article/details/80701664\" target=\"_blank\">日期、星期选择功能</a>\n\njs内（如utils.js）\n```\n// 获取d当前时间多少天后的日期和对应星期\nfunction getDates(days) {\n  var todate = getCurrentMonthFirst()\n  var dateArry = [];\n  for (var i = 0; i < days; i++) {\n    var dateObj = dateLater(todate, i);\n    dateArry.push(dateObj)\n  }\n  return dateArry;\n}\n\n/**\n * 传入时间后几天\n  * param：传入时间：dates: \"2018-04-02\", later:往后多少天\n */\nfunction dateLater(dates, later) {\n  let dateObj = {};\n  let show_day = new Array('周日', '周一', '周二', '周三', '周四', '周五', '周六');\n  let date = new Date(dates);\n  date.setDate(date.getDate() + later);\n  let day = date.getDay();\n  dateObj.year = date.getFullYear();\n  dateObj.month = ((date.getMonth() + 1) < 10 ? (\"0\" + (date.getMonth() + 1)) : date.getMonth());\n  dateObj.day = (date.getDate() < 10 ? (\"0\" + date.getDate()) : date.getDate());\n  dateObj.week = show_day[day];\n  return dateObj;\n}\n\n// 获取当前时间\nfunction getCurrentMonthFirst() {\n  var date = new Date();\n  var todate = date.getFullYear() + \"-\" + ((date.getMonth() + 1) < 10 ? (\"0\" + (date.getMonth() + 1)) : date.getMonth()) + \"-\" + (date.getDate() < 10 ? (\"0\" + date.getDate()) : date.getDate());\n  return todate;\n}\n\n//获得某月的最后一天  \nfunction getLastDay(year, month) {\n  var new_year = year;    //取当前的年份          \n  var new_month = month++;//取下一个月的第一天，方便计算（最后一天不固定）          \n  if (month > 12) {\n    new_month -= 12;        //月份减          \n    new_year++;            //年份增          \n  }\n  var new_date = new Date(new_year, new_month, 1);                //取当年当月中的第一天          \n  return (new Date(new_date.getTime() - 1000 * 60 * 60 * 24)).getDate();//获取当月最后一天日期          \n} \n\nmodule.exports = {\n  getDates: getDates,\n  dateLater: dateLater,\n  getLastDay: getLastDay\n}\n```\n\n页面js中引入\n```\nvar week = require('../../utils/util.js');\n\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    date_: '',                      // 传给后台时间\n    date: ''                        // 时间\n  },\n\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function (options) {\n    this.setData({\n      date_: week.getDates(1)[0].year + '-' + week.getDates(1)[0].month + '-' + week.getDates(1)[0].day,\n      date: week.getDates(1)[0].year + '-' + week.getDates(1)[0].month + '-' + week.getDates(1)[0].day + ' (' + week.getDates(1)[0].week + ')'\n    })\n  },\n\n  /**\n   * 时间选择器\n   */\n  bindDateChange: function (e) {\n    var dateArry = [];\n    for (var i = 0; i < 1; i++) {\n      var dateObj = week.dateLater(e.detail.value, i);\n      dateArry.push(dateObj)\n    }\n    this.setData({\n      date_: e.detail.value,\n      date: dateArry[0].year + '-' + dateArry[0].month + '-' + dateArry[0].day + ' (' + dateArry[0].week + ')'\n    });\n    return dateArry;\n  },\n\n  /**\n   * 选择上一天\n   */\n  leftTime: function (e) {\n    var that = this;\n    var ldate = that.data.date_;\n    var arr = [];\n    arr.push(ldate.split(\"-\"));\n\n    var sec = parseInt(arr[0][2]) - 1;\n    var month = parseInt(arr[0][1]);\n    var year = parseInt(arr[0][0]);\n    if (sec < 10) {\n      if (sec == 0) {\n        month--;\n        sec = week.getLastDay(year, month);\n      } else {\n        sec = \"0\" + sec\n      }\n    }\n    if (month < 10) {\n      if (month == 0) {\n        year--;\n        month = 12;\n        sec = 31;\n      } else {\n        month = '0' + month;\n      }\n    }\n    var newTime = year + '-' + month + '-' + sec;\n\n    var dateArry = [];\n    for (var i = 0; i < 1; i++) {\n      var dateObj = week.dateLater(newTime, i);\n      dateArry.push(dateObj)\n    }\n\n    wx.request({\n      url: '',\n      data: {\n        userId: '',\n        date: dateArry[0].year + '-' + dateArry[0].month + '-' + sec\n      },\n      header: { 'content-type': 'application/x-www-form-urlencoded' },\n      method: 'POST',\n      dataType: 'json',\n      success: function (res) {\n        // 内容获取\n\n        that.setData({\n          date: dateArry[0].year + '-' + month + '-' + sec,\n          date: dateArry[0].year + '-' + month + '-' + sec + ' (' + dateArry[0].week + ')'\n        });\n      },\n      fail: function (res) { },\n      complete: function (res) { },\n    })\n\n  },\n\n  /**\n   * 选择下一天\n   */\n  rightTime: function (e) {\n    var that = this;\n    var ldate = that.data.date_;\n    var arr = [];\n    arr.push(ldate.split(\"-\"));\n\n    var sec = parseInt(arr[0][2]) + 1;\n    var month = parseInt(arr[0][1]);\n    var year = parseInt(arr[0][0]);\n    if (sec < 10) {\n      sec = \"0\" + sec\n    } else if (sec == parseInt(week.getLastDay(year, month)) + 1) {\n      month++;\n      sec = '01';\n    }\n    if (month < 10) {\n      month = '0' + month;\n    } else if (month == 12) {\n      year++;\n      month = '01';\n      sec = '01';\n    }\n\n    var newTime = year + '-' + month + '-' + sec;\n\n    var dateArry = [];\n    for (var i = 0; i < 1; i++) {\n      var dateObj = week.dateLater(newTime, i);\n      dateArry.push(dateObj)\n    }\n\n    wx.request({\n      url: '',\n      data: {\n        userId: '',\n        date: dateArry[0].year + '-' + dateArry[0].month + '-' + sec\n      },\n      header: { 'content-type': 'application/x-www-form-urlencoded' },\n      method: 'POST',\n      dataType: 'json',\n      success: function (res) {\n        // 内容获取\n\n        that.setData({\n          date_: dateArry[0].year + '-' + dateArry[0].month + '-' + sec,\n          date: dateArry[0].year + '-' + month + '-' + sec + ' (' + dateArry[0].week + ')'\n        });\n        wx.navigateBack({\n          delta: 1,\n        })\n      },\n      fail: function (res) { },\n      complete: function (res) { },\n    })\n  }\n```\n\n补充下wxml\n```\n<view class=\"section clearfix\">\n  <view  class='left fl' bindtap='leftTime'><image src='../../images/left.png'></image></view>\n  <picker mode=\"date\" value=\"{{date}}\" start=\"1790-01-01\" end=\"{{2022-01-01}}\" bindchange=\"bindDateChange\" class='fl'>\n    <view class=\"picker\">\n      {{date}}\n    </view>\n  </picker>\n  <view  class='right fr' bindtap='rightTime'><image src='../../images/right.png'></image></view>\n</view>\n```","tags":["小程序"]},{"title":"[小程序] 七牛云上传图片","url":"/2019/04/24//articles/2019/04/24/1556103609000.html/","content":"服务器端\nQiniuToken\n```\nimport com.qiniu.util.Auth;\n\n@Controller\n@RequestMapping(value = \"/qiniu\")\npublic class QiniuToken {\n\t// 获取token\n\t@RequestMapping(value = \"/getToken\")\n\tpublic @ResponseBody Map<String, String> getToken() throws IOException {\n\t\tString accessKey = \"xxx\";\n\t        String secretKey = \"xxx\";\n\t        String bucket = \"xxx\";\n\t\tAuth auth = Auth.create(accessKey, secretKey);\n\t\tString upToken = auth.uploadToken(bucket);\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"uptoken\", upToken);\n\t\treturn map;\n\t}\n}\n```\n\n<a href=\"https://github.com/gpake/qiniu-wxapp-sdk/blob/master/README.md?ref=developer.qiniu.com\" target=\"_blank\">github|七牛云小程序sdk</a>\n\n<a href=\"https://my.oschina.net/hp2017/blog/2245455\" target=\"_blank\">微信小程序 - 前台接入七牛云上传图片和视频</a>\n\n<a href=\"https://blog.csdn.net/qq_37905259/article/details/80559346\" target=\"_blank\">七牛云之微信小程序上传图片</a>\n<a href=\"https://www.jianshu.com/p/3a89d0935dae\" target=\"_blank\">上传图片到七牛云</a>\n小程序上传图片只有两个关键API：\n```\nwx.chooseImage\nwx.uploadFile\n```\n在wx.chooseImage调用成功时，可以获取到关于图片的文件信息，再上传七牛云\n```\n/**\n* 图片改变事件\n*/\nbindImgChange() {\n    wx.chooseImage({\n        count: 1, // 最多可以选择的图片张数\n            success: res => {\n                //上传七牛云\n                let tempFilePaths = res.tempFilePaths;\n                this.uploadQiniu(tempFilePaths);\n            }\n  });\n},\n```\n上传七牛云代码：\n```\n/**\n* 图片上传七牛云\n*/\nuploadQiniu(tempFilePaths) {\n    let token = this.data.token;\n    var that = this;\n    wx.uploadFile({\n      url: 'https://upload-z2.qiniup.com',\n      name: 'file',\n      filePath: tempFilePaths[0],\n      header: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n     formData: {\n       token: token,\n     },\n     success: function(res) {\n       let data = JSON.parse(res.data)\n\n       console.log('qiniu');\n       console.log(res);\n       // to do ...\n     },\n     fail: function(res) {\n       console.log(res)\n     }\n   });\n},\n```","tags":["小程序"]},{"title":"[小程序] 解决小程序iphoneX手机底部的兼容问题","url":"/2019/04/24//articles/2019/04/24/1556103608000.html/","content":"<a href=\"https://juejin.im/post/5a1d396551882546d71f157b\" target=\"_blank\">小程序中吸底按钮适配 iPhone X 方案</a>\n<a href=\"https://www.ifanr.com/minapp/958218\" target=\"_blank\">小程序中吸底按钮适配 iPhone X 方案</a>\n\napp.js\n```\nglobalData: {\n   isIphoneX: false,\n},\n```\n\nindex.js\n```\nPage({\n  data:{\n  \tisIphoneX:false\n  },\n  onShow: function() {\n    var that = this;\n    wx.getSystemInfo({\n      success: res => {\n        console.log('手机信息'+res.model)\n        let modelmes = res.model;\n        if (modelmes.search('iPhone X') != -1) {\n          app.globalData.isIphoneX = true;\n          that.setData({\n            isIphoneX: true\n          });\n        }else{\n          app.globalData.isIphoneX = false;\n          that.setData({\n            isIphoneX: false\n          });\n        }\n      }\n    });\n  },\n});\n```\n\nwxml：\n```\n<view wx:if=\"{{isIphoneX}}\" class=\"{{isIphoneX?'fix-iphonex-button':''}}\">\n  这是一个吸底按钮区域\n</view>\n```\n\napp.wxss\n```\n.fix-iphonex-button {\n  bottom:68rpx!important;\n}\n.fix-iphonex-button::after {\n  content: ' ';\n  position: fixed;\n  bottom: 0!important;\n  height: 68rpx!important;\n  width: 100%;\n  background: #fff;\n}\n```\n","tags":["小程序"]},{"title":"[小程序] 使用指定或当前经纬度打开地图","url":"/2019/04/24//articles/2019/04/24/1556103607000.html/","content":"<a href=\"https://www.cnblogs.com/dmcl/p/7700808.html\" target=\"_blank\">微信小程序城市定位(借助百度地图API判断城市)</a>\n\n\n根据指定经纬度打开地图位置\n```\n  bindLocation: function (e) {\n    wx.openLocation({\n      latitude: e.target.dataset.latitude,\n      longitude: e.target.dataset.longitude,\n      name: e.target.dataset.name,\n      address: e.target.dataset.address\n    })\n  },\n```\n\n根据当前经纬度打开位置、显示地址信息\n```\n  chooseBaiduLocation: function(e) {\n    var that = this;\n    wx.chooseLocation({\n      // ①.利用微信选择位置API，获得经纬度信息  \n      success: function(lb) {\n        console.log(\"地理位置\")\n        console.log(lb)\n        that.data.addressData = lb\n        wx.request({\n          // ②百度地图API，将微信获得的经纬度传给百度，获得城市等信息\n          url: 'https://api.map.baidu.com/geocoder/v2/?ak=GuMNe9FqXsvKoWY9VZaWNw9wlzUGjyTE&location=' + lb.latitude + ',' + lb.longitude + '&output=json&coordtype=wgs84ll',\n          data: {},\n          header: {\n            'Content-Type': 'application/json'\n          },\n          success: function(res) {\n            console.log(res.data.result);\n\n            var addressAll = res.data.result.addressComponent.city + res.data.result.addressComponent.district;\n            console.log(addressAll);\n            console.log(addressAll + \"·\" + lb.name);\n            that.setData({\n              addressAll: addressAll + \"·\" + lb.name //③.我们将微信得到的位置名称“故宫博物馆”与百度地图API得到的“北京市东城区”合并显示在页面上。\n            })\n          },\n          fail: function() {\n            // fail\n          },\n          complete: function() {\n            // complete\n          }\n        })\n      },\n      cancel: function(lb) {},\n      fail: function(lb) {\n        console.log(\"fail\")\n        console.log(lb)\n      }\n    });\n  },\n\n```\n\n<a href=\"https://www.jianshu.com/p/4f76fb5aa288\" target=\"_blank\">QQMapWX|输入地址自动获取经纬度</a>\n```\nwx.getLocation({\n  type: 'gcj02', //返回可以用于wx.openLocation的经纬度\n  success: function(res) {\n    var latitude = res.latitude\n    var longitude = res.longitude\n    wx.openLocation({\n      latitude: latitude,\n      longitude: longitude,\n      scale: 28\n    })\n  }\n});\n```\n<a href=\"https://blog.csdn.net/haibo0668/article/details/80693265\" target=\"_blank\">qqmap显示指定地址的地图</a>\n<a href=\"https://blog.csdn.net/weixin_43720095/article/details/84960891\" target=\"_blank\">获取某个位置经纬度以及地图显示</a>","tags":["小程序"]},{"title":"[小程序] string转number","url":"/2019/04/24//articles/2019/04/24/1556103606000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.huoyuandl.com/xiaochengxu/24098.html\" target=\"_blank\">string转number</a>\n```\nparseFloat(\"22.34.5\"); //returns 22.34\nNumber( \"5.5 \") 5.5\n```\n\n微信小程序字符串转换为数字方法主要有三种：\n```\n转换函数、强制类型转换、利用js变量弱类型转换。\n```\n\n方法一：转换函数\n```\njs提供了parseInt()和parseFloat()两个转换函数。前者把值转换成整数，后者把值转换成浮点数。只有对String类型调用这些方法，这两个函数才能正确运行;对其他类型返回的都是NaN(Nota Number)。\n```\n示例:\n```\nparseInt(\"1234blue\"); //returns 1234\nparseInt(\"0xA\"); //returns 10\nparseInt(\"22.5\"); //returns 22\nparseInt(\"blue\"); //returns NaN\n```\n\nparseInt()基模式\n```\n把二进制、八进制、十六进制或其他任何进制的字符串转换成整数。基是由parseInt()方法的第二个参数指定的，示例如下：\n```\n示例:\n```\nparseInt(\"AF\", 16); //returns 175\nparseInt(\"10\", 2); //returns 2\nparseInt(\"10\", 8); //returns 8\nparseInt(\"10\", 10); //returns 10\n```\n如果十进制数包含前导0，那么最好采用基数10，这样才不会意外地得到八进制的值。例如：\n```\nparseInt(\"010\"); //returns 8\nparseInt(\"010\", 8); //returns 8\nparseInt(\"010\", 10); //returns 10\n```\n\nparseFloat()方法与parseInt()方法的处理方式相似\n```\n使用parseFloat()方法的另一不同之处在于，字符串必须以十进制形式表示浮点数，parseFloat()没有基模式。\n```\n下面是使用parseFloat()方法的示例：\n```\nparseFloat(\"1234blue\"); //returns 1234.0\nparseFloat(\"0xA\"); //returns NaN\nparseFloat(\"22.5\"); //returns 22.5\nparseFloat(\"22.34.5\"); //returns 22.34\nparseFloat(\"0908\"); //returns 908\nparseFloat(\"blue\"); //returns NaN\n```\n\n方法二：强制类型转换\n```\n还可使用强制类型转换(type casting)处理转换值的类型。使用强制类型转换可以访问特定的值，即使它是另一种类型的。\n\nECMAScript中可用的3种强制类型转换如下：\n\nBoolean(value)——把给定的值转换成Boolean型;\n\nNumber(value)——把给定的值转换成数字(可以是整数或浮点数);\n\nString(value)——把给定的值转换成字符串。\n\n用这三个函数之一转换值，将创建一个新值，存放由原始值直接转换成的值。这会造成意想不到的后果。\n\n当要转换的值是至少有一个字符的字符串、非0数字或对象(下一节将讨论这一点)时，Boolean()函数将返回true。如果该值是空字符串、数字0、undefined或null，它将返回false。\n\n```\n可以用下面的小程序代码段测试Boolean型的强制类型转换\n```\nBoolean(\"\"); //false – empty string\nBoolean(\"hi\"); //true – non-empty string\nBoolean(100); //true – non-zero number\nBoolean(null); //false - null\nBoolean(0); //false - zero\nBoolean(new Object()); //true – object\n```\n\nNumber()的强制类型转换与parseInt()和parseFloat()方法的处理方式相似，只是它转换的是整个值，而不是部分值。\n示例如下：\n```\nNumber(false) 0\nNumber(true) 1\nNumber(undefined) NaN\nNumber(null) 0\nNumber(\"5.5 \") 5.5\nNumber(\"56 \") 56\nNumber(\"5.6.7 \") NaN\nNumber(new Object()) NaN\nNumber(100) 100\n```\n\n强制类型转换方法String()：\n```\nvar s1 = String(null); //\"null\"\nvar oNull = null;\nvar s2 = oNull.toString(); //won't work, causes an error\n```\n\n方法三：利用js变量弱类型转换\n```\n<script>\n\tvar str = '012.345';\n\tvar x = str - 0;\n\tx = x * 1;\n</script>\n```","tags":["小程序"]},{"title":"[百度地图] 根据城市获取经纬度api","url":"/2019/04/24//articles/2019/04/24/1556103605000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/u013791374/article/details/51441768\" target=\"_blank\">利用百度地图api通过城市地址等信息取经纬度</a>\n```\nhttp://api.map.baidu.com/geocoder?address=北京&output=json&key=826e806b86676d155282de3d37188137&city=北京\n\nhttps://api.map.baidu.com/geocoder/v2/?ak=826e806b86676d155282de3d37188137&output=json&coordtype=wgs84ll&address=%E5%8C%97%E4%BA%AC\n```","tags":["百度地图"]},{"title":"[springboot] 解决JS处理Long类型丢失精度","url":"/2019/04/24//articles/2019/04/24/1556103604000.html/","content":"<a href=\"https://blog.csdn.net/lyj2018gyq/article/details/83593066\" target=\"_blank\">解决JS处理Long类型丢失精度</a>\n```\nJackson、FastJson\n```\n\n二、后端解决\n2.1 Jackson\nSpring MVC中默认是使用了Jackson的。通过重写转换器解决。\n\n注意添加两个注解。\n```\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.module.SimpleModule;\nimport com.fasterxml.jackson.databind.ser.std.ToStringSerializer;\nimport com.leyou.order.interceptor.LoginInterceptor;\nimport com.leyou.order.properties.JwtProperties;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.http.converter.HttpMessageConverter;\nimport org.springframework.http.converter.StringHttpMessageConverter;\nimport org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n \nimport java.math.BigInteger;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.List;\n \n\n@Configuration\n@EnableWebMvc\npublic class MvcConfig implements WebMvcConfigurer {\n \n \n    @Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n \n        MappingJackson2HttpMessageConverter jackson2HttpMessageConverter =\n                new MappingJackson2HttpMessageConverter();\n \n        ObjectMapper objectMapper = new ObjectMapper();\n        SimpleModule simpleModule = new SimpleModule();\n        simpleModule.addSerializer(BigInteger.class, ToStringSerializer.instance);\n        simpleModule.addSerializer(Long.class, ToStringSerializer.instance);\n        simpleModule.addSerializer(Long.TYPE, ToStringSerializer.instance);\n        objectMapper.registerModule(simpleModule);\n        jackson2HttpMessageConverter.setObjectMapper(objectMapper);\n        converters.add(jackson2HttpMessageConverter);\n        converters.add(new StringHttpMessageConverter(Charset.forName(\"UTF-8\")));\n    }\n \n}\n```\n\n2.2 Fastjson\n在Spring Boot中将Jackson替换为fastjson一般会有两种方式：\n第一种：\n```\n@Configuration\npublic class WebConfig extends WebMvcConfigurerAdapter {\n \n    @Bean\n    public HttpMessageConverters fastJsonHttpMessageConverter() {\n        return new HttpMessageConverters(new FastJsonHttpMessageConverter());\n    }\n}\n```\n第二种：\n```\n@Configuration\npublic class WebConfig extends WebMvcConfigurerAdapter {\n \n    @Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n        FastJsonHttpMessageConverter fastConverter = \n        new FastJsonHttpMessageConverter();\n \n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n        fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat);\n        fastConverter.setFastJsonConfig(fastJsonConfig);\n        converters.add(fastConverter);\n    }\n}\n```\n替换成fastjson之后，对于精度丢失问题，解决方法如下：\n```\n@EnableWebMvc\n@Configuration\npublic class WebConfig extends WebMvcConfigurerAdapter {\n \n    @Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n        FastJsonHttpMessageConverter fastConverter = \n        new FastJsonHttpMessageConverter();\n \n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n        SerializeConfig serializeConfig = SerializeConfig.globalInstance;\n        serializeConfig.put(BigInteger.class, ToStringSerializer.instance);\n        serializeConfig.put(Long.class, ToStringSerializer.instance);\n        serializeConfig.put(Long.TYPE, ToStringSerializer.instance);\n        fastJsonConfig.setSerializeConfig(serializeConfig);\n        fastConverter.setFastJsonConfig(fastJsonConfig);\n        converters.add(fastConverter);\n    }\n}\n```","tags":["springboot"]},{"title":"[mysql] 带经纬度全国省市区县表","url":"/2019/04/24//articles/2019/04/24/1556103603000.html/","content":"<a href=\"https://blog.csdn.net/chengmeng_123/article/details/74984116\" target=\"_blank\">带经纬度全国省市区县表</a>\n","tags":["mysql"]},{"title":"[js] 计算两个经纬度之间的距离","url":"/2019/04/24//articles/2019/04/24/1556103602000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://segmentfault.com/a/1190000010371592\" target=\"_blank\">计算两个经纬度之间的距离</a>\n```\n// 方法定义 lat,lng \nfunction GetDistance( lat1,  lng1,  lat2,  lng2){\n    var radLat1 = lat1*Math.PI / 180.0;\n    var radLat2 = lat2*Math.PI / 180.0;\n    var a = radLat1 - radLat2;\n    var  b = lng1*Math.PI / 180.0 - lng2*Math.PI / 180.0;\n    var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) +\n    Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));\n    s = s *6378.137 ;// EARTH_RADIUS;\n    s = Math.round(s * 10000) / 10000;\n    return s;\n}\n// 调用 return的距离单位为km\nGetDistance(116.29812,39.95931,116.41,39.91)\n```","tags":["js"]},{"title":"[css] 使用::before和::after伪元素在网站中添加图标","url":"/2019/04/24//articles/2019/04/24/1556103601000.html/","content":"<a href=\"https://www.cnblogs.com/yaotome/p/9322814.html\" target=\"_blank\">使用::before和::after伪元素在网站中添加图标</a>\n\ncss after 插入图片，怎么设置内容高度\n```\n.nav ul li:after{\n    content:'';\n    background:url(../img/nav_fg.png) no-repeat;\n    background-size:40px;\n    width:40px;\n    height:40px;\n}\n```\n\n```\n.nav ul li:after{\n    content:'\\20';\n    background:url(../img/nav_fg.png) no-repeat;\n    background-size:40px;\n    width:40px;\n    height:40px;\n}\n```","tags":["css"]},{"title":"[css] 文本溢出处理","url":"/2019/04/24//articles/2019/04/24/1556103600000.html/","content":"<a href=\"https://www.cnblogs.com/qingcaixiaoge/p/5549158.html\" target=\"_blank\">html文字溢出以省略号(...)替代</a>\n\n一、单行文本溢出以省略号(...)替代\n```\n<style>\n    div{\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap; //强制不换行\n    }\n</style>\n```\n宽度超出200px;换行\n```\n<style>\n    div{\n    \twidth: 200px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap; //强制不换行\n    }\n</style>\n```\n\n二、多行文本溢出\n伪元素(::after)实现方法\n```\n<style>\n    div{\n        position: relative;\n        overflow: hidden;\n        width: 200px;\n        height: 55px;\n        line-height: 30px;\n        font-size: 20px;               \n    }\n    div::after{\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        padding:0 5px 1px 45px;\n        content: '...';            \n        background:url(ellipsis_bg.png) repeat-y;\n    }\n</style>\n```","tags":["css"]},{"title":"[服务器] 邮件服务器james","url":"/2019/04/21//articles/2019/04/21/1555845075000.html/","content":"<a href=\"https://james.apache.org/download.cgi#Apache_James_Server\" target=\"_blank\">james</a>\n<a href=\"https://www.apache.org/dyn/closer.lua/james/server/james-server-app-3.2.0-app.zip\" target=\"_blank\">james-server-app-3.2.0-app.zip</a>\n<a href=\"https://www.apache.org/dyn/closer.lua/james/server/3.2.0/james-server-sources-3.2.0.zip\" target=\"_blank\">james-server-sources-3.2.0.zip</a>\n\n<a href=\"https://www.cnblogs.com/xk920/p/9842666.html\" target=\"_blank\">James 3.1服务器的安装与搭建</a>\n<a href=\"https://blog.csdn.net/Fanpei_moukoy/article/details/80025318\" target=\"_blank\">james使用（一）：windows环境下james3.0.1版本邮件服务器搭建及配置</a>\n\n<a href=\"https://www.cnblogs.com/s1294/p/6030759.html\" target=\"_blank\">搭建james邮件服务器</a>\n\n工具准备\n<a href=\"https://pan.baidu.com/s/1_T3BxgKyRoXZJodY2vBbDA\" target=\"_blank\">James 3.1服务器的安装与搭建</a>\n(1)<a href=\"https://pan.baidu.com/s/1_T3BxgKyRoXZJodY2vBbDA\" target=\"_blank\">james安装包</a>密码：hntp\n(2)<a href=\"https://pan.baidu.com/s/1LrGQCxHWO8TND7DMwM_CiQ\" target=\"_blank\">jdk1.8</a>密码：yfv4\n(3)<a href=\"https://pan.baidu.com/s/1QZFo46zJrtNDvJtsRuQN2Q\" target=\"_blank\">foxmail客户端</a>密码：bl1g\n\n```\n3.1 hosts配置本地域名\nipconfig\nC:\\Windows\\System32\\drivers\\etc\\hosts\n192.168.10.130 jameserver.com\n\n\n3.2 解压\n解压安装包到 C:\\Program Files\\james\\james-server-app-3.0.1目录下\n\njames-server-app-3.0.1\n    ---bin:程序各种工具和运行程序目录\n    ---lib:依赖包\n    ---conf:在该目录下修改配置文件\n    ---var:jamse server存储数据目录\n\n3.3 修改配置文件\n将所有文件的后缀名.template去掉，然后复制到conf目录下\n```\n\n修改配置文件\n\n 配置文件名称  | 原内容  | 修改后内容\n  ------------- | ------------- | ------------- \ndomainlist  | <defaultDomain>localhost</defaultDomain> | <defaultDomain>jameserver.com</defaultDomain> \nimapserver\t| <bind>0.0.0.0:143</bind> | <bind>jameserver.com:143</bind> \nsmtpserver\t| <bind>0.0.0.0:25</bind> | <bind>jameserver.com:25</bind> \npop3server\t| <bind>0.0.0.0:110</bind> | <bind>jameserver.com:110</bind> \njmx | jmx.address=127.0.0.1\t| jmx.address=jameserver.com \nmailetcontainer\t| <postmaster>postmaster@localhost</postmaster>\t| <postmaster>postmaster@jameserver.com</postmaster> \nmanagesieveserver | <bind>0.0.0.0:4190</bind> | <bind>jameserver.com:4190</bind> \n\n修改\n```\nbin\\wrapper.conf\n```\n\n执行\n```\nbin\\run.bat\n```\n\njames各种命令：\n```\n#以console模式启动james并将日志输出到console窗口上（作用类似于上文中的run,bat）\nconsole\n#启动\nstart\n#暂停\npause\n#重置\nresume\n#停止\nstop\n#重启\nrestart\n#安装\ninstall\n#卸载\nremove\n#启动状态\nstatus\n```\n\njames-cli\n```\n#添加用户 格式为 adduser <name> <passwd>\nadduser\n\n#移除用户 格式为 removeuser xxx1@xxx2 [移除时必须跟上全称即必须@加域名]\nremoveuser\n\n#列出所有用户\nlistusers\n\n#添加域名 域名为@后的那部分，表示隶属于哪个公司，例如网上有163.com qq.com等，此处可自定义\nadddomain\n\n#移除域名\nremvedomain\n\n#列出所有域名\nlistdomains\n\n#单独设置某用户的密码 格式为setpassword <username> <passwd> 其中username 为全称，例如xxx1@xxx2\nsetpassword\n\n#检测是否包含某域名\ncontainsdomain\n```\n\n使用james命令进行安装\n```\nbin\\james\n```\n\n启动james\n```\n#安装服务到系统：\njames install\n#启动服务:\njames start\n#查看服务状态\njames status\n```\n\n使用james-cli命令配置邮件后缀域名和用户\n```\nbin\\james-cli\n```\n\n```\njames start\n#添加域名 jameserver.com\njames-cli -h 192.168.10.130 adddomain jameserver.com\n#添加用户 test1@jameserver.com 并设置密码为 test\njames-cli -h 192.168.10.130 adduser test1@jameserver.com test\n#添加用户 test2@jameserver.com 并设置密码为 test\njames-cli -h 192.168.10.130 adduser test2@jameserver.com test\n#执行成功后利用listdomains 和 listusers查看\nlistdomains\nlistusers\n```\n\n> 4.使用foxmail客户端测试james server\n\n```\n4.1 登录第一个账号，如图输入用户和密码点击创建\ntest1@jameserver.com\ntest\n```\n\n4.2 配置服务器\n在途中红色框位置输入james安装所在的ip 192.168.10.130,端口号由于使用标准协议不用修改，此处我未进行修改直接点创建成功，原因在于我已经在hosts中配置dns映射，若未配置则需要输入ip\n```\n接受服务类型：IMAP\n邮件账号：test1@jameserver.com\n密码：test\nIMAP服务器：jameserver.com 端口：143\nSMTP服务器：jameserver.com 端口：25\n```\n\n4.3 添加另一个账号\n如下图所示，点击左下角【创建】，填写用户名和服务器信息，点击【创建】后确定，添加完成：\n\n4.5 编写邮件并发送后，查看是否能收到邮件\n\n\n若想连接数据库，需要修改配置文件：\n```\n（1）打开\\conf\\lib，导入所需要的与数据库连接的jar包。因为我用的是mysql数据库，所以jar包用的是：mysql-connector-java-bin.jar\n（2）将conf下所有以.conf结尾的配置文件全改为.xml，并将前面的-template删除\n（3）修改james-database-template.properties改为james-database.properties,并将其里面的内容改为\ndatabase.driverClassName=com.mysql.jdbc.Driver\ndatabase.url=jdbc:mysql://localhost:3306/email\ndatabase.username=root\ndatabase.password=root\n\nvendorAdapter.database=MYSQL\n\nopenjpa.streaming=false\n```","tags":["服务器"]},{"title":"[springboot] 邮件找回密码功能","url":"/2019/04/21//articles/2019/04/21/1555845074000.html/","content":"<a href=\"https://www.jianshu.com/p/27f8312b5da0\" target=\"_blank\">简书|[Springboot]发送邮件、重置密码业务实战</a>\n<a href=\"https://blog.csdn.net/qqxx6661/article/details/87352041\" target=\"_blank\">csdn|[Springboot]发送邮件、重置密码业务实战</a>\n```\n业务流程\n根据controller中函数分为两个部分：\n\n\n用户申请重置邮件：\n用户在页面中输入邮箱\n服务器检查是否允许重置（邮箱所指向用户是否存在，重置是否过于频繁，重置是否到达日请求上限）\n验证通过后，想validate表写入申请记录，包含token，用户邮箱和id\n发送邮件（包含带有token的链接）\n用户点击邮件内连接\n跳转到新密码输入网页\n提交重置密码请求（POST中包含token，新密码）\n\n\n用户重置密码\n服务器验证token（token是否过期，该用户是否发起过其它新token）\n通过validate表记录查找用户id，修改用户密码\n```\n\n<a href=\"https://github.com/qqxx6661/tmall_ssm/blob/master/src/main/resources/generatorConfig.xml\" target=\"_blank\">generatorConfig.xml</a>\n\n<a href=\"https://blog.csdn.net/linzhiqiang0316/article/details/52863265\" target=\"_blank\">SpringBoot中实现邮件找回密码的功能</a>\n\n```\ntitle: '[springboot] 邮件找回密码功能'\ndate: '2019-04-21 19:11:13'\nupdated: '2019-04-21 19:11:13'\ntags: [springboot]\npermalink: /articles/2019/04/21/1555845073000.html\n---\n\n```java\npackage example.utils;\npublic class RandomUtils {\n    //获取m~n范围内的整数\n    public static int getRandom(int m,int n){\n        int random=(int)(Math.random()*(n-m))+m;\n        return random;\n    }\n \n    //获取位数为n的随机数\n    public static int getRandom(int length){\n        int m=getNumber(length);\n        int n=m*10-1;\n        int random=(int)(Math.random()*(n-m))+m;\n        return random;\n    }\n \n    public static int getNumber(int n){\n        if(n<1){\n            n=1;\n        }\n        if(n==1){\n            return 1;\n        }else{\n            n=n-1;\n            return 10*getNumber(n);\n        }\n    }\n}\n```\n\nMd5检验的工具类：\n```java\npackage example.encrypt;\nimport sun.misc.BASE64Encoder;\nimport java.io.UnsupportedEncodingException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\npublic class Md5Encrypt {\n    /**利用MD5进行加密\n     * @param str  待加密的字符串\n     * @return  加密后的字符串\n     */\n    public static String EncoderByMd5(String str){\n        //确定计算方法\n        MessageDigest md5= null;\n        String result=\"\";\n        try {\n            md5 = MessageDigest.getInstance(\"MD5\");\n            result=new BASE64Encoder().encode(md5.digest(str.getBytes(\"utf-8\")));\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        //加密后的字符串\n        return result;\n    }\n}\n```\n\n生成url核心代码：\n业务层代码：\n```java\n  //找回密码\n    public Object findPassowrd(String basePath,String account){\n        Manage manage= manageDao.findByAccount(account);\n        String code,info,result;\n        if(manage==null){\n            code=\"001\";\n            info=\"Account does not exist\";\n            result=\"\";\n        }else{\n            //生成邮件url唯一地址\n            String key= RandomUtils.getRandom(6)+\"\";\n            Timestamp outDate = new Timestamp(System.currentTimeMillis()+(long)(30*60*1000));//30分钟后过期             //忽略毫秒数\n            long outtimes=outDate.getSysUpTime();\n            String sid=account+\"&\"+key+\"&\"+outtimes;\n            MailRetrieve mailRetrieve=new MailRetrieve(account,Md5Encrypt.EncoderByMd5(sid),outtimes);\n            MailRetrieve findMailRetrieve=mailRetrieveDao.findByAccount(account);\n            if(findMailRetrieve!=null){\n                mailRetrieveDao.delete(findMailRetrieve);\n            }\n            mailRetrieveDao.save(mailRetrieve);\n            result =  basePath+\"user/reset_password?sid=\"+Md5Encrypt.EncoderByMd5(sid)+\"&userName=\"+account;\n            code=\"005\";\n            info=\"Email retrieve password\";\n        }\n        return JsonUtils.toJson(code,info,result);\n    }\n```\n控制层的代码：\n```java\n    @RequestMapping(\"/back\")\n    @ResponseBody\n    public Object backManage(HttpServletRequest request,String account){\n        String path = request.getContextPath();\n        String basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n        return manageService.findPassowrd(basePath,account);\n    }\n```\n邮件实体类：\n```java\npackage example.entity;\nimport javax.persistence.*;\n@Entity\n@Table(name = \"myweb_mail_retrieve\")\npublic class MailRetrieve{\n    private static final long serialVersionUID = -1L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private int id;\n \n    @Column(name = \"account\", nullable = true, length = 20)\n    private String account;\n \n    @Column(name = \"sid\", nullable = true, length = 25)\n    private String sid;\n \n    @Column(name = \"out_time\", nullable = true, length = 20)\n    private long outTime;\n \n    public MailRetrieve() {\n    }\n \n    public MailRetrieve(String account, String sid, long outTime) {\n        this.account = account;\n        this.sid = sid;\n        this.outTime = outTime;\n    }\n \n    public static long getSerialVersionUID() {\n        return serialVersionUID;\n    }\n \n    public int getId() {\n        return id;\n    }\n \n    public void setId(int id) {\n        this.id = id;\n    }\n \n \n    public MailRetrieve(String account) {\n        this.account = account;\n    }\n \n    public String getSid() {\n        return sid;\n    }\n \n    public void setSid(String sid) {\n        this.sid = sid;\n    }\n \n    public long getOutTime() {\n        return outTime;\n    }\n \n    public void setOutTime(long outTime) {\n        this.outTime = outTime;\n    }\n}\n```\n3.通过James邮件服务器将url地址发送到用户邮箱中（具体过程看以前的案例介绍）。\n4.点击url地址，服务器进行邮件url地址检验，检验完跳转到相应的界面中进行处理：\n\n业务层代码：\n```java\n //邮件U找回密码URL校验\n    public Object verifyMail(String sid,String account){\n        String code,info;\n        boolean result=false;\n        MailRetrieve mailRetrieve=mailRetrieveDao.findByAccount(account);\n        long outTime=mailRetrieve.getOutTime();\n        Timestamp outDate = new Timestamp(System.currentTimeMillis());\n        long nowTime=outDate.getSysUpTime();\n        System.out.println(\"nowTime:\"+nowTime);\n        if(outTime<=nowTime){\n            code=\"006\";\n            info=\"verifyMail time is overdue\";\n        }else if(\"\".equals(sid)){\n            code=\"007\";\n            info=\"sid is incomplete content\";\n        }else if(!sid.equals(mailRetrieve.getSid())){\n            code=\"008\";\n            info=\"sid is error\";\n        }else{\n            code=\"000\";\n            info=\"no error\";\n            result=true;\n        }\n        return JsonUtils.toJson(code,info,result);\n    }\n```\n控制层代码：\n```java\n    @RequestMapping(\"/verify\")\n    @ResponseBody\n    public Object verifyMail(String sid,String account){\n        return manageService.verifyMail(sid,account);\n    }\n```\n这整个过程中需要注意的有：\n1、时间是否过期要判断好\n2、保存邮件url信息的时候要注意数据库中是否有这个信息存在，如果存在则删除重新添加。\n\n```","tags":["springboot"]},{"title":"[springcloud] springcloud","url":"/2019/04/20//articles/2019/04/20/1555759263000.html/","content":"<a href=\"http://www.funtl.com/zh/guide/\" target=\"_blank\">广州千锋</a>\n<a href=\"https://www.jianshu.com/nb/32876435\" target=\"_blank\">简书|广州千锋</a>\n<a href=\"https://github.com/funtl/spring-cloud-netflix-itoken\" target=\"_blank\">github|广州千锋</a>\n\n","tags":["springcloud"]},{"title":"[在线工具] base64","url":"/2019/04/20//articles/2019/04/20/1555759262000.html/","content":"<a href=\"http://imgbase64.duoshitong.com/\" target=\"_blank\">base64网站</a>\n","tags":["在线工具"]},{"title":"[服务器] docker+gitlab持续集成","url":"/2019/04/20//articles/2019/04/20/1555759261000.html/","content":"<a href=\"http://www.runoob.com/w3cnote/git-gui-window.html\" target=\"_blank\">Git可视化极简易教程 — Git GUI使用方法</a>\n\n<a href=\"https://www.jianshu.com/p/0abe441d5d3c\" target=\"_blank\">Windows下使用docker部署gitlab CI服务</a>\n<a href=\"https://www.jianshu.com/p/d1a2e3a6be14\" target=\"_blank\">Docker搭建GitLab-runner及关于golang的gitlab-ci配置</a>\n<a href=\"https://www.jianshu.com/p/d63d9941565f\" target=\"_blank\">gitlab-ci 持续集成完整实践</a>\n<a href=\"https://blog.csdn.net/m0_37499059/article/details/81015858\" target=\"_blank\">gitlab-ci 实际项目开发-GitLab CI持续集成</a>\n<a href=\"http://www.funtl.com/zh/apache-dubbo-ci/%E5%9F%BA%E4%BA%8E-Docker-%E5%AE%89%E8%A3%85-GitLab-Runner.html#%E4%BD%BF%E7%94%A8-runner\" target=\"_blank\">千锋网络|基于 Docker 安装 GitLab Runner</a>\n\n\n<a href=\"https://link.jianshu.com/?t=https%3A%2F%2Fdocs.gitlab.com%2Fce%2Fapi%2FREADME.html\" target=\"_blank\">Gitlab API文档</a>\n\n拉取gitlab-ce镜像\n```\ndocker pull gitlab/gitlab-ce\n```\n\n```\ncmd.exe\ncd D: && D:\nmkdir docker && cd docker && mkdir gitlab && cd gitlab && mkdir config logs && cd .>docker.sock\n```\n\n启动失败\n```\ndocker run -d --hostname localhost -p 10080:80 -p 10443:443 --name gitlab -v d:/docker/gitlab/docker.sock:/var/run/docker.sock -v d:/docker/gitlab/config:/etc/gitlab -v d:/docker/gitlab/logs:/var/log/gitlab gitlab/gitlab-ce:latest\n```\n\n启动成功\n```\ndocker run -d --hostname localhost -p 10080:80 -p 10443:443 --name gitlab gitlab/gitlab-ce:latest\n```\n\n```\ndocker ps -a\n```\n\ndocker 列出每个容器的IP\n常用方法有两种\n方法一\n```\ndocker inspect 容器ID | grep IPAddress\n```\n\n方法二\n查看docker name：\n```\ndocker inspect -f='{{.Name}}' $(docker ps -a -q)\n```\n查看dockers ip：\n```\ndocker inspect -f='{{.NetworkSettings.IPAddress}}' $( docker ps -a -q)\n```\n综上，我们可以写出以下脚本列出所有容器对应的名称，端口，及ip\n```\ndocker inspect -f='{{.Name}} {{.NetworkSettings.IPAddress}} {{.HostConfig.PortBindings}}' $(docker ps -aq)\n```\n\n默认管理员账号密码：\n```\nUsername: \nroot\nPassword: \n5iveL!fe\n```\n<a href=\"https://www.jianshu.com/p/080a962c35b6\" target=\"_blank\">docker下gitlab安装配置使用(完整版)</a>\n\n<a href=\"https://www.cnblogs.com/zuxing/articles/9329152.html\" target=\"_blank\">docker安装配置gitlab详细过程+gitlab命令</a>\n常用的几个Gitlab命令\n```\n# 重新应用gitlab的配置\ngitlab-ctl reconfigure\n \n# 重启gitlab服务\ngitlab-ctl restart\n \n# 查看gitlab运行状态\ngitlab-ctl status\n \n#停止gitlab服务\ngitlab-ctl stop\n \n# 查看gitlab运行日志\ngitlab-ctl tail\n \n# 停止相关数据连接服务\ngitlab-ctl stop unicorn\ngitlab-ctl stop sideki\n```\n\n<a href=\"https://www.jianshu.com/p/214a2fd8f931\" target=\"_blank\">centos/ubuntu安装gitlab+修改gitlab端口</a>\n```\nsudo yum install curl policycoreutils openssh-server openssh-clients\nsudo systemctl enable sshd\nsudo systemctl start sshd\nsudo yum install postfix\nsudo systemctl enable postfix\nsudo systemctl start postfix\nsudo firewall-cmd --permanent --add-service=http\nsudo systemctl reload firewalld\n#安装gitlab-ce\ncurl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash\nsudo yum install gitlab-ce\n```\n\n\nubuntu安装gitlab\n2.2.1 Debian/Ubuntu 用户\n1、首先信任 GitLab 的 GPG 公钥:\n```\ncurl https://packages.gitlab.com/gpg.key 2> /dev/null | sudo apt-key add - &>/dev/null\n```\n2、再选择你的 Debian/Ubuntu 版本，文本框中内容写进 /etc/apt/sources.list.d/gitlab-ce.list\n比如我选择系统版本为Ubuntu 14.04，则生成的文本如下\n```\ndeb https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu trusty main\n#然后使用vi命令操作/etc/apt/sources.list.d/gitlab-ce.list文件，将上面的文本添加到/etc/apt/sources.list.d/gitlab-ce.list文件中。\n```\n3、安装 gitlab-ce:\n```\nsudo apt-get update\nsudo apt-get install gitlab-ce\n#也可以安装指定的版本\nsudo apt-get install gitlab-ce=9.4.3-ce.0\n```\n\n<a href=\"https://www.cnblogs.com/int32bit/p/5310382.html\" target=\"_blank\">使用Docker部署Gitlab+邮箱配置</a>\n```\ngitlab_rails['smtp_enable'] = true\ngitlab_rails['smtp_address'] = \"smtp.163.com\"\ngitlab_rails['smtp_port'] = 25\ngitlab_rails['smtp_user_name'] = \"xxxx@163.com\"\ngitlab_rails['smtp_password'] = \"xxxxpassword\"\ngitlab_rails['smtp_domain'] = \"163.com\"\ngitlab_rails['smtp_authentication'] = \"login\"\ngitlab_rails['smtp_enable_starttls_auto'] = false\ngitlab_rails['smtp_openssl_verify_mode'] = \"peer\"\n\ngitlab_rails['gitlab_email_from'] = \"xxxx@163.com\"\nuser[\"git_user_email\"] = \"xxxx@163.com\"\n```\n\n<a href=\"https://www.jianshu.com/p/b04356e014fa\" target=\"_blank\">手把手教你 GitLab 的安装及使用</a>\n```\ngit的优点\n\n1.git是分布式的，svn不是\ngit分布式本地就可以用，可以随便保存各种历史痕迹，不用担心污染服务器，连不上服务器也能提交代码、查看log。\n\n2.GIT分支和SVN的分支不同\n分支在SVN中实际上是版本库中的一份copy，而git一个仓库是一个快照，所以git 切换、合并分支等操作更快速。\n\n3.git有一个强大的代码仓库管理系统 - gitlab\n可以很方便的管理权限、代码review，创建、管理project\n```\n\ngitlab使用教程\nhttps://blog.csdn.net/Adelly/article/details/79099772\n```\n\n```","tags":["服务器"]},{"title":"[docker] docker+jenkins持续集成","url":"/2019/04/20//articles/2019/04/20/1555759260000.html/","content":"\n<a href=\"https://www.docker-cn.com/registry-mirror\" target=\"_blank\">Docker 中国官方镜像加速</a>\n<a href=\"https://yeasy.gitbooks.io/docker_practice/content/install/mirror.html\" target=\"_blank\">docker中文文档</a>\n\n\nwindows下docker配置镜像加速\n方法（1）\n```\ndocker-machine ssh default\nsudo sed -i \"s|EXTRA_ARGS='|EXTRA_ARGS='--registry-mirror=https://registry.docker-cn.com |g\" /var/lib/boot2docker/profile\nexit\ndocker-machine restart default\ndocker-machine env\n```\n方法（2）\n```\ndocker --registry-mirror=https://registry.docker-cn.com daemon\n```\n\n<a href=\"https://www.cnblogs.com/jinqier/p/9686833.html\" target=\"_blank\">jenkins+Docker持续化部署(笔记）</a>\n```\n#查看registry-mirror\ndocker info\n```\n\ngitub+jenkins\n```\ngit clone https://github.com/AliyunContainerService/docker-jenkins\ncd docker-jenkins/jenkins\n#docker build -t denverdino/jenkins .\ndocker build -t jenkins .\n```\n\nDockerfile\n```\nFROM jenkins\nUSER root\nRUN apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/* \nRUN echo \"jenkins ALL=NOPASSWD: ALL\" >> /etc/sudoers\nUSER jenkins\n```\n\n基于Dockerfile构建镜像\n```\ndocker build -t jenkins:2.0 . --registry-mirror=https://registry.docker-cn.com daemon\n```\n\n基于新镜像启动Jenkins容器\n```\ndocker rm -f myjenkins\n#docker run -d -p 8080:8080 -p 50000:50000 -v $(pwd)/data:/var/jenkins_home --name myjenkins denverdino/jenkins\ndocker run -d -p 8080:8080 -p 50000:50000 -v /d/docker/jenkins_node:/var/jenkins_home --name myjenkins denverdino/jenkins\ndocker logs myjenkins\n```\n\n```\ndocker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\n#docker rmi $(docker images | grep \"^<none>\" | awk \"{print $3}\")\ndocker rmi $(docker images -q)\ndocker volume rm $(docker volume ls -q)\ndocker image prune\ndocker images\n```","tags":["docker"]},{"title":"[centos] 更新源","url":"/2019/04/20//articles/2019/04/20/1555759259000.html/","content":"<a href=\"https://www.cnblogs.com/gabin/p/6519352.html\" target=\"_blank\">ubuntu 源替换阿里云源</a>\n\n第二步：下载新的CentOS-Base.repo 到/etc/yum.repos.d/\n```\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n```\nCentOS 5\n```\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo\n```\n\nCentOS 6\n```\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo\n```\n\n更改CentOS-Media.repo使其为不生效（默认启动的是网络源，但是最好还是保证只启动一个源）：\nenabled=0\n第三步：运行yum makecache生成缓存\n```\nyum clean all\nyum makecache\n```","tags":["centos"]},{"title":"[css] div内容位置左下","url":"/2019/04/20//articles/2019/04/20/1555759258000.html/","content":"\n```\n<view style=\"flex:1;\">\n  <view style='width:100%;height:100%;position:relative;' bindtap='appointBtn'>\n    <button bindtap='appointBtn' style=\"position:absolute;display:inline-block;right:0;bottom:0;\">预定</button>\n  </view>\n</view>\n```\n\n","tags":["css"]},{"title":"[css] flex布局水平垂直居中","url":"/2019/04/20//articles/2019/04/20/1555759257000.html/","content":"<a href=\"https://www.jianshu.com/p/7baa3d4a1e9c\" target=\"_blank\">flex布局水平垂直居中</a>\n\nhtml\n```\n<div class=\"box\">\n     <section class=\"inner\"></section>\n</div>\n```\n\ncss\n```\n.box {\n    display: flex;\n    justify-content: center; /* 水平居中 */\n    align-items: center;     /* 垂直居中 */\n    width: 1000px;\n    height: 600px;\n    border: 1px solid red;\n}\n.inner {\n    width: 300px;\n    height: 200px;\n    background-color: red;\n}        \n```","tags":["css"]},{"title":"[centos] 安装Nginx","url":"/2019/04/20//articles/2019/04/20/1555759256000.html/","content":"<a href=\"https://www.cnblogs.com/kaid/p/7640723.html\" target=\"_blank\">centos7安装Nginx</a>\t\n","tags":["centos"]},{"title":"[css] inline-block顶部对齐","url":"/2019/04/20//articles/2019/04/20/1555759255000.html/","content":"<a href=\"https://www.cnblogs.com/zccfun/p/6236499.html\" target=\"_blank\">inline-block顶部对齐</a>\n```\nvertical-align:top;\n```\n","tags":["css"]},{"title":"[css] 修改png图标颜色","url":"/2019/04/20//articles/2019/04/20/1555759254000.html/","content":"<a href=\"https://www.jianshu.com/p/f2cc9c93dd9b\" target=\"_blank\">简书|CSS修改png图标颜色</a>\n\nhtml\n```\n<i class=\"icon\">\n    <i class=\"icon-del\"></i>\n</i>\n```\ncss\n```\n.icon{\n    overflow:hidden;\n    display: inline-block;\n    position: relative;\n    height:30px;\n    width: 40px;\n}\n.icon > .icon-del {\n   filter: drop-shadow(20px 0 #000); \n   position: relative;\n   left: -20px;\n}\n```","tags":["css"]},{"title":"[git] TortoiseGit保存用户名及密码","url":"/2019/04/20//articles/2019/04/20/1555759253000.html/","content":"<a href=\"https://www.cnblogs.com/huoqs/p/5669397.html\" target=\"_blank\">TortoiseGit保存用户名及密码</a>\n","tags":["git"]},{"title":"[docker] 常用命令","url":"/2019/04/20//articles/2019/04/20/1555759252000.html/","content":"<a href=\"https://www.cnblogs.com/yanyouqiang/p/8301856.html\" target=\"_blank\">docker批量删除容器、镜像</a>\n```\n#1.停止所有的container，这样才能够删除其中的images：\ndocker stop $(docker ps -a -q)\n#如果想要删除所有container的话再加一个指令：\ndocker rm $(docker ps -a -q)\n#2.查看当前有些什么images\ndocker images\n#3.删除images，通过image的id来指定删除谁\ndocker rmi <image id>\n#想要删除untagged images，也就是那些id为<None>的image的话可以用\ndocker rmi $(docker images | grep \"^<none>\" | awk \"{print $3}\")\n#要删除全部image的话\ndocker rmi $(docker images -q)\n```\n\n手动清理Docker镜像/容器/数据卷\n```\n#删除所有关闭的容器：\ndocker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm\n#删除所有dangling镜像（即无tag的镜像）：\ndocker rmi $(docker images | grep \"^<none>\" | awk \"{print $3}\")\n#删除所有数据卷（即无用的Volume）：\ndocker volume rm $(docker volume ls -q)\n#删除所有dangling数据卷（即无用的Volume）：\ndocker volume rm $(docker volume ls -qf dangling=true)\n```\n\n```\ndocker volume rm $(docker volume ls -q)\ndocker image prune\n```\n\n<a href=\"http://www.runoob.com/docker/windows-docker-install.html\" target=\"_blank\">Windows Docker 安装</a>\n\nwindows下docker配置镜像加速\n```\ndocker-machine ssh default\nsudo sed -i \"s|EXTRA_ARGS='|EXTRA_ARGS='--registry-mirror=https://registry.docker-cn.com |g\" /var/lib/boot2docker/profile\nexit\ndocker-machine restart default\ndocker-machine env\n```\n\n<a href=\"https://segmentfault.com/a/1190000012921606\" target=\"_blank\">使用Docker+Jenkins自动构建部署</a>\n<a href=\"https://www.cnblogs.com/Erick-L/p/8818697.html\" target=\"_blank\">使用Docker+Jenkins自动构建部署</a>\n<a href=\"https://blog.csdn.net/rengee202/article/details/80894872\" target=\"_blank\">spring boot 项目利用Jenkins实现自动化部署</a>\n```\ndocker run -d --name myjenkins -p 8080:8080 -p 50000:50000 -v /d/docker/jenkins_node:/var/jenkins_home jenkins\n\ntouch: cannot touch '/var/jenkins_home/copy_reference_file.log': Permission denied\nCan not write to /var/jenkins_home/copy_reference_file.log. Wrong volume permissions?\n\ndocker pull jenkins\ndocker rm -f myjenkins\n#docker run -d -p 8080:8080 -p 50000:50000 -v $(pwd)/data:/var/jenkins_home --name myjenkins jenkins\ndocker logs myjenkins\n\ndocker run -ti --rm --entrypoint=\"/bin/bash\" jenkins -c \"whoami && id\"\ndocker run -ti --rm --entrypoint=\"/bin/bash\" jenkins -c \"ls -la /var/jenkins_home\"\ndocker exec myjenkins ls -la /var/jenkins_home\n\n```\n\n<a href=\"https://github.com/denverdino/docker-jenkins\" target=\"_blank\">gitub</a>\n```\ngit clone https://github.com/AliyunContainerService/docker-jenkins\ncd docker-jenkins/jenkins\ndocker build -t denverdino/jenkins .\n```\n基于新镜像启动Jenkins容器\n```\ndocker rm -f jenkins\ndocker run -d -p 8080:8080 -p 50000:50000 -v $(pwd)/data:/var/jenkins_home --name jenkins denverdino/jenkins\n```\n\n<a href=\"https://www.cnblogs.com/jinqier/p/9686833.html\" target=\"_blank\">jenkins+Docker持续化部署(笔记）</a>\ndocker build -t jenkins:2.0 . \n包含权限\nDockerfile\n```\nFROM jenkins\nUSER root\nRUN apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/* \nRUN echo \"jenkins ALL=NOPASSWD: ALL\" >> /etc/sudoers\nUSER jenkins\n```\ndocker命令\n```\ndocker run -d --name myjenkins -p 8080:8080 -p 50000:50000 -v /d/docker/jenkins_node:/var/jenkins_home jenkins:2.0\n```\n\n<a href=\"https://blog.csdn.net/isea533/article/details/87364629\" target=\"_blank\">含有纯命令执行 / 配置 Docker 容器的 Jenkins</a>\n\n\n> blog|晓晨Master|配置加速器\n\n<a href=\"https://www.cnblogs.com/stulzq/p/8627360.html\" target=\"_blank\">使用Docker安装Jenkins</a>\n<a href=\"https://www.jianshu.com/p/a1aef2f7da56\" target=\"_blank\">jenkins 中编写docker命令</a>\n<a href=\"https://blog.51cto.com/lizhenliang/2159817\" target=\"_blank\">Jenkins与Docker的自动化CI/CD实战</a>\n<a href=\"https://www.exception.site/docker/docker-delete-image\" target=\"_blank\">\nblog | Docker 删除&清理镜像</a>\n","tags":["docker"]},{"title":"[git] git可视化工具GitKraken","url":"/2019/04/20//articles/2019/04/20/1555759251000.html/","content":"<a href=\"https://www.jianshu.com/p/a6b4761e34e5\" target=\"_blank\">GitKraken</a>\n","tags":["git"]},{"title":"[git] 版本回退","url":"/2019/04/20//articles/2019/04/20/1555759250000.html/","content":"<a href=\"https://www.cnblogs.com/zfyouxi/p/4812558.html\" target=\"_blank\">使用方便git命令检查记录的版本号</a>\n```\n#查看版本号\n#git log\n#git log --pretty=oneline\ngit log --stat\n```\n<a href=\"https://blog.csdn.net/loganwz/article/details/82729913\" target=\"_blank\">版本回退及分支</a>\n```\n#版本回退\ngit reset --hard HEAD^回退到上一版本\ngit reset --hard HEAD^回退到上上版本\ngit reset --hard HEAD~100回退到上100个版本\ngit reset --hard 具体版本号回退到具体版本号 \n#记录每一次命令\ngit reflog\n```\n\n<a href=\"https://blog.csdn.net/fengjiexyb/article/details/78031845\" target=\"_blank\">cmd无法正确执行git reset --hard HEAD</a>\n```\ngit reset --hard HEAD\"^\" \n#或\ngit reset --hard \"HEAD^\" \n```\n\ngit回退到某个历史版本\n```\n#1.查看历史版序列号\ngit log --stat\n#2. 在Terminal 或者git控制条 执行 回退到某个版本命令\ngit reset --hard 139dcfaa558e3276b30b6b2e5cbbb9c00bbdca96 \n#3. 强制提交到dev分支\ngit push -f -u origin dev\n\n#4.回退时的注意事项\n#(1)执行以上脚本前 一定记得 做个 分支的备份\n#(2)涉及到多个分支合并后 又想回滚代码的，请注意提交记录编号的选择，请一定选择 当前分支的提交记录编号，否则可能会回滚成其它分支的编号，例如我打算回滚到 dev 的某个历史版本：\ngit reset --hard 139dcfaa558e3276b30b6b2e5cbbb9c00bbdca96 \n139dcfaa558e3276b30b6b2e5cbbb9c00bbdca96 一定得是 直接在 dev 上的直接提交记录编号，否则会回滚成 其它分支的某个版本\n```","tags":["git"]},{"title":"[git] 保存账号密码","url":"/2019/04/20//articles/2019/04/20/1555759249000.html/","content":"<a href=\"http://www.cnblogs.com/ballwql/p/3462104.html\" target=\"_blank\">Git Push 避免用户名和密码方法</a>\n```\n%USERPROFILE%/.git-credentials\ngit config --global credential.helper store\n```\n创建git用户名和密码存储文件\n```\n#notepad %USERPROFILE%/_netrc，文件中内容格式如下：\nmachine {git account name}.github.com\nlogin your-usernmae\npassword your-password\n```\n<a href=\"https://www.cnblogs.com/huoqs/p/5669397.html\" target=\"_blank\">TortoiseGit保存git的账号密码</a>\n","tags":["git"]},{"title":"[git] 分支branch","url":"/2019/04/20//articles/2019/04/20/1555759248000.html/","content":"<a href=\"https://www.cnblogs.com/juncaoit/p/9349374.html\" target=\"_blank\">在github上创建新的分支（包括管理分支）</a>\n\n一：查看分支\n```\n#1.查看本地分支\ngit branch\n#2.查看远程分支\ngit branch -r\n#3.查看所有的分支\ngit branch -a\n```\n二：创建分支\n```\n#1.创建本地分支\ngit branch dev\n#2.切换到新创建的分支\ngit checkout dev\n#3.将新分支push到github\ngit push origin dev\n```\n三：删除分支\n```\n#1.删除本地分支\ngit branch -a\ngit branch -D -r\ngit branch -a\n```","tags":["git"]},{"title":"[js] 时间戳转字符串时间","url":"/2019/04/20//articles/2019/04/20/1555759247000.html/","content":"<a href=\"https://segmentfault.com/a/1190000015992232\" target=\"_blank\">时间戳转字符串时间</a>\n```\nfunction transformTime(timestamp = +new Date()) {\n    if (timestamp) {\n        var time = new Date(timestamp);\n        var y = time.getFullYear();\n        var M = time.getMonth() + 1;\n        var d = time.getDate();\n        var h = time.getHours();\n        var m = time.getMinutes();\n        var s = time.getSeconds();\n        return y + '-' + addZero(M) + '-' + addZero(d) + ' ' + addZero(h) + ':' + addZero(m) + ':' + addZero(s);\n      } else {\n          return '';\n      }\n}\nfunction addZero(m) {\n    return m < 10 ? '0' + m : m;\n}\ntransformTime(); // \"2018-08-08 12:09:12\"\n```\n\n```\nfunction time(time = +new Date()) {\n    var date = new Date(time + 8 * 3600 * 1000); // 增加8小时\n    return date.toJSON().substr(0, 19).replace('T', ' ');\n}\ntime(); // \"2018-08-09 18:25:54\"\n```\n\n破折号 换成 点\n```\nfunction time(time = +new Date()) {\n    var date = new Date(time + 8 * 3600 * 1000);\n    return date.toJSON().substr(0, 19).replace('T', ' ').replace(/-/g, '.');\n}\ntime(); // \"2018.08.09 18:25:54\n```","tags":["js"]},{"title":"[centos] 配置https服务","url":"/2019/04/20//articles/2019/04/20/1555759246000.html/","content":"<a href=\"https://www.linuxidc.com/Linux/2017-07/145914.htm\" target=\"_blank\">CentOS 7.3配置HTTPS服务</a>\n\n一 搭建证书\n```\n说明：\nCA 主机为192.168.29.3\nclient主机为 192.168.29.100\n```\n1 生成私钥\n```\n(umask 077 ; openssl genrsa -out /etc/pki/CA/private/cakey.pem 4096)\n```\n2 生成自签证书\n```\nopenssl req -new -x509 -key /etc/pki/CA/private/cakey.pem  -out /etc/pki/CA/cacert.pem -days 365\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:CN\nState or Province Name (full name) []:BeiJing\nLocality Name (eg, city) [Default City]:BeiJing\nOrganization Name (eg, company) [Default Company Ltd]:Company\nOrganizational Unit Name (eg, section) []:OPS\nCommon Name (eg, your name or your server's hostname) []:www.test.com\nEmail Address []:\n```\n3 为CA提供所需的目录及文件\n（1）所需目录，如果无，则创建\n```\n/etc/pki/CA/certs/\n/etc/pki/CA/crl/\n/etc/pki/CA/newcerts/\n```\n（2）所需文件\n```\n#序列号文件\ntouch  /etc/pki/CA/serial\n#数据库文件\ntouch  /etc/pki/CA/index.txt\n```\n（3）\n```\n#维护ca的序列号\necho 01 > /etc/pki/CA/serial\n```\n4 在client上进行如下操作\n```\n#1.创建放置公钥私钥的文件夹\nmkdir /etc/httpd/ssl\n#2.生成自己的私钥\n(umask 077; openssl genrsa -out /etc/httpd/ssl/httpd.key 2048)\n#3.请CA为自己生成公钥\nopenssl req -new -key /etc/httpd/ssl/httpd.key -out /etc/httpd/ssl/httpd.csr -days 365\n#\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:CN\nState or Province Name (full name) []:BeiJing\nLocality Name (eg, city) [Default City]:BeiJing\nOrganization Name (eg, company) [Default Company Ltd]:Company\nOrganizational Unit Name (eg, section) []:OPS\nCommon Name (eg, your name or your server's hostname) []:www.test.com\nEmail Address []:\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\nAn optional company name []:\n#4.把生成的公钥发送给CA\nscp  /etc/httpd/ssl/httpd.csr root@192.168.29.3:/tmp/\n#\nThe authenticity of host '192.168.29.3 (192.168.29.3)' can't be established.\nECDSA key fingerprint is f2:2e:89:a2:8d:22:22:9c:a9:f8:c9:19:18:d3:b6:c4.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.29.3' (ECDSA) to the list of known hosts.\nroot@192.168.29.3's password: \nhttpd.csr                               100% 1005     1.0KB/s   00:00\n```\n5 在CA主机上为client签证\n```\nopenssl ca -in /tmp/httpd.csr  -out /etc/pki/CA/certs/httpd.crt -days 365\n#\nUsing configuration from /etc/pki/tls/openssl.cnf\nCheck that the request matches the signature\nSignature ok\nCertificate Details:\n        Serial Number: 1 (0x1)\n        Validity\n            Not Before: Jun  3 02:54:23 2017 GMT\n            Not After : Jun  3 02:54:23 2018 GMT\n        Subject:\n            countryName               = CN\n            stateOrProvinceName       = BeiJing\n            organizationName          = Company\n            organizationalUnitName    = OPS\n            commonName                = www.test.com\n        X509v3 extensions:\n            X509v3 Basic Constraints: \n                CA:FALSE\n            Netscape Comment: \n                OpenSSL Generated Certificate\n            X509v3 Subject Key Identifier: \n                5D:A9:5A:90:29:F3:3A:7F:76:BE:21:78:14:80:E5:FB:5E:03:D8:D9\n            X509v3 Authority Key Identifier: \n                keyid:9E:1E:F3:84:4D:D0:79:E2:BD:DD:A8:50:29:6C:BA:0C:21:60:CA:96\nCertificate is to be certified until Jun  3 02:54:23 2018 GMT (365 days)\nSign the certificate? [y/n]:y\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\n```\n6 把签署的证书发给client\n```\nscp  /etc/pki/CA/certs/httpd.crt   root@192.168.29.100:/etc/httpd/ssl/\n#\nThe authenticity of host '192.168.29.100 (192.168.29.100)' can't be established.\nECDSA key fingerprint is 32:16:f3:2d:78:65:9f:a0:31:6c:dc:b9:24:e7:5a:8f.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.29.100' (ECDSA) to the list of known hosts.\nroot@192.168.29.100's password: \nhttpd.crt                               100% 5711     5.6KB/s   00:00\n```\n\n二 HTTPS配置\n7 安装mod_ssl模块\n```\nyum install mod_ssl -y\n```\n8 修改配置文件\n```\nvim /etc/httpd/conf.d/ssl.conf\n#\nDocumentRoot \"/data/https\"\nServerName www.test.com:443\n<Directory \"data/https\">\n     AllowOverride None\n     Require all granted\n</Directory>\nSSLCertificateFile /etc/httpd/ssl/httpd.crt\nSSLCertificateKeyFile  /etc/httpd/ssl/httpd.crt\n```\n注意：\n```\n并修该/etc/httpd/ssl/httpd.crt、/etc/httpd/ssl/httpd.crt两个文件的属性，确保apache为可读就行，当然也可放在默认文件夹下，就不需要修改权限了。\nchmod  +r  /etc/httpd/ssl/httpd.key\n```\n9 检查语法\n```\nhttpd -t\n#\nSyntax OK\n```\n10 修给默认页面\n```\necho \"www.test.com\" > /data/https/index.html\n```\n11 启动http服务\n```\nsystemctl start httpd.service\n```\n12 把CA 的自签证书传到桌面并改名\n```\nsz /etc/pki/CA/cacert.pem\nmv /etc/pki/CA/cacert.pem /etc/pki/CA/cacert.crt\n```\n13 配置DNS解析\n```\n#修改\nC:\\Windows\\Systeme32\\drivers\\etc\\hosts\n192.168.29.100  www.test.com    \n```\n14 打开浏览器测试\n```\nhttps://www.test.com\n```","tags":["centos"]},{"title":"[servlet] maven运行servlet","url":"/2019/04/20//articles/2019/04/20/1555759245000.html/","content":"```\ntomcat7:run\n```\npom依赖\n```\n<project>\n\n  <packaging>war</packaging>\n\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>3.8.1</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n          <groupId>javax.servlet</groupId>\n          <artifactId>servlet-api</artifactId>\n          <version>2.5</version>\n          <scope>provided</scope>\n    </dependency>\n   </dependencies>\n\n   <build>\n    <sourceDirectory>src/main/java</sourceDirectory>\n    <plugins>\n      <plugin>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.5.1</version>\n        <configuration>\n          <source>1.8</source>\n          <target>1.8</target>\n        </configuration>\n      </plugin>\n\n      <plugin>\n        <groupId>org.apache.tomcat.maven</groupId>\n        <artifactId>tomcat7-maven-plugin</artifactId>\n        <version>2.2</version>\n        <configuration>\n          <path>/</path>\n        </configuration>\n      </plugin>\n\n      <plugin>\n          <artifactId>maven-resources-plugin</artifactId>\n          <version>3.0.1</version>\n          <executions>\n              <execution>\n                  <id>copy-xmls</id>\n                  <phase>process-sources</phase>\n                  <goals>\n                      <goal>copy-resources</goal>\n                  </goals>\n                  <configuration>\n                      <outputDirectory>${basedir}/target/classes</outputDirectory>\n                      <resources>\n                          <resource>\n                              <directory>${basedir}/src/main/java</directory>\n                              <includes>\n                                  <include>**/*.xml</include>\n                              </includes>\n                          </resource>\n                      </resources>\n                  </configuration>\n              </execution>\n          </executions>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n```\n","tags":["servlet"]},{"title":"[springboot] docker","url":"/2019/04/20//articles/2019/04/20/1555759244000.html/","content":"\n<a href=\"http://www.yunweipai.com/archives/20727.html\" target=\"_blank\">Docker 中国官方镜像加速</a>\n<a href=\"https://www.docker-cn.com/registry-mirror\" target=\"_blank\">Docker 中国官方镜像加速</a>\n<a href=\"https://www.cnblogs.com/weifeng1463/p/7468391.html\" target=\"_blank\">Docker 中国官方镜像加速</a>\n```\ndocker --registry-mirror=https://registry.docker-cn.com daemon\n```\n\n/etc/docker/daemon.json\n```\n{\n  \"registry-mirrors\": [\"https://registry.docker-cn.com\"]\n}\n```\n\n<a href=\"https://blog.csdn.net/chinrui/article/details/79721366\" target=\"_blank\">使用 Docker 部署 Springboot 应用</a>\n<a href=\"https://www.cnblogs.com/shamo89/p/9201513.html\" target=\"_blank\">springboot整合docker部署（两种构建Docker镜像方式）</a>\n\n\n<a href=\"https://www.jianshu.com/p/efd70ad53602\" target=\"_blank\">学习Docker之Docker初体验 - SpringBoot集成Docker的部署、发布与应用</a>\n<a href=\"https://github.com/vector4wang/spring-boot-quick/tree/master/quick-docker\" target=\"_blank\">quick-docker</a>\n\n\nSpringBoot+Docker+Git+Jenkins实现简易的持续集成和持续部署\n<a href=\"https://my.oschina.net/merryyou/blog/1799317\" target=\"_blank\">springboot+docker+jenkins</a>\n\n\n<a href=\"https://blog.csdn.net/liubingyu12345/article/details/80737412\" target=\"_blank\">Jenkins+Docker自动化部署Spring boot项目 （三）搭建jenkins（包含解决容器内权限问题）</a>\n\n\n<a href=\"https://www.cnblogs.com/bigben0123/p/7886092.html\" target=\"_blank\">blog|基于Jenkins，docker实现自动化部署（持续交互）</a>\n\n<a href=\"https://segmentfault.com/a/1190000014325300\" target=\"_blank\">windows+jenkins+maven+docker+github全自动化部署SpringBoot实例</a>\n\n\n<a href=\"http://blog.wangxc.club/\" target=\"_blank\">blog|docker</a>\n<a href=\"https://www.cnblogs.com/xuezhigu/p/6555895.html\" target=\"_blank\">blog|docker|雪之谷</a>\n\n\n<a href=\"https://www.cnblogs.com/xuezhigu/p/6555895.html\" target=\"_blank\">centos7使用docker部署gitlab-ce-zh应用</a>\n\n\n<a href=\"https://blog.csdn.net/yulei_qq/article/details/53228601\" target=\"_blank\">容器权限问题解决 / Docker Volume 之权限管理（一）</a>\n\n","tags":["springboot"]},{"title":"[springboot] https配置","url":"/2019/04/20//articles/2019/04/20/1555759243000.html/","content":"<a href=\"https://www.cnblogs.com/kaid/p/7640723.html\" target=\"_blank\">centos7安装Nginx</a>\n```\nyum install gcc-c++\nyum install -y pcre pcre-devel\nyum install -y zlib zlib-devel\nyum install -y openssl openssl-devel\n#访问\n#https://nginx.org/en/download.html\nwget -c https://nginx.org/download/nginx-1.10.1.tar.gz\ntar -zxvf nginx-1.10.1.tar.gz\ncd nginx-1.10.1\n./configure\nmake\nmake install\nwhereis nginx\n\n#启动、停止nginx\ncd /usr/local/nginx/sbin/\n/usr/local/nginx/sbin/nginx -t\n./nginx\n./nginx -s stop\n./nginx -s quit\n./nginx -s reload\n\n#查询nginx进程：\nps aux|grep nginx\n\n#1.先停止再启动\n./nginx -s quit\n./nginx\n\n./nginx -s reload\n```\n\n\nnginx: [emerg] the \"ssl\" parameter requires ngx_http_ssl_module\n原因：Nginx未开启SSL模块\nhttps://www.cnblogs.com/ghjbk/p/6744131.html\n```\n./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module\nmake\ncp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak\ncp ./objs/nginx /usr/local/nginx/sbin/\n/usr/local/nginx/sbin/nginx -V\n```\n\n<a href=\"https://www.cnblogs.com/sufferingStriver/p/9026902.html\" target=\"_blank\">Spring Boot2中配置HTTPS</a>\n```\nkeytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650\n```\n\napplication.properties\n```\nserver.port=80\n#SSL https证书配置\nserver.ssl.key-store=keystore.p12\nserver.ssl.key-store-password=123456\n#行业标准PKCS12\nserver.ssl.key-store-type=PKCS12\nserver.ssl.key-alias=tomcat\n```\n\n```\nserver:\n  port: 80\n  tomcat:\n    uri-encoding: UTF-8\n  servlet:\n    context-path: /\n#  https\n  ssl:\n    key-store: classpath:https/keystore.p12\n    key-store-password: <password>\n    keyStoreType: PKCS12\n    key-alias: tomcat\n```\n\n\nwindows docker nginx\n```\ndocker run --name mynginx -it -p 9080:80 -d nginx\n```\n\n<a href=\"https://www.cnblogs.com/silentdoer/p/9102119.html\" target=\"_blank\">利用JDK自带的keytool生成SSL证书然后导入到SpringBoot</a>\n```\nBad Request\nThis combination of host and port requires TLS.\n```\n```\nkeytool -genkey -alias tomcat -keypass 12345678 -keyalg RSA -keysize 2048 -validity 365 -keystore ./tomcat.keystore -storepass 12345678\n```\n\n<a href=\"https://blog.csdn.net/t6546545/article/details/80508554\" target=\"_blank\">服务器配置https协议，三种免费的方法</a>\n<a href=\"https://blog.csdn.net/mybelief321/article/details/54429314\" target=\"_blank\">微信小程序免费HTTPS证书申请搭建教程（1）---申请SSL</a>\n<a href=\"https://www.cnblogs.com/tianhei/p/7726505.html\" target=\"_blank\">nginx配置ssl证书实现https访问</a>\n\n<a href=\"https://www.cnblogs.com/luohero/p/8064049.html\" target=\"_blank\">(成功)搭建Nginx+Java环境(转)</a>\n```\n{\n    upstream tomcat {\n       server  127.0.0.1:9020 weight=10;\n    }\n    # HTTPS server\n    #\n    server {\n        listen       443 ssl;\n        server_name  localhost;\n        #server_name  tourtest.d-chip.com;\n\n        ssl_certificate      cert/2031699_tourtest.d-chip.com.pem;\n        ssl_certificate_key  cert/2031699_tourtest.d-chip.com.key;\n\n        ssl_session_cache    shared:SSL:1m;\n        ssl_session_timeout  5m;\n\n        ssl_ciphers  HIGH:!aNULL:!MD5;\n        ssl_prefer_server_ciphers  on;\n\n        #location / {\n        #    root   html;\n        #    index  index.html index.htm;\n        #}\n\n        location / {\n            include uwsgi_params;\n            proxy_pass http://183.63.8.250:9020/;\n            proxy_set_header Host $host:$server_port;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header REMOTE-HOST $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            client_max_body_size    2000m;\n        }\n    }\n}\n```","tags":["springboot"]},{"title":"[springboot] spring-security","url":"/2019/04/20//articles/2019/04/20/1555759242000.html/","content":"<a href=\"http://www.forever24.cn/archives/457\" target=\"_blank\">spring-security</a>\n\n","tags":["springboot"]},{"title":"[springboot] swagger传递对象类型参数","url":"/2019/04/20//articles/2019/04/20/1555759241000.html/","content":"<a href=\"https://blog.csdn.net/zhu7727926/article/details/79110381\" target=\"_blank\">swagger与spring进行对象传递</a>\n\ncontroller\n```\n@RequestMapping(value = \"/insertVideo\", method = RequestMethod.POST)\n@ResponseBody\n@ApiOperation(httpMethod = \"POST\",value = \"上传视屏接口\", notes = \"上传视屏\")\npublic Result<Integer> insertVideo( @RequestBody Dto dto ) {\n\tResult<Integer> result = Result.<Integer>getSucceedInstance();\n\treturn result;\n}\n```\n\n<a href=\"https://www.cnblogs.com/raphael5200/p/7264453.html\" target=\"_blank\">Swagger UI 传入对象类型参数</a>\n\n","tags":["springboot"]},{"title":"[springboot] 国际化","url":"/2019/04/20//articles/2019/04/20/1555759240000.html/","content":"<a href=\"https://www.cnblogs.com/GoodHelper/p/6824492.html\" target=\"_blank\">玩转spring boot - 国际化</a>\n\nresources/i18n文件夹\n```\nresources/i18n/login.properties\nresources/i18n/login_en_US.properties\nresources/i18n/login_zh_CN.properties\n```\n\nconfig/LocaleConfig.java\n```\nimport java.util.Locale;\n\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.LocaleResolver;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\nimport org.springframework.web.servlet.i18n.LocaleChangeInterceptor;\nimport org.springframework.web.servlet.i18n.SessionLocaleResolver;\n\n@Configuration\n@EnableAutoConfiguration\n@ComponentScan\npublic class LocaleConfig extends WebMvcConfigurerAdapter {\n\n    @Bean\n    public LocaleResolver localeResolver() {\n        SessionLocaleResolver slr = new SessionLocaleResolver();\n        // 由默认properties解决，这里代码还是决定不了默认语言\n        slr.setDefaultLocale(Locale.CHINA);\n        return slr;\n    }\n\n    @Bean\n    public LocaleChangeInterceptor localeChangeInterceptor() {\n        LocaleChangeInterceptor lci = new LocaleChangeInterceptor();\n        // 参数名\n        lci.setParamName(\"lang\");\n        return lci;\n    }\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(localeChangeInterceptor());\n    }\n}\n```\n\n```\n<!DOCTYPE html>\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n\t<meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n</head>\n<body>\n    <a href=\"/?lang=en_US\">English(US)</a>\n    <a href=\"/?lang=zh_CN\">简体中文</a>\n</body>\n</html>\n```","tags":["springboot"]},{"title":"[swagger] 指定请求方式","url":"/2019/04/20//articles/2019/04/20/1555759239000.html/","content":"指定请求方式\n(1)通过 @ApiOperation(httpMethod) 指定\n```\n@ApiOperation(httpMethod = \"GET\",value = \"接口说明\", notes = \"注意说明\")\n@ApiOperation(httpMethod = \"POST\",value = \"接口说明\", notes = \"注意说明\")\n@ApiOperation(httpMethod = \"PUT\",value = \"接口说明\", notes = \"注意说明\")\n@ApiOperation(httpMethod = \"DELETE\",value = \"接口说明\", notes = \"注意说明\")\n```\n(2)通过 mapping 指定\n```\n@GetMapping()\n@PostMapping()\n```\n","tags":["swagger"]},{"title":"[前端] js判断字符是否存在于某个字符串中","url":"/2019/04/20//articles/2019/04/20/1555759238000.html/","content":"js判断字符是否存在于某个字符串中\n```\nvar str = \"\";\nconsole.log(str.indexOf(i));\n\nindexOf返回值：\n表示不存在\n-1\n\n从0开始，代表i出现的位置\n>-1\n```\n","tags":["前端"]},{"title":"[js] 实现中英文切换","url":"/2019/04/20//articles/2019/04/20/1555759236000.html/","content":"注意:要使用\n```\n<script src=\"http://libs.baidu.com/jquery/2.0.0/jquery.min.js\"></script>\n```\n<a href=\"http://www.kf51.cn/News/WangZhanZhiShi/201901/2019011567058455591710.shtml\" target=\"_blank\">jQuery实现页面中英文自动翻译显示功能</a>\n<a href=\"https://www.cnblogs.com/marksir/p/9907870.html\" target=\"_blank\">前端中英文互译</a>\n<a href=\"https://blog.csdn.net/weixin_40687883/article/details/81451385\" target=\"_blank\">js实现中英文切换</a>\n","tags":["js"]},{"title":"[springboot] 报错集合","url":"/2019/04/20//articles/2019/04/20/1555759235000.html/","content":"<a href=\"https://blog.csdn.net/taiyangdao/article/details/79984304\" target=\"_blank\">Unable to start ServletWebServerApplicationContext due to missing ServletWebServerFactory bean异常解析</a>\n```\nSpring Boot升级到2.0.1，启动应用报错如下：\nUnable to start ServletWebServerApplicationContext due to missing ServletWebServerFactory bean\n\nSpring Boot应用起不来是因为默认使用的嵌入式Tomcat容器无法启动。\n解决办法：\n删除Maven本地库中有错的tomcat-embed-core，再次构建下载新的tomcat-embed-core\n```\n参考连接：\n<a href=\"https://stackoverflow.com/search?q=Unable+to+start+EmbeddedWebApplicationContext+due+to+missing+EmbeddedServletContainerFactory+bean\" target=\"_blank\">1. Unable+to start EmbeddedWebApplicationContext due to missing EmbeddedServletContainerFactory+bean</a>\n<a href=\"https://stackoverflow.com/search?q=Unable+to+start+ServletWebServerApplicationContext+due+to+missing+ServletWebServerFactory+bean\" target=\"_blank\">2. Unable to start ServletWebServerApplicationContext due+to+missing ServletWebServerFactory bean</a>\n\n\n<a href=\"https://blog.csdn.net/maoyuanming0806/article/details/80156644\" target=\"_blank\">SpringBoot：默认tomcat版本启动失败解决</a>\norg.springframework.boot.web.embedded.tomcat.ConnectorStartFailedException:\n```\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <maven.compiler.source>1.7</maven.compiler.source>\n    <maven.compiler.target>1.7</maven.compiler.target>\n    <tomcat.version>7.0.86</tomcat.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.tomcat</groupId>\n      <artifactId>tomcat-juli</artifactId>\n      <version>${tomcat.version}</version>\n    </dependency>\n  </dependencies>\n```","tags":["springboot"]},{"title":"[springboot] druid数据源+监控","url":"/2019/04/20//articles/2019/04/20/1555759234000.html/","content":"<a href=\"https://blog.csdn.net/try_try_try/article/details/80569191\" target=\"_blank\">SpringBoot数据访问 - Druid数据源（添加监控）</a>\n\n\n","tags":["springboot"]},{"title":"[springboot] 配置网页语言国际化","url":"/2019/04/20//articles/2019/04/20/1555759233000.html/","content":"<a href=\"https://blog.csdn.net/IndexMan/article/details/86355408\" target=\"_blank\">spring boot中配置网页语言国际化</a>\n<a href=\"https://gitee.com/indexman/spring_boot_in_action\" target=\"_blank\">gitee地址</a>\n\n","tags":["springboot"]},{"title":"[springcloud] querydsl+layui","url":"/2019/04/20//articles/2019/04/20/1555759232000.html/","tags":["springboot"]},{"title":"[springboot] layui后台管理系统","url":"/2019/04/20//articles/2019/04/20/1555759231000.html/","content":"<a href=\"https://www.jianshu.com/p/b1f8431c5f0f\" target=\"_blank\">layui后台管理系统</a>\n<a href=\"https://github.com/Radom7/springboot-layui\" target=\"_blank\">github | springboot-layui</a>\n\n","tags":["springboot"]},{"title":"[springboot] vue","url":"/2019/04/20//articles/2019/04/20/1555759230000.html/","content":"<a href=\"http://www.forever24.cn/archives/512\" target=\"_blank\">springboot与vue集成</a>\n","tags":["springboot"]},{"title":"[springboot] 工程内配置https","url":"/2019/04/20//articles/2019/04/20/1555759229000.html/","content":"<a href=\"https://www.jianshu.com/p/8d4aba3b972d\" target=\"_blank\">SpringBoot配置HTTPS,并实现HTTP访问自动转HTTPS访问</a>\n\n```\nkeytool -genkey -alias tomcat -keyalg RSA -keystore ./server.keystore \n```\n\n```\nserver:\n  port: 443\n  tomcat:\n    uri-encoding: UTF-8\n  servlet:\n    context-path: /\n  #https\n  ssl:\n    enabled: true\n    key-store: classpath:file.key\n    key-store-password: 你的密码\n    key-store-type: JKS\n\nserver.port=443\nserver.ssl.enabled=true\nserver.ssl.key-store=server.keystore\nserver.ssl.key-alias=tomcat\nserver.ssl.key-store-password=123456\nserver.ssl.key-store-type=JKS\n```","tags":["springboot"]},{"title":"[springboot] 配置监听器、过滤器和拦截器","url":"/2019/04/20//articles/2019/04/20/1555759228000.html/","content":"<a href=\"https://www.cnblogs.com/hhhshct/p/8808115.html\" target=\"_blank\">springboot配置监听器、过滤器和拦截器</a>","tags":["springboot"]},{"title":"[springboot] 获取当前语言环境","url":"/2019/04/20//articles/2019/04/20/1555759227000.html/","content":"<a href=\"https://www.cnblogs.com/huanzi-qch/p/10000324.html\" target=\"_blank\">js读取i18n</a>\n\n一、MessageSource获取国际化信息：\n```\n@Autowired\nprivate org.springframework.context.MessageSource messageSource;\n\nString msg = messageSource.getMessage(\"welcome\", null,locale);\nString msg2= messageSource.getMessage(\"welcome\", null,locale1);\n\n\nLocale locale = LocaleContextHolder.getLocale();\n//或\nLocale locale1= RequestContextUtils.getLocale(request);\n```\n\n二、自定义MessageSource获取国际化信息：\n```\nimport java.util.Locale;\nimport javax.annotation.Resource;\nimport org.springframework.context.MessageSource;\nimport org.springframework.context.i18n.LocaleContextHolder;\nimport org.springframework.stereotype.Component;\n\n\n@Component\npublic class LocaleMessageSourceService {\n    @Resource\n    private MessageSource messageSource;\n\n    /**\n     * @param code ：对应messages配置的key.\n     * @return\n     */\n\n    public String getMessage(String code){\n       return getMessage(code,null);\n    }\n\n\n    /**\n     *\n     * @param code ：对应messages配置的key.\n     * @param args : 数组参数.\n     * @return\n     */\n    public String getMessage(String code,Object[] args){\n       return getMessage(code, args,\"\");\n    }\n\n    /**\n     *\n     * @param code ：对应messages配置的key.\n     * @param args : 数组参数.\n     * @param defaultMessage : 没有设置key的时候的默认值.\n     * @return\n     */\n    public String getMessage(String code,Object[] args,String defaultMessage){\n       //这里使用比较方便的方法，不依赖request.\n       Locale locale = LocaleContextHolder.getLocale();\n       return messageSource.getMessage(code, args, defaultMessage, locale);\n    }\n\n}\n```\n\n注入和使用自定义MessageSource：\n```\n@Resource\nprivate LocaleMessageSourceService localeMessageSourceService;\n\nString msg3 = localeMessageSourceService.getMessage(\"welcome\");\n```","tags":["springboot"]},{"title":"[nginx] 部署多个springboot项目","url":"/2019/04/20//articles/2019/04/20/1555759226000.html/","content":"<a href=\"https://blog.csdn.net/u014174854/article/details/80464391\" target=\"_blank\">Nginx部署多个spring-boot项目(jar方式部署)</a>","tags":["nginx"]},{"title":"[小程序] 文本超出自动缩小字体","url":"/2019/04/20//articles/2019/04/20/1555758315000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\n小程序的默认字体大小:\n18.79px\n```\nhtml文本超出自动缩小字体\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>测试</title>\n</head>\n<body>\n    <!--我还是很萌响应式的-->\n\t<div id=\"box\">\n\t  <p id=\"css\">喵喵喵喵喵喵喵喵喵喵</p>\n\t</div>\n</body>\n<script>\n\tvar box = document.getElementById('box');\n\tvar box = box.innerText;  //获取 div box里面的所有字\n\tvar cat = box.length;   //转换为字数\n\t \n\tif(cat >= 10)  //如果box里面字数大于或者等于10\n\t{\n\tdocument.getElementById(\"css\").style.fontSize=40+'px';\n\t//如果大于10个字 字体大小为40px\n\t}\n\telse{\n\t//否则为80px大小\n\tdocument.getElementById(\"css\").style.fontSize=80+'px';\n\t}\n</script>\n</html>\n```\n\n<a href=\"https://www.cnblogs.com/Alexin/p/3582240.html\" target=\"_blank\">html/css实现文字自动换行，超出部分出现(...)</a>\n一行文字\n```\n#当有一行文字的时候，如果想让超出部分出现（…），可以这样写：\n.wrap{\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 118px;\n}\n```\n多行文字\n```\n#当有多行文字的时候，可以这样写:\n.wrap{\n  width:220px;\n  height: 72px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-break: break-all;\n}\n```\n","tags":["小程序"]},{"title":"[小程序] wxs时间格式化","url":"/2019/04/20//articles/2019/04/20/1555758314000.html/","content":"<a href=\"https://blog.csdn.net/jiandan1127/article/details/88737432\" target=\"_blank\">微信小程序 wxs 配置工具函数(时间格式化)</a>\n```\nvar formatNumber = function (n) {\n  n = n.toString()\n  return n[1] ? n : '0' + n\n}\n \nvar regYear = getRegExp(\"(y+)\", \"i\");\n \nvar dateFormat = function (timestamp, format) {\n  if (!format) {\n    format = \"yyyy-MM-dd hh:mm:ss\";\n  }\n  timestamp = parseInt(timestamp);\n  var realDate = getDate(timestamp);\n  function timeFormat(num) {\n    return num < 10 ? '0' + num : num;\n  }\n  var date = [\n    [\"M+\", timeFormat(realDate.getMonth() + 1)],\n    [\"d+\", timeFormat(realDate.getDate())],\n    [\"h+\", timeFormat(realDate.getHours())],\n    [\"m+\", timeFormat(realDate.getMinutes())],\n    [\"s+\", timeFormat(realDate.getSeconds())],\n    [\"q+\", Math.floor((realDate.getMonth() + 3) / 3)],\n    [\"S+\", realDate.getMilliseconds()],\n  ];\n  var reg1 = regYear.exec(format);\n  // console.log(reg1[0]);\n  if (reg1) {\n \n    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));\n  }\n  for (var i = 0; i < date.length; i++) {\n    var k = date[i][0];\n    var v = date[i][1];\n \n    var reg2 = getRegExp(\"(\" + k + \")\").exec(format);\n    if (reg2) {\n      format = format.replace(reg2[1], reg2[1].length == 1\n        ? v : (\"00\" + v).substring((\"\" + v).length));\n    }\n  }\n  return format;\n}\n \n \nmodule.exports = {\n  dateFormat: dateFormat\n};\n\n```","tags":["小程序"]},{"title":"[小程序] 计算倒计时时分秒","url":"/2019/04/20//articles/2019/04/20/1555758313000.html/","content":"<a href=\"http://www.xiaoshu168.com/wxapplet/226.html\" target=\"_blank\">计算倒计时时分秒</a>\n```\nvar formatNumber = function(n) {\n  n = n.toString()\n  return n[1] ? n : '0' + n\n}\n\nvar dateFormat = function(date) {\n\n  var year = date.getFullYear()\n  var month = date.getMonth() + 1\n  var day = date.getDate()\n\n  var hour = date.getHours()\n  var minute = date.getMinutes()\n  var second = date.getSeconds()\n\n  return [year, month, day].map(formatNumber).join('-');\n}\n\nfunction formatTime(date) {\n  if (!!date) {\n    if (!(date instanceof Date))\n      date = new Date(date);\n    var month = date.getMonth() + 1\n    var day = date.getDate()\n    return `${month}月${day}日`;\n  }\n}\n\nfunction formatDay(date) {\n  if (!!date) {\n    var year = date.getFullYear()\n    var month = date.getMonth() + 1\n    var day = date.getDate()\n    return [year, month, day].map(formatNumber).join('-');\n  }\n}\n\nfunction formatDay2(date) {\n  if (!!date) {\n    var year = date.getFullYear()\n    var month = date.getMonth() + 1\n    var day = date.getDate()\n    return [year, month, day].map(formatNumber).join('/');\n  }\n}\n\nfunction formatWeek(date) {\n  if (!!date) {\n    var day = date.getDay();\n    switch (day) {\n      case 0:\n        return '周日'\n        break;\n      case 1:\n        return '周一'\n        break;\n      case 2:\n        return '周二'\n        break;\n      case 3:\n        return '周三'\n        break;\n      case 4:\n        return '周四'\n        break;\n      case 5:\n        return '周五'\n        break;\n      case 6:\n        return '周六'\n        break;\n    }\n  }\n}\n\nfunction formatHour(date) {\n  if (!!date) {\n    var hour = new Date(date).getHours();\n    var minute = new Date(date).getMinutes();\n    return [hour, minute].map(formatNumber).join(':');\n  }\n}\n\nfunction timestamp(date, divisor = 1000) {\n  if (date == undefined) {\n    return;\n  } else if (typeof date == 'number') {\n    return Math.floor(date / divisor);\n  } else if (typeof date == 'string') {\n    var strs = date.split(/[^0-9]/);\n    return Math.floor(+new Date(strs[0] || 0, (strs[1] || 0) - 1, strs[2] || 0, strs[3] || 0, strs[4] || 0, strs[5] || 0) / divisor);\n  } else if (Date.prototype.isPrototypeOf(date)) {\n    return Math.floor(+date / divisor);\n  }\n}\n\nfunction detimestamp(date) {\n  if (!!date) {\n    return new Date(date * 1000);\n  }\n}\n\nfunction dateDiff(startDate, endDate) {\n  var start_date = new Date(startDate.replace(/-/g, \"/\"));\n  var end_date = new Date(endDate.replace(/-/g, \"/\"));\n\n  console.log(start_date);\n  console.log(end_date);\n\n  //时间差的毫秒数\n  var dateDiff = end_date.getTime() - start_date.getTime();\n  //计算出相差天数\n  var dayDiff = Math.floor(dateDiff / (24 * 3600 * 1000));\n\n  //计算天数后剩余的毫秒数\n  var leave1 = dateDiff % (24 * 3600 * 1000);\n\n  //计算出小时数\n  var hours = Math.floor(leave1 / (3600 * 1000));\n\n\n  //计算相差分钟数\n  //计算小时数后剩余的毫秒数\n  var leave2 = leave1 % (3600 * 1000)\n  //计算相差分钟数\n  var minutes = Math.floor(leave2 / (60 * 1000));\n\n\n  //计算相差秒数\n  var leave3 = leave2 % (60 * 1000) //计算分钟数后剩余的毫秒数\n  var seconds = Math.round(leave3 / 1000)\n\n  return dayDiff;\n}\n\nmodule.exports = {\n  formatTime: formatTime,\n  formatDay: formatDay,\n  formatDay2: formatDay2,\n  formatHour: formatHour,\n  formatWeek: formatWeek,\n  timestamp: timestamp,\n  detimestamp: detimestamp,\n  dateFormat: dateFormat,\n  dateDiff: dateDiff\n}\n```","tags":["小程序"]},{"title":"[小程序] 计算倒计时时分秒","url":"/2019/04/20//articles/2019/04/20/1555758312000.html/","content":"<a href=\"http://www.xiaoshu168.com/wxapplet/226.html\" target=\"_blank\">计算倒计时时分秒</a>\n```\nvar timestamp = Date.parse(new Date());\nvar totime = 过期的时间秒;\n//当前时间撮\ntimestamp = timestamp / 1000;\nvar surplus = totime - timestamp;\nif ( surplus < 0 ) {\n   var maxtime = surplus;\n   var second = Math.floor(maxtime % 60);       //计算秒\n   var minite = Math.floor((maxtime / 60) % 60); //计算分\n   var hour = Math.floor((maxtime / 3600) % 24); //计算小时\n   var day = Math.floor((maxtime / 3600) / 24);\n   //计算相差秒数  \n   console.log(day + '天' + hour + \"小时 \" + minite + \" 分钟\" + second + '秒');\n}\n```","tags":["小程序"]},{"title":"[小程序] 字符串处理","url":"/2019/04/20//articles/2019/04/20/1555758311000.html/","content":"<a href=\"https://blog.csdn.net/u013750239/article/details/81025628\" target=\"_blank\">微信小程序JS字符串操作方法汇总</a>\n```\nJS对字符串进行切割截取\n\n1.函数：split()\n\n功能：使用一个指定的分隔符把一个字符串分割存储到数组\n\n例子： str=\"jpg|bmp|gif|ico|png\"; arr=str.split(\"|\");\n\n//arr是一个包含字符值\"jpg\"、\"bmp\"、\"gif\"、\"ico\"和\"png\"的数组\n\n2.函数：join()\n\n功能：使用您选择的分隔符将一个数组合并为一个字符串\n\n例子： var delimitedString=myArray.join(delimiter);\n\nvar myList=new Array(\"jpg\",\"bmp\",\"gif\",\"ico\",\"png\");\n\nvar portableList=myList.join(\"|\");\n\n//结果是jpg|bmp|gif|ico|png\n\n3.函数:concat（）\n\n功能：将两个数组连接在一起；\n\n例子：arr1=[1,2,3,4]\n\n　　arr2=[5,6,7,8]\n\n　　alert(arr1.concat(arr2))  //结果为[1,2,3,4,5,6,7,8]\n\n4.函数:charAt()\n\n功能：返回指定位置的字符。字符串中第一个字符的下标是 0。如果参数 index 不在 0 与 string.length 之间，该方法将返回一个空字符串。\n\n例子:var str='a,g,i,d,o,v,w,d,k,p'\n\nalert(str.charAt(2))  //结果为g\n\n5:函数:charCodeAt()\n\n功能：charCodeAt() 方法可返回指定位置的字符的 Unicode 编码。这个返回值是 0 - 65535 之间的整数。\n\n方法 charCodeAt() 与 charAt() 方法执行的操作相似，只不过前者返回的是位于指定位置的字符的编码，而后者返回的是字符子串。\n\n例子：var str='a,g,i,d,o,v,w,d,k,p'\n\nalert(str.charCodeAt(2))  //结果为103。即g的Unicode编码为103\n\n6.函数:slice(）\n\n功能：arrayObject.slice(start,end)\n\n　　start:必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。\n\n　　end:可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。\n\n　　返回一个新的数组，包含从start到end（不包括该元素）的arrayobject中的元素。\n\n例子：var str='ahji3o3s4e6p8a0sdewqdasj'\n\n　　alert(str.slice(2,5))   //结果ji3\n\n7.函数:substring()\n\n定义和用法 substring 方法用于提取字符串中介于两个指定下标之间的字符。\n\n语法 stringObject.substring(start,stop)\n\nstart 必需。一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。\n\nstop 可选。一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。\n\n如果省略该参数，那么返回的子串会一直到字符串的结尾。\n\n返回 一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。 说明 substring 方法返回的子串包括 start 处的字符，但不包括 end 处的字符。 如果 start 与 end 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。 如果 start 比 end 大，那么该方法在提取子串之前会先交换这两个参数。 如果 start 或 end 为负数，那么它将被替换为 0。\n\n例子:var str='ahji3o3s4e6p8a0sdewqdasj'\n\nalert(str.substring(2,6))   //结果为ji3o3\n\n8.函数:substr\n\n定义和用法 substr 方法用于返回一个从指定位置开始的指定长度的子字符串。\n\n语法 stringObject.substr(start [, length ])\n\n参数  start 必需。所需的子字符串的起始位置。字符串中的第一个字符的索引为 0。\n\n　　 length 可选。在返回的子字符串中应包括的字符个数。 说明 如果 length 为 0 或负数，将返回一个空字符串。 如果没有指定该参数，则子字符串将延续到stringObject的最后。\n\n举例： var str = \"0123456789\";\n\n　　 alert(str.substring(0));------------\"0123456789\"\n\n　　 alert(str.substring(5));------------\"56789\"\n\n　　alert(str.substring(10));-----------\"\"\n\n　　alert(str.substring(12));-----------\"\"\n\n　　alert(str.substring(-5));-----------\"0123456789\"\n\n　　alert(str.substring(-10));----------\"0123456789\"\n\n　　alert(str.substring(-12));----------\"0123456789\"\n\n　　alert(str.substring(0,5));----------\"01234\"\n\n　　alert(str.substring(0,10));---------\"0123456789\"\n\n　　alert(str.substring(0,12));---------\"0123456789\"\n\n　　alert(str.substring(2,0));----------\"01\"\n\n　　alert(str.substring(2,2));----------\"\"\n\n　　alert(str.substring(2,5));----------\"234\"\n\n　　alert(str.substring(2,12));---------\"23456789\"\n\n　　alert(str.substring(2,-2));---------\"01\"\n\n　　alert(str.substring(-1,5));---------\"01234\"\n　　alert(str.substring(-1,-5));--------\"\"\n\njs删除字符串的最后一个字符三种方法\n\nvar basic = \"abc,def,ghi,\";  \n\n第一种\nbasic = basic.substr(0, basic.length - 1);  \n\n第二种\nbasic = basic.substring(0, basic.length - 1);  \n\n第三种\nbasic = basic.substring(0, basic.lastIndexOf(','));\n\n```","tags":["小程序"]},{"title":"[小程序] 小程序+java后台文件上传","url":"/2019/04/20//articles/2019/04/20/1555758310000.html/","content":"<a href=\"https://blog.csdn.net/qq_41417335/article/details/86631008\" target=\"_blank\">后台（java）接收前台文件上传，微信小程序文件上传</a>\n```\n    wx.uploadFile({\n      url: config.submitCommentUrl, //后台接口\n      header: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      filePath: files[0], //文件路径\n      formData: {\n        'orderId': 1,\n        'userId': 1,\n        'comments': comments,\n        'star': star,\n        'phone': phone,\n        'files': files\n      },\n      name: 'files', //文件名\n      success(res) {\n        console.log(res.data);\n        wx.navigateBack({\n          delta: 1\n        });\n      }\n    });\n```\n<a href=\"https://github.com/LeoMelody/jianshu/blob/master/smallDemo/upload/upload.js\" target=\"_blank\">github|upload.js</a>\n<a href=\"https://blog.csdn.net/wa172126691/article/details/82985427\" target=\"_blank\">多文件上传</a>\n\n","tags":["小程序"]},{"title":"[小程序] 手动打开地理位置授权","url":"/2019/04/20//articles/2019/04/20/1555758309000.html/","content":"<a href=\"https://www.jianshu.com/p/e232c3c9af37\" target=\"_blank\">简书|获取位置信息</a>\n<a href=\"https://www.cnblogs.com/cckui/p/10002435.html\" target=\"_blank\">地理位置授权wx.getLocation</a>\n<a href=\"https://blog.csdn.net/maria028/article/details/82804955\" target=\"_blank\">open-type</a>\n<a href=\"https://blog.csdn.net/qiushi_1990/article/details/87822772\" target=\"_blank\">弹出用户授权弹窗，微信小程序引导用户授权，获取位置经纬度</a>\ngps.js\n```\nPage({\n getLocation() {\n  this.checkLocation();\n\n  let that = this;\n  wx.chooseLocation({\n   success: function(res) {\n    var latitude = res.latitude\n    var longitude = res.longitude;\n    that.setData({\n     address: \"经纬度：\" + longitude + \", \" + latitude,\n    })\n   }\n  });\n },\n //校验位置权限是否打开\n checkLocation() {\n  let that = this;\n  //选择位置，需要用户授权\n  wx.getSetting({\n   success(res) {\n    if (!res.authSetting['scope.userLocation']) {\n     wx.authorize({\n      scope: 'scope.userLocation',\n      success() {\n       wx.showToast({ //这里提示失败原因\n        title: '授权成功！',\n        duration: 1500\n       })\n      },\n      fail() {\n       that.showSettingToast('需要授权位置信息');\n      }\n     })\n    }\n   }\n  })\n },\n // 打开权限设置页提示框\n showSettingToast: function (e) {\n  wx.showModal({\n   title: '提示！',\n   confirmText: '去设置',\n   showCancel: false,\n   content: e,\n   success: function (res) {\n    if (res.confirm) {\n     wx.navigateTo({\n      url: '../setting/setting',\n     })\n    }\n   }\n  })\n },\n});\n```\n\napp.json\n```\n{\n \"pages\": [\n  \"pages/index/index\",\n  \"pages/setting/setting\"\n ],\n \"window\": {\n  \"backgroundTextStyle\": \"light\",\n  \"navigationBarBackgroundColor\": \"#fff\",\n  \"navigationBarTitleText\": \"WeChat\",\n  \"navigationBarTextStyle\": \"black\"\n },\n \"permission\": {\n  \"scope.userLocation\": {\n   \"desc\": \"你的位置信息将用于小程序位置接口的效果展示\"\n  }\n }\n}\n```\n\n","tags":["小程序"]},{"title":"[小程序] image+mode","url":"/2019/04/20//articles/2019/04/20/1555758308000.html/","content":"<a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/image.html\" target=\"_blank\">官方 | image+mode</a>\n```\n#不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素\nscaleToFill\n#保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。\naspectFit\n```\n\n<a href=\"https://www.cnblogs.com/lovebing/p/8514428.html\" target=\"_blank\">小程序image的13种mode</a>\n<a href=\"https://blog.csdn.net/qq_2842405070/article/details/69382503\" target=\"_blank\">微信小程序 image组件的mode属性 以及 图片出现横向滚动轴</a>\n","tags":["小程序"]},{"title":"[css] 让超出的内容显示为省略号","url":"/2019/04/20//articles/2019/01/02/1555745571000.html/","content":"<a href=\"https://blog.csdn.net/web_callback/article/details/70233759\" target=\"_blank\">html实现让超出的内容显示为省略号</a>\n```\n<style type=\"text/css\">\n\tp{\n\t\twidth:10em;/*保证文字不会被半汉字截断,显示10个文字*/\n\t\toverflow:hidden;/*超出长度的文字隐藏*/\n\t\ttext-overflow:ellipsis;/*文字隐藏以后添加省略号*/\n\t\twhite-space:nowrap;/*强制不换行*/\n\t}\n</style>\n```","tags":["css"]},{"title":"[小程序] 发起支付","url":"/2019/04/20//articles/2019/04/20/1555732655000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/search?l=Java&q=%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98&type=Repositories\" target=\"_blank\">github搜索\"小程序支付\"</a>\n<a href=\"https://github.com/e7no/huihui\" target=\"_blank\">github | 汇汇生活</a>\n<a href=\"https://github.com/jwcqc/WechatPayDemo\" target=\"_blank\">spring小程序后台支付 WechatPayDemo</a>\n\n<a href=\"https://gitee.com/dotton/lendoo-wx\" target=\"_blank\">github | lendoo-wx</a>\n<a href=\"https://gitee.com/laeser/lendoo-web\" target=\"_blank\">github | nodejs后台</a>\n\n<a href=\"https://blog.csdn.net/yinlell/article/details/84666428\" target=\"_blank\">springboot+小程序支付</a>\n\n<a href=\"https://github.com/GZWgssmart/Teaching/blob/master/%E5%BE%AE%E4%BF%A1/%E5%A5%B6%E8%8C%B6/teamall/payment.txt\" target=\"_blank\">GZWgssmart</a>\n\n官方\n<a href=\"http://www.manongjc.com/article/28970.html\" target=\"_blank\">springboot+小程序</a>\n<a href=\"https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=11_1\" target=\"_blank\">1.下载微信官方的SDK</a>\n2.将以下文件拷到你的项目中\n```\npackage com.***.utils.wx;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.InputStream;\n\n/**\n * @Description: 微信支付配置类\n * @Author: hm\n * @CreateDate: 2018/12/10 17:19.\n * @UpdateDate: 2018/12/10 17:19.\n * @Version: 1.0\n */\npublic class MyConfig extends WXPayConfig {\n\n    private byte[] certData;\n    public MyConfig() throws Exception {\n//        String certPath = \"classpath:apiclient_cert.p12\";\n//        File file = new File(certPath);\n//        InputStream certStream = new FileInputStream(file);\n//        this.certData = new byte[(int) file.length()];\n//        certStream.read(this.certData);\n//        certStream.close();\n    }\n\n    @Override\n    public String getAppID() {\n        return \"你的appid\";\n    }\n\n    @Override\n    public String getMchID() {\n        return \"你的商户id\";\n    }\n\n    @Override\n    public String getKey() {\n        return \"你的商户api安全key，在商户平台api安全目录下可设置\";\n    }\n\n    @Override\n    public InputStream getCertStream() {\n        ByteArrayInputStream certBis = new ByteArrayInputStream(this.certData);\n        return certBis;\n    }\n\n    @Override\n    public int getHttpConnectTimeoutMs() {\n        return 8000;\n    }\n\n    @Override\n    public int getHttpReadTimeoutMs() {\n        return 10000;\n    }\n\n    @Override\n    IWXPayDomain getWXPayDomain() {\n        return new IWXPayDomain() {\n            @Override\n            public void report(String domain, long elapsedTimeMillis, Exception ex) {\n            }\n\n            @Override\n            public DomainInfo getDomain(WXPayConfig config) {\n                return new DomainInfo(\"api.mch.weixin.qq.com\", false);\n            }\n        };\n    }\n}\n```\n\n```\n4.java后台的调用统一下单接口类\n\n/**\n     * 微信统一下单接口\n     * @return\n     */\n    @RequestMapping(value = \"/doUnifiedOrder\", method = RequestMethod.POST)\n    public BaseResponse<Map> doUnifiedOrder(@RequestBody BaesRequest<LicensePlate> baseRequest) {\n        BaseResponse<Map> response = new BaseResponse<>();\n        Map resultMap=new HashMap();\n        String openid = baseRequest.getRequestData().getOpenId();\n        MyConfig config = null;\n        WXPay wxpay =null;\n        try {\n            config = new MyConfig();\n            wxpay= new WXPay(config);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        //生成的随机字符串\n        String nonce_str = WXPayUtil.generateNonceStr();\n        //获取客户端的ip地址\n        //获取本机的ip地址\n        InetAddress addr = null;\n        try {\n            addr = InetAddress.getLocalHost();\n        } catch (UnknownHostException e) {\n            e.printStackTrace();\n        }\n        String spbill_create_ip = addr.getHostAddress();\n        //支付金额，需要转成字符串类型，否则后面的签名会失败\n        int  total_fee=1;\n        //商品描述\n        String body = \"车费支付\";\n        //商户订单号\n        String out_trade_no= WXPayUtil.generateNonceStr();\n        //统一下单接口参数\n        HashMap<String, String> data = new HashMap<String, String>();\n        data.put(\"appid\", appid);\n        data.put(\"mch_id\", mch_id);\n        data.put(\"nonce_str\", nonce_str);\n        data.put(\"body\", body);\n        data.put(\"out_trade_no\",out_trade_no);\n        data.put(\"total_fee\", String.valueOf(total_fee));\n        data.put(\"spbill_create_ip\", spbill_create_ip);\n        data.put(\"notify_url\", notify_url);\n        data.put(\"trade_type\",TRADETYPE);\n        data.put(\"openid\", openid);\n        try {\n            Map<String, String> rMap = wxpay.unifiedOrder(data);\n            System.out.println(\"统一下单接口返回: \" + rMap);\n            String return_code = (String) rMap.get(\"return_code\");\n            String result_code = (String) rMap.get(\"result_code\");\n            String nonceStr = WXPayUtil.generateNonceStr();\n            resultMap.put(\"nonceStr\", nonceStr);\n            Long timeStamp = System.currentTimeMillis() / 1000;\n            if (\"SUCCESS\".equals(return_code) && return_code.equals(result_code)) {\n                String prepayid = rMap.get(\"prepay_id\");\n                resultMap.put(\"package\", \"prepay_id=\"+prepayid);\n                resultMap.put(\"signType\", \"MD5\");\n                //这边要将返回的时间戳转化成字符串，不然小程序端调用wx.requestPayment方法会报签名错误\n                resultMap.put(\"timeStamp\", timeStamp + \"\");\n                //再次签名，这个签名用于小程序端调用wx.requesetPayment方法\n                resultMap.put(\"appId\",appid);\n                String sign = WXPayUtil.generateSignature(resultMap, key);\n                resultMap.put(\"paySign\", sign);\n                System.out.println(\"生成的签名paySign : \"+ sign);\n                response.setData(resultMap);\n                return response;\n            }else{\n                return  response;\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            return  response;\n        }\n    } \n```\n\n<a href=\"https://github.com/andy388/weapp-weixinpay\" target=\"_blank\">(servlet)微信小程序支付，服务端java项目+前端小程序实现</a>\n\n<a href=\"https://github.com/KevinYounGa/xcx-wxpay\" target=\"_blank\">关于微信小程序支付、退款、模板消息发送功能的demo(前后端代码)</a>\n\n\n小程序中发起微信支付\n<a href=\"\" target=\"_blank\"></a>\nhttps://www.jianshu.com/p/eafb5f80f304\n\n小程序的实现\n<a href=\"\" target=\"_blank\"></a>\nhttp://www.cnblogs.com/catcher1994/p/6664404.html\n```\n//index.js\n//获取应用实例\nconst app = getApp()\n//输入小程序的appid\nconst APP_ID = \"小程序的appid\";\n//输入小程序app_secret\nconst APP_SECRET = \"小程序的app_secret\";\n//储存获取到openid\nvar OPEN_ID = \"\";\n//储存获取到session_key\nvar SESSION_KEY = \"\";\nPage({\n  data:{\n    'message':\"发起支付\"\n  },\n  wxPay:function(){\n    var that = this;\n    wx.login({\n      success:function(res){\n        wx.request({\n          url:\"https://xiaochengxu.e0yu.com/index.php?s=Index/get_openid\",\n          data:{\n            appid: APP_ID,\n            secret:APP_SECRET,\n            js_code:res.code,\n            grant_type: 'authorization_code' \n          },\n          method:'GET',\n          success:function(res){\n            //console.log(res);\n            OPEN_ID = res.data.openid;//获取到的openid             wx.request({\n              url: \"https://xiaochengxu.e0yu.com/index.php?s=Index/wxPay\",\n              data:{\n                openid:OPEN_ID,\n                total_fee:1,//充值金额 单位\"分\"\n                title:'商品标题'\n              },\n              method:'GET',\n              success:function(result){\n                //console.log(result);\n                console.log('调起支付');\n                wx.requestPayment({\n                  'timeStamp': result.data.timeStamp,\n                  'nonceStr': result.data.nonceStr,\n                  'package': result.data.package,\n                  'signType': 'MD5',\n                  'paySign': result.data.paySign,\n                  'success': function (res) {\n                    console.log('success');\n                  },\n                  'fail': function (res) {\n                    console.log('fail');\n                  },\n                  'complete': function (res) {\n                    console.log('complete');\n                  }\n                });\n              }\n            })\n          },\n        })\n      }\n    });\n  }\n})\n```","tags":["小程序"]},{"title":"[小程序] 构造函数","url":"/2019/04/20//articles/2019/04/20/1555732654000.html/","content":"小程序学习：构造函数写法对比\nhttps://blog.csdn.net/qq_32584661/article/details/80420432\n\nES6写法：\n```\nclass Test {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  };\n  sum() {\n    return this.x + this.y;\n  };\n}\n\nlet t = new Test(10, 1000);\nlet he = t.sum();\nconsole.log(he);\n```\n\nutils/PageUtil.js\n```\nvar api = require('./promise');\n\nclass PageUtil {\n\n  constructor(context ,listName, url, limit) {\n    this.context = context;\n    this.url = url;\n    this.listName = listName;\n    this.limit = limit;\n    this.currentPage = 0;\n  };\n\n  fetchMore(currentList,callback) {\n    var self = this;\n    var limit = this.limit;\n    var page = this.currentPage + 1;\n    var city = this.context.data.address;\n\n    api.post(self.url, {\n      limit: limit,\n      page: page,\n      city: city,\n    }).then(res => {\n\n      typeof callback == 'function' && callback(res);\n\n      var pageList = res.data;\n      if (pageList == null || pageList.length == 0) {\n        return;\n      }\n      self.currentPage = page;\n      self.context.setData({\n        [self.listName]: currentList.concat(pageList)\n      });\n    })\n  };\n}\n\nexport default PageUtil;\n```\n\n```\nimport PageUtil from \"../../../utils/PageUtil.js\";\nPage({\n  data: {\n  },\n  onLoad: function(options) {\n    this.setData({\n      options: options\n    });\n\n    var pageUtil = new PageUtil(this, \"arrays\", config.order.orderListUrl, 10);\n    this.setData({\n      pageUtil: pageUtil\n    });\n\n    this.data.pageUtil.fetchMore(this.data.arrays,function(res){\n\n      });\n  },\n});\n```","tags":["小程序"]},{"title":"[小程序] 经纬度计算距离，单位km","url":"/2019/04/20//articles/2019/04/20/1555732653000.html/","content":"<a href=\"https://blog.csdn.net/qq_41320944/article/details/79887819\" target=\"_blank\">经纬度计算距离，单位km</a>\n```\n  onLoad: function (options) {\n    //[0: (39.928712, 116.393345),1: (39.928722, 116.393853)] 举个栗子\n\n    this.distance(39.928712, 116.393345, 39.928722, 116.393853)\n  },\n   \n  distance:function(la1, lo1, la2, lo2) {\n   \n     var La1 = la1 * Math.PI / 180.0;\n     var La2 = la2 * Math.PI / 180.0;\n     var La3 = La1 - La2;\n\n     var Lb3 = lo1 * Math.PI / 180.0 - lo2 * Math.PI / 180.0;\n     var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(La3 / 2), 2) + Math.cos(La1) * Math.cos(La2) * Math.pow(Math.sin(Lb3 / 2), 2)));\n\n     s = s * 6378.137;//地球半径\n     s = Math.round(s * 10000) / 10000;\n\n     <!-- console.log(\"计算结果\",s) -->\n     return s;   \n  },\n```\n\n传入参数调用distance方法即可\n```\nPage({\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function (options) {\n      var that = this;\n      // 以北京故宫为例计算当前位置到其的距离，北京故宫坐标（116.403802, 39.915405）\n      wx.getLocation({\n        type: 'gcj02',\n        success: function (res) {\n          console.log(\"当前坐标信息：\", res)\n          var distance = that.distance(res.latitude, res.longitude,39.918034,116.415192);\n          console.log(\"当前位置距离北京故宫：\", distance, \"千米\")\n        }\n      })\n    // 举个栗子验证一下distance方法的真实性和有效性\n    // 北京故宫坐标（116.403802,39.915405），上海虹桥机场坐标(121.334421,31.200479),地图测距结果为1066.6±10\n    var testdistance=that.distance(39.915405, 116.403802, 31.200479, 121.334421);//注意经纬度别混淆\n    console.log(\"北京故宫-上海虹桥机场的距离为：\",testdistance,\"千米\");//结果让人很满意\n  },\n  /**\n   * @creator 新猿意码\n   * @data 2019/01/17\n   * @desc 由经纬度计算两点之间的距离，la为latitude缩写，lo为longitude\n   * @param la1 第一个坐标点的纬度\n   * @param lo1 第一个坐标点的经度\n   * @param la2 第二个坐标点的纬度\n   * @param lo2 第二个坐标点的经度\n   * @return (int)s   返回距离(单位千米或公里)\n   * @tips 注意经度和纬度参数别传反了，一般经度为0~180、纬度为0~90\n   * 具体算法不做解释，有兴趣可以了解一下球面两点之间最短距离的计算方式\n   */\n  distance: function (la1, lo1, la2, lo2) {\n    var La1 = la1 * Math.PI / 180.0;\n    var La2 = la2 * Math.PI / 180.0;\n    var La3 = La1 - La2;\n    var Lb3 = lo1 * Math.PI / 180.0 - lo2 * Math.PI / 180.0;\n    var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(La3 / 2), 2) + Math.cos(La1) * Math.cos(La2) * Math.pow(Math.sin(Lb3 / 2), 2)));\n    s = s * 6378.137;\n    s = Math.round(s * 10000) / 10000;\n    s = s.toFixed(2);\n    return s;\n  },\n})\n\n```\n\n\nDistanceUtil.js\n```\nfunction getDistance(lat1, lng1, lat2, lng2) {\n  lat1 = lat1 || 0;\n  lng1 = lng1 || 0;\n  lat2 = lat2 || 0;\n  lng2 = lng2 || 0;\n\n  var rad1 = lat1 * Math.PI / 180.0;\n  var rad2 = lat2 * Math.PI / 180.0;\n  var a = rad1 - rad2;\n  var b = lng1 * Math.PI / 180.0 - lng2 * Math.PI / 180.0;\n\n  var r = 6378137;\n  var distance = r * 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(rad1) * Math.cos(rad2) * Math.pow(Math.sin(b / 2), 2)));\n\n  /*if (distance > 1000){\n    distance = Math.round(distance / 1000);\n  }*/\n\n  return distance;\n}\n\nmodule.exports = {\n  getDistance: getDistance\n}\n```","tags":["小程序"]},{"title":"[小程序] 页面分享","url":"/2019/04/20//articles/2019/04/20/1555732652000.html/","content":"<a href=\"https://blog.csdn.net/zzwwjjdj1/article/details/79390446\" target=\"_blank\">页面分享 onShareAppMessage</a>\n```\n onShareAppMessage: (res) => {\n    if (res.from === 'button') {\n      console.log(\"来自页面内转发按钮\");\n      console.log(res.target);\n    }\n    else {\n      console.log(\"来自右上角转发菜单\")\n    }\n    return {\n      title: '妹子图片',\n      path: '/pages/share/share?id=123',\n      imageUrl: \"/images/1.jpg\",\n      success: (res) => {\n        console.log(\"转发成功\", res);\n      },\n      fail: (res) => {\n        console.log(\"转发失败\", res);\n      }\n    }\n  }\n```\n\nwxml\n```\n<view class=\"view\">\n  <image class=\"cover-9\" src=\"{{img}}\" bindtap=\"img\"></image>\n  <view class=\"window-1\">\n    <button type=\"default\" id=\"open\" bindtap=\"showShareMenu\">开启分享</button>\n    <button type=\"warn\" id=\"close\" bindtap=\"hideShareMenu\">关闭分享</button>\n  </view>\n  <button type=\"primary\" open-type=\"share\" data-name=\"pageShare\" id=\"share\">点击分享</button>\n</view>\n```\n\nwxss\n```\npage{\n  height: 100%;\n}\n.view{\n  width: 100%;\n  height: 100%;\n}\n.window-1{\n  display: flex;\n  flex-direction: row;\n  margin: 20rpx 0;\n}\n.cover-9{\n  width: 688rpx;\n  height: 75%;\n  margin: 0 30rpx;\n  border:2rpx solid;\n  border-radius:5px;  \n}\nbutton{\n  margin: 0 10rpx;\n  width: 100%;\n}\n#share{\n  width: 730rpx;\n}\n```","tags":["小程序"]},{"title":"[小程序] wxs","url":"/2019/04/20//articles/2019/04/20/1555732651000.html/","content":"<a href=\"https://www.w3cschool.cn/weixinapp/weixinapp-nvg32czm.html\" target=\"_blank\">微信小程序 WXS模块</a>\n<a href=\"https://blog.csdn.net/dwb123456123456/article/details/82152403\" target=\"_blank\">微信小程序 wxs介绍和使用</a>\n\n\n在.wxml页面中编写\n```\n<wxs module=\"filter\">\nvar joinArray= function (array) {\n\treturn array.join(' ')\n}\n \nmodule.exports = {\n\tjoinArray: joinArray\n}\n</wxs>\n\n<view> {{filter.joinArray(names)}} </view>\n```\n\n> 字符串截取相关\nwxs/string.wxs\n```\nfunction my_slice(str,a,b){\n  return str.slice(a,b);\n}\nmodule.exports = {\n  slice: my_slice\n}\n```\n.wxml\n```\n<wxs src=\"/wxs/string.wxs\" module=\"tools\" />\n<view>\n  {{tools.slice(\"123456789\",0,5)}}\n</view>\n```\n\n\n> 经纬度计算相关\nwxs/distance.wxs\n```\nfunction getDistance(lat1, lng1, lat2, lng2) {\n  lat1 = lat1 || 0;\n  lng1 = lng1 || 0;\n  lat2 = lat2 || 0;\n  lng2 = lng2 || 0;\n\n  var rad1 = lat1 * Math.PI / 180.0;\n  var rad2 = lat2 * Math.PI / 180.0;\n  var a = rad1 - rad2;\n  var b = lng1 * Math.PI / 180.0 - lng2 * Math.PI / 180.0;\n\n  var r = 6378137;\n  var distance = r * 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(rad1) * Math.cos(rad2) * Math.pow(Math.sin(b / 2), 2)));\n\n  return distance;\n}\n\nmodule.exports = {\n  getDistance: getDistance\n}\n```\n.wxml\n```\n<wxs src=\"/wxs/string.wxs\" module=\"tools\" />\n<view>\n  {{tools.slice(\"123456789\",0,5)}}\n</view>\n```\n\n<a href=\"https://www.jianshu.com/p/05196ed2dc96\" target=\"_blank\">邮件检验</a>\n<a href=\"https://github.com/tomfriwel/wechatapp-wxs-tutorial/blob/master/src/wxs/common.wxs\" target=\"_blank\">github | wxs</a>\n\n> 时间相关\n\n在.wxs中编写\ndateformat.wxs\n```\nvar localData= function (value) {\n  var date = getDate(value * 1000);\n  var Month = date.getMonth() + 1;\n  var Day = date.getDate();\n  var hours = date.getHours(); //计算剩余的小时\n  var minutes = date.getMinutes(); //计算剩余的分钟\n  var Y = date.getFullYear() + '年';\n  var M = Month < 10 ? '0' + Month + '月' : Month + '月';\n  var D = Day + 1 < 10 ? '0' + Day + '日' : Day + '日';\n  var H = hours < 10 ? '0' + hours + ':' : hours + ':'\n  var m = minutes < 10 ? '0' + minutes : minutes;\n  return M + D + \"   \" + H + m;\n}\nmodule.exports={\n  localData:localData\n}\n```\n\n.wxml\n```\n<wxs module='dateformat' src='./dateformat.wxs' />\n\n<view>{{dateformat.localData(item.endtime)}}</view>\n```","tags":["小程序"]},{"title":"[小程序] 通用组件","url":"/2019/04/20//articles/2019/04/20/1555732650000.html/","content":"<a href=\"https://blog.csdn.net/qq_24734285/article/category/6645870\" target=\"_blank\">csdn 小程序组件集合</a>\n<a href=\"https://github.com/youzouzou/wxapp\" target=\"_blank\">github|小程序组件集合</a>\n<a href=\"https://github.com/icindy/wxParse\" target=\"_blank\">wxParse</a>\n<a href=\"https://github.com/weui/weui-wxss\" target=\"_blank\">weui-wxss</a>\n<a href=\"https://github.com/Tencent/weui-wxss\" target=\"_blank\">Tencent/weui-wxss</a>\n<a href=\"https://github.com/zzjian/wx-wanandroid\" target=\"_blank\">wx-wanandroid</a>\n","tags":["小程序"]},{"title":"[小程序] 获取当前经纬度","url":"/2019/04/20//articles/2019/04/20/1555732649000.html/","content":"\n```\nPage({\n\n data: {\n    latitude: \"\",\n    longitude: \"\"\n  },\n  GPSsubmit:function(e){\n    wx.getLocation({\n      type: 'wgs84',\n      success: (res)=> {\n        var latitude = res.latitude\n        var longitude = res.longitude\n        var speed = res.speed\n        var accuracy = res.accuracy\n        this.setData({ latitude: latitude, longitude: longitude})\n        wx.showModal({\n          title: '当前位置',\n          content: '经度' + res.longitude+ '纬度'+res.latitude,\n        })\n      }\n \n    })\n  },\n\n});\n```","tags":["小程序"]},{"title":"[小程序] 分页加载数据","url":"/2019/04/20//articles/2019/04/20/1555732648000.html/","content":"<a href=\"https://github.com/lanfeng1993/LoadDataDemo\" target=\"_blank\">微信小程序分页加载数据</a>\n\n\nutils/PageUtil.js\n```\nvar api = require('./promise');\n\nclass PageUtil {\n\n  constructor(context ,listName, url, limit) {\n    this.context = context;\n    this.url = url;\n    this.listName = listName;\n    this.limit = limit;\n    this.currentPage = 0;\n  }\n\n  fetchMore(currentList,callback) {\n    var self = this;\n    var limit = this.limit;\n    var page = this.currentPage + 1;\n    var city = this.context.data.address;\n\n    api.post(self.url, {\n      limit: limit,\n      page: page,\n      city: city,\n    }).then(res => {\n\n      typeof callback == 'function' && callback(res);\n\n      var pageList = res.data;\n      if (pageList == null || pageList.length == 0) {\n        return;\n      }\n      self.currentPage = page;\n      self.context.setData({\n        [self.listName]: currentList.concat(pageList)\n      });\n    })\n  }\n}\n\nexport default PageUtil;\n```","tags":["小程序"]},{"title":"[小程序] 网格布局","url":"/2019/04/20//articles/2019/04/20/1555732647000.html/","content":"1、通过数组对象格式来模拟获取到的后台数据格式：\n```\nPage({\n  data: {\n    tableData: [{ //模拟动态获取到的后台数据：数组对象格式\n      id: 0,\n      name: 'table-th-cell'\n    },\n    {\n      id: 1,\n      name: 'table-th-cell'\n    },\n    {\n      id: 2,\n      name: 'table-th-cell'\n    },\n    {\n      id: 3,\n      name: 'table-tr-cell'\n    },\n    {\n      id: 4,\n      name: 'table-tr-cell'\n    },\n    {\n      id: 5,\n      name: 'table-tr-cell'\n    },\n    {\n      id: 6,\n      name: 'table-tr-cell'\n    },\n    {\n      id: 7,\n      name: 'table-tr-cell'\n    },\n    {\n      id: 8,\n      name: 'table-tr-cell'\n    },\n\n    ],\n  },\n  onLoad: function () {\n  },\n})\n```\n\n2、设置wxml也是一些常用的布局格式：\n```\n<view class=\"table\">\n\n  <block wx:for='{{tableData}}' wx:key='*this'>\n    <view class='table-th' wx:if='{{index<3}}'>{{item.name}}</view>\n    <view class='table-td' wx:else>{{item.name}}</view>\n  </block>\n</view>\n```\n\n3、wxss设置，主要通过父容器设置为块级网格，然后设置 父容器的列、行大小 ，fr单位是等分分配列空间； 设置有多余数据时，自动添加新行时默认行高为：200rpx ；设置网格线大小 ；子元素的话可以根据自己自定义样式内容：\n```\n.table {\n  display: grid;\n  width: 100%;\n  overflow-x: hidden;\n  /* 设置列、行大小 fr单位是等分分配列空间*/\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 200rpx 200rpx;\n  /* 有多余数据时，自动添加新行时默认行高为：200rpx */\n  grid-auto-rows: 200rpx;\n  /* 设置网格线大小 */\n  grid-gap: 10rpx;\n}\n\n.table-th {\n  font-weight: bold;\n  background-color: #888;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.table-td {\n  background-color: #ccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n```","tags":["小程序"]},{"title":"[小程序] wx.navigateBack传值","url":"/2019/04/20//articles/2019/04/20/1555732646000.html/","content":"<a href=\"https://www.cnblogs.com/caicaizi/p/6652103.html\" target=\"_blank\">wx.navigateTo()数据传递</a>\n```\n// 源页面A相关代码\nwx.navigateTo({\n  url: \"/pages/mypage/mypage?a=1&b=2\"\n})\n\n// 目标页面B相关代码\nPage({\n  onLoad: function (options) {\n    var a = options.a; // 值：1\n    var b = options.b; // 值：2\n  }\n})\n```\n使用全局数据存储\n```\n//=== 1. 存储到app对象上的方式 ========\nvar app = getApp()\napp.globalData.mydata = {a:1, b:2};  //存储数据到app对象上\nwx.navigateBack();  //返回上一个页面\n\n//=== 2.存储到数据缓存的方式 =========\nwx.setStorage({\n  key: \"mydata\",\n  data: {a:1, b:2},\n  success: function () {\n    wx.navigateBack();   //返回上一个页面\n  }\n})\n```\n路由栈 + wx.navigateBack()\n```\nvar pages = getCurrentPages();\nvar currPage = pages[pages.length - 1];   //当前页面\nvar prevPage = pages[pages.length - 2];  //上一个页面\n\n//直接调用上一个页面的setData()方法，把数据存到上一个页面中去\nprevPage.setData({\n  mydata: {a:1, b:2}\n});\nwx.navigateBack({\n  delta: 1\n})\n```\n\n<a href=\"https://blog.csdn.net/xiao1215fei/article/details/82284115\" target=\"_blank\">wx.navigateBack() 传值</a>\n```\nPage({\n  selectAddress(e) {\n    console.log(e.detail)\n\n    var pages = getCurrentPages();\n    var currPage = pages[pages.length - 1];   //当前页面\n    var prevPage = pages[pages.length - 2];  //上一个页面\n    prevPage.setData({\n      \"city\": e.detail.name,\n    })\n    wx.navigateBack({\n      delta: 1\n    })\n  },\n})\n```","tags":["小程序"]},{"title":"[小程序] scroll-view实现锚点滑动","url":"/2019/04/20//articles/2019/04/20/1555732645000.html/","content":"<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/component/scroll-view.html\" target=\"_blank\">官方scroll-view实现锚点滑动</a>\n```\n<view class=\"section\">\n  <view class=\"section__title\">vertical scroll</view>\n  <scroll-view\n    scroll-y\n    style=\"height: 200px;\"\n    bindscrolltoupper=\"upper\"\n    bindscrolltolower=\"lower\"\n    bindscroll=\"scroll\"\n    scroll-into-view=\"{{toView}}\"\n    scroll-top=\"{{scrollTop}}\"\n  >\n    <view id=\"green\" class=\"scroll-view-item bc_green\"></view>\n    <view id=\"red\" class=\"scroll-view-item bc_red\"></view>\n    <view id=\"yellow\" class=\"scroll-view-item bc_yellow\"></view>\n    <view id=\"blue\" class=\"scroll-view-item bc_blue\"></view>\n  </scroll-view>\n\n  <view class=\"btn-area\">\n    <button size=\"mini\" bindtap=\"tap\">click me to scroll into view</button>\n    <button size=\"mini\" bindtap=\"tapMove\">click me to scroll</button>\n  </view>\n</view>\n<view class=\"section section_gap\">\n  <view class=\"section__title\">horizontal scroll</view>\n  <scroll-view class=\"scroll-view_H\" scroll-x style=\"width: 100%\">\n    <view id=\"green\" class=\"scroll-view-item_H bc_green\"></view>\n    <view id=\"red\" class=\"scroll-view-item_H bc_red\"></view>\n    <view id=\"yellow\" class=\"scroll-view-item_H bc_yellow\"></view>\n    <view id=\"blue\" class=\"scroll-view-item_H bc_blue\"></view>\n  </scroll-view>\n</view>\n```\n\n```\nconst order = ['red', 'yellow', 'blue', 'green', 'red']\nPage({\n  data: {\n    toView: 'red',\n    scrollTop: 100\n  },\n  upper(e) {\n    console.log(e)\n  },\n  lower(e) {\n    console.log(e)\n  },\n  scroll(e) {\n    console.log(e)\n  },\n  tap(e) {\n    for (let i = 0; i < order.length; ++i) {\n      if (order[i] === this.data.toView) {\n        this.setData({\n          toView: order[i + 1]\n        })\n        break\n      }\n    }\n  },\n  tapMove(e) {\n    this.setData({\n      scrollTop: this.data.scrollTop + 10\n    })\n  }\n})\n```\n\n<a href=\"https://www.jianshu.com/p/88271708c63c\" target=\"_blank\">scroll-view实现锚点滑动</a>\n```\n<scroll-view scroll-y style=\"height: 200px;\" bindscroll=\"scroll\" scroll-into-view=\"{{toView}}\" >\n```","tags":["小程序"]},{"title":"[小程序] 图片反色","url":"/2019/04/20//articles/2019/04/20/1555732644000.html/","content":"<a href=\"http://www.mamicode.com/info-detail-1405085.html\" target=\"_blank\">使用CSS3滤镜让图片反转颜色</a>\n```\n.normal {\n    filter: invert(0%);\n}\n\n.inverted {\n    filter: invert(100%);\n}\n```\n\n<a href=\"https://www.jb51.net/css/623472.html\" target=\"_blank\">微信小程序 CSS filter（滤镜）的使用示例详解</a>\n","tags":["小程序"]},{"title":"[小程序] 清理本地缓存","url":"/2019/04/20//articles/2019/04/20/1555732643000.html/","content":"<a href=\"https://blog.csdn.net/mldwyy/article/details/80066135\" target=\"_blank\">上拉加载与下拉刷新</a>\n\n\n1.wx.clearStorage 接口函数，这个函数不需要参数，可以清理本地的所有缓存。\n清除前：\n```\n  onLoad: function (options) {\n    wx.getStorageSync(\"key1\",\"value\");\n    wx.getStorageSync(\"key2\",\"value2\");\n  },\n```\n清除后：\n```\n  onLoad: function (options) {\n    wx.getStorageSync(\"key1\",\"value\");\n    wx.getStorageSync(\"key2\",\"value2\");\n    wx.clearStorage();\n  },\n```\n\n\n2.wx.clearStorageSync 接口函数，这个函数用于同步清理本地数据缓存，该接口同样也没有参数\n清除前：\n```\n  onLoad: function (options) {\n    wx.getStorageSync(\"key1\",\"value\");\n    wx.getStorageSync(\"key2\",\"value2\");\n  },\n```\n清除后：\n```\n  onLoad: function (options) {\n    wx.getStorageSync(\"key1\",\"value\");\n    wx.getStorageSync(\"key2\",\"value2\");\n    wx.clearStorageSync();\n  },\n```\n\n3.wx.removeStorage 接口函数：这个接口函数用于从本地缓存中异步删除指定key对应内容\n清除前：\n```\n  onLoad: function (options) {\n    wx.getStorageSync(\"key1\",\"value\");\n    wx.getStorageSync(\"key2\",\"value2\");\n  },\n```\n清除后：\n```\n  onLoad: function (options) {\n    wx.getStorageSync(\"key1\",\"value\");\n    wx.getStorageSync(\"key2\",\"value2\");\n    wx.removeStorage({\n    \tkey:'key1',\n    \tsuccess:function(res){\n    \t\tconsole.log(res.data)\n    \t}\n    });\n  },\n```\n\n4.wx.removeStorageSync 接口函数：这个函数用于从本地缓存中同步删除指定key对应的内容\n清除前：\n```\n  onLoad: function (options) {\n    wx.getStorageSync(\"key1\",\"value\");\n    wx.getStorageSync(\"key2\",\"value2\");\n  },\n```\n清除后：\n```\n  onLoad: function (options) {\n    wx.getStorageSync(\"key1\",\"value\");\n    wx.getStorageSync(\"key2\",\"value2\");\n    wx.removeStorageSync(\"key2\");\n  },\n```\n\n<a href=\"https://www.jb51.net/article/145797.htm\" target=\"_blank\">脚本之家 / 小程序清理本地缓存的方法</a>","tags":["小程序"]},{"title":"[小程序] 上拉加载与下拉刷新","url":"/2019/04/20//articles/2019/04/20/1555732642000.html/","content":"<a href=\"https://www.jianshu.com/p/d89e79d09e64\" target=\"_blank\">上拉加载与下拉刷新</a>\n<a href=\"https://blog.csdn.net/liumude123/article/details/80401175\" target=\"_blank\">自定义下拉刷新和上拉加载更多</a>\n\n\n<a href=\"https://www.jianshu.com/p/cc3a516224ee\" target=\"_blank\">上拉加载更多</a>\n<a href=\"https://github.com/zzjian/wx-wanandroid/blob/ef333f2c6c459306fe5e6118422e0921a355b249/components/load-more/index.js\" target=\"_blank\">load-more/index.js</a>\n\n","tags":["小程序"]},{"title":"[小程序] 上传图片","url":"/2019/04/20//articles/2019/04/20/1555732641000.html/","content":"<a href=\"https://www.jianshu.com/p/9076047c4aa2\" target=\"_blank\">微信小程序之文件上传</a>\n<a href=\"https://github.com/LeoMelody/jianshu/blob/master/smallDemo/upload/upload.js\" target=\"_blank\">upload.js</a>\n\n预览图片\n```\n  previewImage: function(e) {\n    wx.previewImage({\n      current: e.currentTarget.id, // 当前显示图片的http链接\n      urls: this.data.files // 需要预览的图片http链接列表\n    })\n  },\n```\n","tags":["小程序"]},{"title":"[小程序] 动态更改data里的某一项数据","url":"/2019/04/20//articles/2019/04/20/1555732640000.html/","content":"<a href=\"https://blog.csdn.net/abc564643122/article/details/79580759\" target=\"_blank\">动态更改data里的某一项数据</a>\n\n```\nPage({\n\n  data: {\n    category_list: [{\n        id: 1,\n        name: '阅读',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 2,\n        name: '重复',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 3,\n        name: '停留',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 4,\n        name: '转发',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 5,\n        name: '评论',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 6,\n        name: '点赞',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 7,\n        name: '搞笑',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 8,\n        name: '实用',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 9,\n        name: '着数',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 10,\n        name: '最美',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n      {\n        id: 11,\n        name: '最萌',\n        show: false,\n        loading: true,\n        news_list: []\n      },\n    ]\n  },\n\n  onLoad: function(options) {\n    this.setData({\n      'array[0].text': 'update data'\n    })\n    //如果索引是动态的 则使用下方方式\n    var mText = 'array[' + index + '].text';\n    this.setData({\n      [mText]: 'update data'\n    })\n  },\n\n  getList: function(index, showAll) {\n    var mLoading = 'category_list[' + index + '].loading'\n    var mNewsList = 'category_list[' + index + '].news_list'\n    var mShowAll = 'category_list[' + index + '].show'\n    var that = this;\n    that.setData({\n      [mNewsList]: [],\n      [mLoading]: true\n    })\n    var category = this.data.category_list;\n    var post_data = {\n      category_id: category[index].id,\n      filter_date: 0\n    };\n    // api.getNewsList(function(data) {\n    //   that.setData({\n    //     [mLoading]: false,\n    //     [mShowAll]: showAll\n    //   })\n    //   if (data.code == 200) {\n    //     console.log(mLoading);\n    //     that.setData({\n    //       [mNewsList]: data.data\n    //     })\n    //   } else {\n    //     wx.showModal({\n    //       title: '',\n    //       content: data.msg,\n    //       showCancel: false\n    //     })\n    //   }\n    // }, post_data);\n  }\n\n\n});\n```\n\n","tags":["小程序"]},{"title":"[小程序] 修改checkbox样式","url":"/2019/04/20//articles/2019/04/20/1555732639000.html/","content":"<a href=\"https://www.kissneck.com/weixinxiaochengxuxiugaicheckboxheradiodeyangshi/\" target=\"_blank\">修改checkbox和radio的样式</a>\n\n修改checkbox样式\n.wxml\n```\n  <checkbox-group class='pull-left' bindchange=\"checkboxChange\">\n    <label class=\"checkbox flex flex-vc \">\n      <checkbox bindchange='checkboxChange' value=\"\" checked=\"{{checkboxStatus}}\" color='#fff' />\n      <view>可用2000个积分币抵扣</view>\n    </label>\n  </checkbox-group>\n```\n\n.wxss\n```\n/* checkbox未选中时样式 */\ncheckbox .wx-checkbox-input {\n  /* 自定义样式.... */\n  border-radius: 3rpx;\n  height: 26rpx;\n  width: 26rpx;\n  margin-top: -4rpx;\n}\n\n/* checkbox选中时样式 */\ncheckbox .wx-checkbox-input.wx-checkbox-input-checked::before {\n  /* 自定义样式.... */\n  background-color: #e02e24;\n  border: 1rpx solid #e02e24;\n}\n\n```\n\n<a href=\"https://blog.csdn.net/kelisentian/article/details/72793158\" target=\"_blank\">多选button</a>\n```\n<block wx:for=\"{{array}}\" wx:for-item=\"item\">\n<view class=\"chose-txt\" data-price=\"{{item.price}}\"  data-id=\"{{index}}\" bindtap=\"choseTxtColor\" style=\"{{index == id?'background:url(../resource/button/on_chose.png) right no-repeat; border:1rpx solid #e8580c; color: #e8580c':'baciground:url();border:1rpx solid gainsboro;color:gray'}}\">\n                <text class=\"chose-p\" >{{item.name}}</text>\n                 <text class=\"chose-p\" >{{item.price}}元</text>\n</view>\n</block>\n```\n\n.wxss\n```\n.chose-txt{\n  border-radius: 6px;  font-size: 26rpx;   height: 40px;  width:  27.5%;  margin: 5px; float: left;padding-top: 5px;\n}\n.chose-p{\n  line-height: 18px; width: 100%; height:20px; text-align:  center; float: left;\n}\n```\n\n.js\n```\nvar id ; \npage{\n    array: [{ name: '单拍', price: '198'}, { name: '亲子套餐', price: '398' },   { name: '活动套餐', price: '598' },  { name: '女王套餐', price: '1198' } ],\n    id:0,             //进入页面时，默认选择第0个，如果不需要默认选中，注释掉就可以了\n},\nchoseTxtColor:function(e){\n    var id = e.currentTarget.dataset.id;  //获取自定义的ID值\n    this.setData({\n      id:id \n    })\n  },\n}\n}\n```","tags":["小程序"]},{"title":"[小程序] 微信扫码点餐小程序","url":"/2019/04/20//articles/2019/04/20/1555732638000.html/","content":"<a href=\"https://github.com/zhyqieqie/wechatscan\" target=\"_blank\">微信扫码点餐小程序 1</a>\n```\n微信扫码点餐小程序支持预约、外卖、优惠券、在线支付等功能，是一个运营级的产品。小程序前端开源，供参考。\n```\n\n<a href=\"https://github.com/A13253565831/wxapp_newRestaurant\" target=\"_blank\">微信扫码点餐小程序 2</a>\n```\n此小程序集搜索排序,支付,外卖,扫码,选桌,预约点餐,定位,转账,支付押金,点餐记录,外卖记录,评价,待付款等支持多门店\n```\n","tags":["小程序"]},{"title":"[小程序] 订单页面","url":"/2019/04/20//articles/2019/04/20/1555732637000.html/","content":"<a href=\"https://blog.csdn.net/chibimarukochan/article/details/82887542\" target=\"_blank\">微信小程序-订单页面</a>\n","tags":["小程序"]},{"title":"[小程序] 栅格布局","url":"/2019/04/20//articles/2019/04/20/1555732636000.html/","content":"<a href=\"https://blog.csdn.net/m0_37479946/article/details/69397441\" target=\"_blank\">栅格布局</a>\n<a href=\"https://gitee.com/mrxu314/xcx_gh\" target=\"_blank\">github / 栅格布局</a>","tags":["小程序"]},{"title":"[小程序] 搜索框","url":"/2019/04/20//articles/2019/04/20/1555732635000.html/","content":"<a href=\"https://www.jianshu.com/p/5c1fc51bdfc3\" target=\"_blank\">简书|搜索组件wxSearch</a>\n<a href=\"https://github.com/icindy/wxSearch\" target=\"_blank\">github|搜索组件wxSearch</a>\n","tags":["小程序"]},{"title":"[小程序] 顶部自定义组件+城市索引列表选择","url":"/2019/04/20//articles/2019/04/20/1555732634000.html/","content":"<a href=\"https://www.jianshu.com/p/9a13fa345f40\" target=\"_blank\">顶部自定义组件+城市索引列表选择</a>\n<a href=\"https://github.com/mehaotian/wx-list-index\" target=\"_blank\">github|顶部自定义组件+城市索引列表选择</a>\n","tags":["小程序"]},{"title":"[小程序] 弹出提示","url":"/2019/04/20//articles/2019/04/20/1555732633000.html/","content":"<a href=\"https://blog.csdn.net/mazegong/article/details/78121988\" target=\"_blank\">微信小程序提示弹窗大全</a>\n\n显示消息提示框\nwx.showToast()\n```\nwx.showToast({\n title: '成功',\n icon: 'success',\n duration: 10000\n});\nsetTimeout(function(){\n wx.hideToast();\n //todo ...\n\n},2000)\n```\n\n隐藏消息提示框\nwx.hideToast()\n```\nwx.showToast({\n title: '加载中',\n icon: 'loading',\n duration: 10000\n})\n\nsetTimeout(function(){\n wx.hideToast();\n //todo ...\n\n},2000)\n```\n","tags":["小程序"]},{"title":"[小程序] 页面禁止滚动","url":"/2019/04/20//articles/2019/04/20/1555732632000.html/","content":"\n```\npage {\n  height: 100%;\n  overflow-y: hidden;\n}\n \n/* scroll-view容器 */\n.container {\n  height: 100%;\n}\n```","tags":["小程序"]},{"title":"[小程序] 设备宽高","url":"/2019/04/20//articles/2019/04/20/1555732631000.html/","content":"\n```\n  onLoad: function (options) {\n    // 页面初始化 options为页面跳转所带来的参数\n    var vm = this;\n    wx.getSystemInfo({\n      success: (res) => {\n        vm.setData({\n          deviceWidth: res.windowWidth,\n          deviceHeight: res.windowHeight\n        });\n      }\n    });\n  },\n```","tags":["小程序"]},{"title":"[小程序] 自定义顶部栏","url":"/2019/04/20//articles/2019/04/20/1555732629000.html/","content":"abc.json\n```\n{\n  \"navigationBarBackgroundColor\": \"#ffffff\",\n  \"navigationBarTextStyle\": \"black\",\n  \"navigationBarTitleText\": \"微信接口功能演示\",\n  \"backgroundColor\": \"#eeeeee\",\n  \"backgroundTextStyle\": \"light\"\n}\n```\n\nabc.wxss\n```\nPage {\n  background: #203348;\n  color: #fff;\n  font-size: 30rpx;\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n```\n\n","tags":["小程序"]},{"title":"[小程序] 图片上传","url":"/2019/04/20//articles/2019/04/20/1555732628000.html/","content":"<a href=\"https://www.cnblogs.com/freeliver54/p/7728498.html\" target=\"_blank\" target=\"_blank\">实现图片上传功能</a>\n\njs\n```\nvar api = require('/utils/api.js');\nvar config = require('/config.js');\nvar app = getApp();\n\n\nPage({\n\n  data: {\n    files: [],\n  },\n\n  uploadPhoto(e) {\n    var that = this;\n    wx.chooseImage({\n      count: 1, // 默认9\n      sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有\n      sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有\n      success: function(res) {\n        //返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\n        var tempFilePaths = res.tempFilePaths;\n        console.log('本地图片的路径:', tempFilePaths)\n        that.setData({\n          files: [tempFilePaths]\n        });\n      }\n    })\n  },\n\n  uploadImage: function(tempFilePaths) {\n    wx.showToast({\n      icon: \"loading\",\n      title: \"正在上传\",\n      duration: 2000\n    });\n    wx.uploadFile({\n      url: config.uploadUrl,\n      filePath: tempFilePaths[0], //文件value\n      name: 'file', //文件key\n      header: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      formData: {\n        //和服务器约定的token, 一般也可以放在header中\n        userId: app.gloablData.userInfo.userId\n      },\n      success: function(res) {         //上传成功返回数据\n        console.log('上传成功返回的数据', JSON.parse(res.data).data);\n        if (res.statusCode != 200) {\n          wx.showModal({\n            title: '提示',\n            content: '上传失败',\n            showCancel: false\n          })\n          return;\n        }\n      },\n      fail: function(e) {\n        console.log(e);\n        wx.showModal({\n          title: '提示',\n          content: '上传失败',\n          showCancel: false\n        })\n      },\n      complete: function() {\n        wx.hideToast(); //隐藏Toast\n      }\n    });\n  },\n\n})\n\n```\n\n","tags":["小程序"]},{"title":"[小程序] textarea文本域字数控制+显示已输入字数","url":"/2019/04/20//articles/2019/04/20/1555732627000.html/","content":"<a href=\"https://blog.csdn.net/qq_42345906/article/details/85336060\" target=\"_blank\">textarea文本域字数控制+显示已输入字数</a>\n\n.wxml\n```\n<view class=\"conts\">\n    <textarea class=\"areas\" placeholder='空空如也，快点评论吧' minlength=\"{{min}}\" maxlength=\"{{max}}\" bindinput=\"inputs\"> \n        <text class=\"currentWordNumber\">{{currentWordNumber}}/{{max}}</text>\n        <text class=\"hint\">{{texts}}{{num}}{{textss}}</text>\n    </textarea>\n</view>\n```\n\n.wxss\n```\n.conts{\n  width: 750rpx;\n  height: auto;\n  border: 1rpx soldi red;\n  margin-top: 30rpx;\n}\n.areas{\n  height:152rpx;\n  font-size: 30rpx;\n  text-indent: 28rpx;\n  border: 1rpx solid gainsboro;\n  padding-top: 30rpx;\n  margin: 0 auto;\n  overflow: hidden;   \n  position: relative; \n}\n.currentWordNumber{\n  font-size: 28rpx;\n  color: gray;\n  position: absolute;\n  left: 480rpx;\n  top: -6rpx;\n}\n.hint{\n   font-size: 28rpx;\n   position: absolute;\n   top: 130rpx;\n   left: 320rpx;\n   color: #FF6600;\n}\n```\n\njs\n```\nPage({\n  data: {\n    texts: \"至少需要15个字\",\n    min: 15,//最少字数\n    max: 520, //最多字数 (根据自己需求改变) \n    currentWordNumber:0\n  },\n\n  //字数限制  \n  inputs: function (e) {\n    // 获取输入框的内容\n    var value = e.detail.value;\n    // 获取输入框内容的长度\n    var len = parseInt(value.length);\n    console.log(len)\n    //最少字数限制\n    if (len <= this.data.min)\n      this.setData({\n        texts: \"至少还需要\",\n        textss: \"字\",\n        num:this.data.min-len\n      })\n    else if (len > this.data.min)\n      this.setData({\n        texts: \" \",\n        textss: \" \",\n        num:''\n      })\n\n    this.setData({\n      currentWordNumber: len //当前字数  \n    });\n    //最多字数限制\n    if (len > this.data.max) return;\n    // 当输入框内容的长度大于最大长度限制（max)时，终止setData()的执行\n\n    console.log(this.data)\n  }\n})\n```","tags":["小程序"]},{"title":"[小程序] 改变checkbox排列方向","url":"/2019/04/20//articles/2019/04/20/1555732626000.html/","content":"<a href=\"https://blog.csdn.net/wangshop_11/article/details/54236745\" target=\"_blank\">小程序checkbox排列方向</a>\n\nmodule.js\n```\nPage({\n  data: {\n    imageUrls: ['http://img02.tooopen.com/images/20150928/tooopen_sy_143912755726.jpg',\n      'http://img06.tooopen.com/images/20160818/tooopen_sy_175866434296.jpg',\n      'http://img06.tooopen.com/images/20160818/tooopen_sy_175833047715.jpg'],\n    inter: 2000,\n    items: [\n      { name: 'USA', value: '美国' },\n      { name: 'CHN', value: '中国', checked: 'true' },\n      { name: 'BRA', value: '巴西' },\n      { name: 'JPN', value: '日本' },\n      { name: 'ENG', value: '英国' },\n      { name: 'TUR', value: '法国' },\n    ]\n  },\n \n  checkboxChange: function (e) {\n    console.log('checkbox发生chang事件', e.detail.value)\n  },\n\n})\n```\n\n默认水平排列\nmodule.wxml\n```\n<checkbox-group bindchange=\"checkboxChange\">\n  <label wx:for=\"{{items}}\">\n    <checkbox value=\"{{item.name}}\" checked=\"{{item.checked}}\">{{item.value}}</checkbox>\n  </label>\n</checkbox-group>\n```\n\n当checkbox在label标签包裹下需要垂直排列的时候\nmodule.wxml\n```\n<checkbox-group bindchange=\"checkboxChange\">\n  <label style=\"display:flex;\" wx:for=\"{{items}}\">\n    <checkbox value=\"{{item.name}}\" checked=\"{{item.checked}}\">{{item.value}}</checkbox>\n  </label>\n</checkbox-group>\n```\n\n当checkbox在view标签包裹下需要垂直排列的时候\nmodule.wxml\n```\n<checkbox-group  bindchange=\"checkboxChange\">\n  <view style=\"flex-direction:column;\" wx:for=\"{{items}}\">\n    <checkbox value=\"{{item.name}}\" checked=\"{{item.checked}}\">{{item.value}}</checkbox>\n  </view>\n</checkbox-group>\n```","tags":["小程序"]},{"title":"[小程序] 问题反馈","url":"/2019/04/20//articles/2019/04/20/1555732625000.html/","content":"问题反馈\n<a href=\"http://www.lanrenmb.com/xiaochengxujiaocheng/9241.html\" target=\"_blank\">wxml</a>\n<a href=\"http://www.lanrenmb.com/xiaochengxujiaocheng/9241_2.html\" target=\"_blank\">wxss</a>\n<a href=\"http://www.lanrenmb.com/xiaochengxujiaocheng/9241_3.html\" target=\"_blank\">js</a>\n","tags":["小程序"]},{"title":"[小程序] 横向滚动列表","url":"/2019/04/20//articles/2019/04/20/1555732624000.html/","content":"<a href=\"https://blog.csdn.net/qq_28026283/article/details/80985859\" target=\"_blank\">横向滚动列表</a>\n\nwxml\n```xml\n<!-- 横向滑动列表 -->\n<text style='font-size:15px;padding:10px;'>横向滑动列表>></text>\n<scroll-view scroll-x class=\"scroll-x\">\n  <view wx:for=\"{{list}}\" wx:key=\"{{index}}\" class=\"view-parent\">\n    <view class=\"view-item\">{{item.txt}}</view>\n  </view>\n</scroll-view>\n```\n\nwxss\n```css\n.scroll-x{\n    height:80px;\n    white-space:nowrap;\n    display:flex;\n}\n/* 隐藏scrollbar */\n::-webkit-scrollbar{\n    width: 0;\n    height: 0;\n    color: transparent;\n}\n.view-parent{\n    display:inline-block;\n}\n.view-item{\n    width:50px;\n    height:50px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    font-size:12px;\n    font-color:#222;\n    background:#80CBC4;\n    margin:10px;\n}\n```\n\n微信小程序scroll-view仿拼多多横向滑动滚动条\n```\nhttps://blog.csdn.net/hanxue_tyc/article/details/78674075\nhttps://github.com/hanxue10180/shangcheng\nhttps://www.jb51.net/article/143782.htm\n```\n\n","tags":["小程序"]},{"title":"[小程序] view通过background-image设置背景图片","url":"/2019/04/20//articles/2019/04/20/1555732623000.html/","content":"<a href=\"https://www.jianshu.com/p/f908b71422ac\" target=\"_blank\">小程序通过background-image设置背景图片</a>\n```\nview{\n  width:100%;\n  height:100%;\n  text-align:center;\n  background-repeat:no-repeat;\n  background-size:100% 100%;\n  -moz-background-size:100% 100%;\n  background-image:url(\"/path/to/file.png\");\n}\n```","tags":["小程序"]},{"title":"[小程序] 弹出填写框","url":"/2019/04/20//articles/2019/04/20/1555732622000.html/","content":"<a href=\"https://blog.csdn.net/qq_41681675/article/details/81005561\" target=\"_blank\">单个输入</a>\n<a href=\"https://blog.csdn.net/qq_35181466/article/details/80405248\" target=\"_blank\">多个输入</a>\n\n<a href=\"https://www.cnblogs.com/ziyoublog/p/10057600.html\" target=\"_blank\">微信小程序弹出可填写框两种方法</a>\n\njs\n```js\nPage({\n\n  data: {\n  \tifToastBox: \"\",\n  \tinputBoxValue: \"\",\n  },\n\n  resetpwd: function (e) {\n    this.setData({\n      ifToastBox:true\n    });\n  },\n\n  setInputBoxValue: function (e) {\n    this.setData({\n      inputBoxValue: e.detail.value\n    });\n  },\n  cancel: function (e) {\n    this.setData({\n      ifToastBox: false,\n      inputBoxValue: \"\"\n    });\n  },\n  confirm: function (e) {\n    this.setData({\n      ifToastBox: false,\n      inputBoxValue: \"\"\n    });\n  }\n\n})\n\n```\n\n```xml\n<view class='toast-box' hidden='{{!ifToastBox}}'>\n  <view class='toastbg'></view>\n  <view class='showToast'>\n    <view class='toast-title'>\n      <text>修改</text>\n    </view>\n    <view class='toast-main'>\n      <view class='toast-input'>\n        <input placeholder='请输入' bindinput='setInputBoxValue'></input>\n      </view>\n    </view>\n    <view class='toast-button'>\n      <view class='button1'>\n        <button catchtap='cancel'>取消</button>\n      </view>\n      <view class='button2'>\n        <button catchtap='confirm'>确定</button>\n      </view>\n    </view>\n  </view>\n</view>\n```\n\nwcss的\n```css\n.toast-box {\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n}\n \n.toastbg {\n    opacity: 0.2;\n    background-color: black;\n    position: absolute;\n    width: 100%;\n    min-height: 100vh;\n}\n \n.showToast {\n    position: absolute;\n    opacity: 1;\n    width: 70%;\n    margin-left: 15%;\n    margin-top: 40%;\n}\n \n.toast-title {\n    padding-left: 5%;\n    background-color: #2196f3;\n    color: white;\n    padding-top: 2vh;\n    padding-bottom: 2vh;\n    border-top-right-radius: 16rpx;\n    border-top-left-radius: 16rpx;\n}\n \n.toast-main {\n    padding-top: 2vh;\n    padding-bottom: 2vh;\n    background-color: white;\n    text-align: center;\n}\n \n.toast-input {\n    margin-left: 5%;\n    margin-right: 5%;\n    border: 1px solid #ddd;\n    padding-left: 2vh;\n    padding-right: 2vh;\n    padding-top: 1vh;\n    padding-bottom: 1vh;\n}\n \n.toast-button {\n    display: flex;\n}\n \n.button1 {\n    width: 50%;\n}\n \n.button2 {\n    width: 50%;\n}\n \n.button1 button {\n    width: 100%;\n    background-color: white;\n    color: red;\n    border-radius: 0px;\n    border-bottom-left-radius: 16rpx;\n}\n \n.button2 button{\n    width: 100%;\n    background-color: white;\n    color: black;\n    border-radius: 0px;\n    border-bottom-right-radius: 16rpx;\n}\n \n.picker {\n    padding-top: 1vh;\n    padding-bottom: 1vh;\n}\n```","tags":["小程序"]},{"title":"[小程序] 个人信息页面","url":"/2019/04/20//articles/2019/04/20/1555732621000.html/","content":"<a href=\"https://blog.csdn.net/ssh456/article/details/80362239\" target=\"_blank\">个人信息页面</a>\n\n","tags":["小程序"]},{"title":"[小程序] 登陆页面","url":"/2019/04/20//articles/2019/04/20/1555732620000.html/","content":"<a href=\"https://blog.csdn.net/W_SSNY/article/details/80431695\" target=\"_blank\">微信小程序入门（登录页面）</a>\n<a href=\"https://blog.csdn.net/qq_41261758/article/details/80754967\" target=\"_blank\">微信小程序设计用户注册页面</a>\n\n<a href=\"https://blog.csdn.net/zhanjinfeng/article/details/81188264\" target=\"_blank\">小程序登录/注册页面设计</a>\n<a href=\"https://github.com/youzan/zanui-weapp\" target=\"_blank\">github</a>\n\n<a href=\"https://blog.csdn.net/qq_36090190/article/details/80392366\" target=\"_blank\">微信小程序登录注册demo+java服务器</a>\n<a href=\"https://github.com/cuigeg/wxchat\" target=\"_blank\">github</a>\n","tags":["小程序"]},{"title":"[小程序] 通用输入弹框","url":"/2019/04/20//articles/2019/04/20/1555732619000.html/","content":"wxml\n```\n<view class='toast-box' hidden='{{!ifToastBox}}'>\n  <view class='toastbg'></view>\n  <view class='showToast'>\n    <view class='toast-title'>\n      <text>修改</text>\n    </view>\n    <view class='toast-main'>\n      <view class='toast-input'>\n        <input placeholder='请输入' bindinput='setInputBoxValue'></input>\n      </view>\n    </view>\n    <view class='toast-button'>\n      <view class='button1'>\n        <button catchtap='cancel'>取消</button>\n      </view>\n      <view class='button2'>\n        <button catchtap='confirm'>确定</button>\n      </view>\n    </view>\n  </view>\n</view>\n```\n\njs\n```\n  // 通用输入\n  setPhone: function (e) {\n    this.setData({\n      ifToastBox: true\n    });\n  },\n\n  resetpwd: function (e) {\n    this.setData({\n      ifToastBox: true\n    });\n  },\n\n  setInputBoxValue: function (e) {\n    this.setData({\n      inputBoxValue: e.detail.value\n    });\n  },\n  cancel: function (e) {\n    this.setData({\n      ifToastBox: false,\n      inputBoxValue: \"\"\n    });\n  },\n  confirm: function (e) {\n    this.setData({\n      ifToastBox: false,\n      inputBoxValue: \"\"\n    });\n  },\n```\n\nwxss\n```\n/* 弹出框 */\n.toast-box {\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n}\n \n.toastbg {\n    opacity: 0.2;\n    background-color: black;\n    position: absolute;\n    width: 100%;\n    min-height: 100vh;\n}\n \n.showToast {\n    position: absolute;\n    opacity: 1;\n    width: 70%;\n    margin-left: 15%;\n    margin-top: 40%;\n}\n \n.toast-title {\n    padding-left: 5%;\n    background-color: #2196f3;\n    color: white;\n    padding-top: 2vh;\n    padding-bottom: 2vh;\n    border-top-right-radius: 16rpx;\n    border-top-left-radius: 16rpx;\n}\n \n.toast-main {\n    padding-top: 2vh;\n    padding-bottom: 2vh;\n    background-color: white;\n    text-align: center;\n}\n \n.toast-input {\n    margin-left: 5%;\n    margin-right: 5%;\n    border: 1px solid #ddd;\n    padding-left: 2vh;\n    padding-right: 2vh;\n    padding-top: 1vh;\n    padding-bottom: 1vh;\n}\n \n.toast-button {\n    display: flex;\n}\n \n.button1 {\n    width: 50%;\n}\n \n.button2 {\n    width: 50%;\n}\n \n.button1 button {\n    width: 100%;\n    background-color: white;\n    color: red;\n    border-radius: 0px;\n    border-bottom-left-radius: 16rpx;\n}\n \n.button2 button{\n    width: 100%;\n    background-color: white;\n    color: black;\n    border-radius: 0px;\n    border-bottom-right-radius: 16rpx;\n}\n \n.picker {\n    padding-top: 1vh;\n    padding-bottom: 1vh;\n}\n```","tags":["小程序"]},{"title":"[小程序] 拍照或选择图片并上传文件","url":"/2019/04/20//articles/2019/04/20/1555732618000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/zhaoyazhi2129/article/details/53926507\" target=\"_blank\">拍照或选择图片并上传文件</a>\n<a href=\"https://blog.csdn.net/brake_lzk/article/details/81015375\" target=\"_blank\">拍照或相册选取图片+上传到服务器</a>\n\n\n官方API:\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/wx.chooseImage.html\" target=\"_blank\">调用拍照</a>\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/wx.downloadFile.html\" target=\"_blank\">上传文件</a>\n\n\nhtml：\n```\n<button bindtap='uploadPhoto'>拍照选取照片上传</button>\n```\n\njs：\n```\nPage({\n  // 拍摄或从相册选取上传\nuploadPhoto(e) {\nvar that = this;\nwx.chooseImage({\ncount: 1, // 默认9\nsizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有\nsourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有\nsuccess: function (res) {\n// 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\nvar tempFilePaths = res.tempFilePaths;\n  console.log('本地图片的路径:', tempFilePaths )\nupload(that, tempFilePaths)\n}\n})\n},\n})\n\n\n// 上传图片\nfunction upload(page, path) {\nwx.showToast({\nicon: \"loading\",\ntitle: \"正在上传\"\n}),\nwx.uploadFile({\n  url: '图片服务器的路径',\nfilePath: path[0],\nname: 'file',\nheader: { \"Content-Type\": \"multipart/form-data\" },\nformData: {\n//和服务器约定的token, 一般也可以放在header中\n'session_token': wx.getStorageSync('session_token')\n},\nsuccess: function (res) {\n        //上传成功返回数据\nconsole.log('上传成功返回的数据',JSON.parse(res.data).data);\nif (res.statusCode != 200) {\nwx.showModal({\ntitle: '提示',\ncontent: '上传失败',\nshowCancel: false\n})\nreturn;\n}\n},\nfail: function (e) {\nconsole.log(e);\nwx.showModal({\ntitle: '提示',\ncontent: '上传失败',\nshowCancel: false\n})\n},\ncomplete: function () {\nwx.hideToast(); //隐藏Toast\n}\n})\n}\n```","tags":["小程序"]},{"title":"[小程序] 获取用户信息的两种方法","url":"/2019/04/20//articles/2019/04/20/1555732617000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://blog.csdn.net/lucky_Zeng/article/details/80066479\" target=\"_blank\">获取用户信息的两种方法wx.getUserInfo&open-data</a>\n(1)wx.getUserInfo方式\nwxss\n```\nonLoad: function (options) {\n    var that = this;\n    //获取用户信息\n    wx.getUserInfo({\n        success: function (res) {\n            console.log(res);\n            that.data.userInfo = res.userInfo;\n            that.setData({\n                userInfo: that.data.userInfo\n            })\n        }\n    })\n}\n```\nwxml\n```\n<!-- 需要使用 button 来授权登录 -->\n<button wx:if=\"{{canIUse}}\" open-type=\"getUserInfo\" bindgetuserinfo=\"bindGetUserInfo\">授权登录</button>\n<view wx:else>请升级微信版本</view>\n```\njs\n```\nPage({\n  data: {\n    canIUse: wx.canIUse('button.open-type.getUserInfo')\n  },\n  onLoad: function() {\n    // 查看是否授权\n    wx.getSetting({\n      success: function(res){\n        if (res.authSetting['scope.userInfo']) {\n          // 已经授权，可以直接调用 getUserInfo 获取头像昵称\n          wx.getUserInfo({\n            success: function(res) {\n              console.log(res.userInfo)\n            }\n          })\n        }\n      }\n    })\n  },\n  bindGetUserInfo: function(e) {\n    console.log(e.detail.userInfo)\n  }\n});\n```\n(2)open-data\n```\n<!-- 如果只是展示用户头像昵称，可以使用 <open-data /> 组件 -->\n<open-data type=\"userAvatarUrl\"></open-data>\n<open-data type=\"userNickName\"></open-data>\n```","tags":["小程序"]},{"title":"[小程序] 组件","url":"/2019/04/20//articles/2019/04/20/1555732616000.html/","content":"<a href=\"http://www.cnblogs.com/gaogaoyanjiu/p/9537657.html\" target=\"_blank\">微信小程序开源Demo精选</a>\n<a href=\"https://github.com/opendigg/awesome-github-wechat-weapp#Demo\" target=\"_blank\">awesome-github-wechat-weapp</a>\n<a href=\"https://github.com/hawx1993/wxapp-charts\" target=\"_blank\">wxapp-charts</a>\n<a href=\"https://github.com/giscafer/wechat-weapp-mapdemo\" target=\"_blank\">地图wechat-weapp-mapdemo</a>\n<a href=\"https://github.com/xiehui999/SmallAppForQQ/blob/master/pages/study/directory.wxml\" target=\"_blank\">城市三级联动</a>\n\nUI组件\n```\nweui-wxss ★1873 - 同微信原生视觉体验一致的基础样式库\nzanui-weapp ★794 - 好用易扩展的小程序 UI 库\nwx-charts ★449 - 微信小程序图表工具\nWa-UI ★164 - 针对微信小程序整合的一套UI库\nwux ★163 - 微信小程序自定义组件\nwemark ★161 - 微信小程序Markdown渲染库\nwxapp ★131 - 微信小程序组件\nwx-scrollable-tab-view ★116 - 小程序可滑动得tabview\nwxapp-img-loader ★101 - 微信小程序的图片预加载组件\nWeZRender ★96 - 微信小程序Canvas增强组件\nwetoast ★77 - 仿照微信小程序提供的showToast功能\nwx-alphabetical-listview ★71 - 带字母可滑动的列表小程序\nwx-drawer ★70 - 小程序模仿QQ6侧滑菜单\nwxSearch ★70 - 微信小程序优雅的搜索框\nwx_calendar ★65 - 小程序日历\nwxapp-charts ★52 - 微信小程序图表charts组件\nchartjs-wechat-mini-app ★42 - chartjs微信小程序适配\ncitySelect ★42 - 微信小程序城市选择器\nWeiXinProject ★36 - 列表的上拉刷新和上拉加载\nwepy-com-charts ★20 - 微信小程序wepyjs图表控件\nWechatLoading ★14 - 加载框布局LoadingView\nwxTabs ★13 - 微信小程序的多tab实现\nwxapp-lock ★12 - 微信小程序手势解锁\n```\n\n<a href=\"https://github.com/lanfeng1993/LoadDataDemo\" target=\"_blank\">最佳方式实现微信小程序分页加载数据（包模拟数据）</a>\n<a href=\"https://www.cnblogs.com/softwyy/p/9084562.html\" target=\"_blank\">小程序分页加载</a>\n<a href=\"https://blog.csdn.net/xiehuimx/article/details/74938034\" target=\"_blank\">微信小程序分页加载</a>\n<a href=\"https://github.com/xiehui999/SmallAppForQQ\" target=\"_blank\">微信小程序分页加载|SmallAppForQQ</a>\n\nwxapp-微信小程序组件\n<a href=\"https://github.com/youzouzou/wxapp\" target=\"_blank\">github | wxapp</a>\n```\n 文字跑马灯\n 弹出层（常用于选择商品属性）\n 订单好中差评价交互\n 富文本解析(项目地址：https://github.com/icindy/wxParse)\n 左侧可滑动tabbar\n 横向滚动图文\n 省市区三级联动（单页面（小程序的页面层级限制）、多页面两种）\n loading\n 验证码倒计时\n 左滑取消操作、删除\n 单选按钮，复选按钮，on/off开关\n checkbox全选/全不选\n toast(warning,danger)\n 横向可滑动tabbar\n 图片翻页动画\n 瀑布流图文\n 自定义日历（ios有兼容问题，未解决，慎用！隐居中。。。手头暂无iphone，后续再测）\n 商品属性值联动\nPS：欢迎探讨交流~（博客http://blog.csdn.net/qq_24734285）\n```\n","tags":["小程序"]},{"title":"[小程序] 城市选择","url":"/2019/04/20//articles/2019/04/20/1555732615000.html/","content":"<a href=\"https://github.com/chenjinxinlove/citySelect\" target=\"_blank\">github | citySelect</a>","tags":["小程序"]},{"title":"[小程序] flex布局","url":"/2019/04/20//articles/2019/04/20/1555732614000.html/","content":"<a href=\"https://www.cnblogs.com/sun8134/p/6395947.html\">flex布局</a>\n","tags":["小程序"]},{"title":"[小程序] 自定义头部导航栏navigationStyle","url":"/2019/04/20//articles/2019/04/20/1555732613000.html/","content":"<a href=\"https://www.jianshu.com/p/7393c800ba09\" target=\"_blank\">自定义头部导航栏navigationStyle</a>","tags":["小程序"]},{"title":"[springboot] swagger2","url":"/2019/04/03//articles/2019/04/03/1554287412000.html/","content":"<a href=\"https://www.cnblogs.com/mao2080/p/8991027.html\" target=\"_blank\">Springboot集成Swagger操作步骤</a>\n<a href=\"https://www.jianshu.com/p/0438034ee55f\" target=\"_blank\">Swagger注解生成Restful Api文档</a>\n","tags":["springboot"]},{"title":"[springboot] docker-maven-plugin的使用","url":"/2019/04/03//articles/2019/04/03/1554287410000.html/","content":"<a href=\"https://blog.csdn.net/isea533/article/details/43225717\" target=\"_blank\">ECharts-Java使用Java快速开发ECharts图表</a>\n<a href=\"http://git.oschina.net/free/ECharts\" target=\"_blank\">git.oschina|ECharts</a>\n<a href=\"https://github.com/abel533/ECharts\" target=\"_blank\">github|ECharts</a>\n","tags":["springboot"]},{"title":"[springboot] docker-maven-plugin的使用","url":"/2019/04/03//articles/2019/04/03/1554287409000.html/","content":"<a href=\"https://www.cnblogs.com/atliwen/p/6101946.html\" target=\"_blank\">docker-maven-plugin 完全免Dockerfile 文件</a>\n\n<a href=\"https://blog.csdn.net/She_lock/article/details/79557022\" target=\"_blank\">使用docker-maven-plugin插件构建和推送Docker映像</a>\n\n<a href=\"https://www.jb51.net/article/136747.htm\" target=\"_blank\">脚本之家|使用Docker部署Spring Boot的应用示例</a>\n\n<a href=\"https://www.jianshu.com/p/3b91b8958c3e\" target=\"_blank\">简书|docker-maven-plugin的使用</a>\n```\n<properties>\n    <docker.image.prefix>code</docker.image.prefix>\n</properties>\n\n<build>\n    <plugins>\n\n        <plugin>\n            <groupId>com.spotify</groupId>\n            <artifactId>docker-maven-plugin</artifactId>\n            <version>0.4.11</version>\n            <configuration>\n                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>\n                <dockerDirectory>src/main/docker</dockerDirectory>\n\n                <!--<baseImage>java</baseImage>-->\n                <!--<entryPoint>[\"java\", \"-jar\", \"/${project.build.finalName}.jar\"]</entryPoint>-->\n                <!--<dockerHost>http://192.168.56.102:2375</dockerHost>-->\n\n                <resources>\n                    <resource>\n                        <targetPath>/</targetPath>\n                        <directory>${project.build.directory}</directory>\n                        <include>${project.build.finalName}.jar</include>\n                    </resource>\n                </resources>\n            </configuration>\n        </plugin>\n\n    </plugins>\n</build>\n```\n按照上面的配置之后，可以使用如下命令生成一个镜像\n```\nmvn clean package docker:build\n```\n将生成的镜像推送到镜像注册中心，通过pushImage标签\n```\nmvn clean package docker:build -DpushImage\n```\n如果推送制定tags 的镜像，可使用pushImageTag标签\n```\nmvn clean package docker:build -DpushImageTag\n```\n\nCentos 7 安装 Docker 环境\n\n> 1.安装docker\n\n```\nyum install docker\n```\n\n> 2.将 docker 服务其设置为开机启动：\n\n```\nservice docker start\nchkconfig docker on\n\n#LCTT 译注：此处采用了旧式的 sysv 语法，如采用CentOS 7中支持的新式 systemd 语法，如下：\nsystemctl start docker.service\nsystemctl enable docker.service\n```\n\n> 3.使用Docker 中国加速器\n\n```\nvi /etc/docker/daemon.json\n#添加后：\n{\n  \"registry-mirrors\": [\"https://registry.docker-cn.com\"],\n  \"live-restore\": true\n}\n#重新启动docker\nsystemctl restart docker\n#输入 docker version 返回版本信息则安装正常。\ndocker version\n```\n\n> 4.安装JDK\n\n```\nyum -y install java-1.8.0-openjdk*\n\n#配置环境变量 打开 vim /etc/profile 添加一下内容\nexport JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.x86_64 \nexport PATH=$PATH:$JAVA_HOME/bin\n#修改完成之后，使其生效\nsource /etc/profile\n#输入 java -version 返回版本信息则安装正常。\njava -version\n```\n\n> 5.安装maven\n\n<a href=\"http://mirrors.shu.edu.cn/apache/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz\" target=\"_blank\">apache-maven-3.5.2-bin.tar.gz</a>\n```\n## 解压\ntar vxf apache-maven-3.5.2-bin.tar.gz\n## 移动\nmv apache-maven-3.5.2 /usr/local/maven3\n#修改环境变量， 在 /etc/profile 中添加以下几行\nvim /etc/profile\nMAVEN_HOME=/usr/local/maven3\nexport MAVEN_HOME\nexport PATH=${PATH}:${MAVEN_HOME}/bin\n#记得执行 source /etc/profile 使环境变量生效。\nsource /etc/profile\n#输入 mvn -version 返回版本信息则安装正常。\nmvn -version\n```\n\n> 6.使用 Docker 部署 Spring Boot 项目\n\n```\n#进入项目路径下进行打包测试。\nmvn package\n#启动\njava -jar target/spring-boot-docker-1.0.jar\n#看到 Spring Boot 的启动日志后表明环境配置没有问题，接下来我们使用 DockerFile 构建镜像。\nmvn package docker:build\ndocker images\n#启动\ndocker run -p 8080:8080 -t springboot/spring-boot-docker\n#查看容器运行\ndocker ps\n\n#访问浏览器： http://192.168.0.x:8080/ ,返回 Hello Docker!，说明使用 Docker 部署 Spring Boot 项目成功！\n```\n示例代码：\n<a href=\"https://github.com/ityouknow/spring-boot-examples\" target=\"_blank\">spring-boot-examples</a>","tags":["springboot"]},{"title":"[springboot] 监听session","url":"/2019/04/03//articles/2019/04/03/1554287407000.html/","content":"\nRequestListener.java\n```java\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Component;\n\nimport javax.servlet.ServletRequestEvent;\nimport javax.servlet.ServletRequestListener;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpSession;\n\n@Component\npublic class RequestListener implements ServletRequestListener {\n\n    Logger logger = LoggerFactory.getLogger(RequestListener.class);\n\n    @Override\n    public void requestInitialized(ServletRequestEvent sre) {\n        //将所有request请求都携带上httpSession\n        HttpSession session = ((HttpServletRequest) sre.getServletRequest()).getSession();\n\n//        logger.warn(\"sessionId: {}\", session.getId());\n//        logger.warn(\"currentCompanyId: {}\", session.getAttribute(\"targetAttr\"));\n    }\n\n    public RequestListener() {\n    }\n\n    @Override\n    public void requestDestroyed(ServletRequestEvent servletRequestEvent) {\n    }\n}\n```","tags":["springboot"]},{"title":"[springmvc] c3p0连接池","url":"/2019/04/03//articles/2019/04/03/1554287407000.html/","content":"<a href=\"https://www.cnblogs.com/ygj0930/p/6405861.html\" target=\"_blank\">C3P0连接池使用教程</a>\n\n> maven+spring+jsp+C3P0\n\n<a href=\"https://github.com/ygj0930/CoupleSpace\" target=\"_blank\">github|情侣日志网站</a>\n","tags":["springmvc"]},{"title":"[spring] spring+security","url":"/2019/04/03//articles/2019/04/03/1554287406000.html/","content":"<a href=\"https://www.cnblogs.com/hehaiyang/category/649866.html\" target=\"_blank\">SpringSecurity 3.2入门</a>\n```\n（1） 框架介绍\n（2） 环境搭建\n（3） 单用户登录\n（4） 登录密码加密\n（5） 自定义登录页面\n（6） 简单介绍默认使用的十一个过滤器\n（7） 自定义权限控制介绍\n（8） 自定义权限控制数据库设计\n（9） 自定义权限控制代码实现\n（10）自定义权限控制认证及授权的过程\n```","tags":["spring"]},{"title":"[spring] spring+struts+hibernate","url":"/2019/04/03//articles/2019/04/03/1554287405000.html/","content":"<a href=\"https://blog.csdn.net/Cs_hnu_scw/article/details/78849772\" target=\"_blank\">手把手ssh</a>\n<a href=\"https://blog.csdn.net/ansellyy/article/details/80998551#comments\" target=\"_blank\">基于 SSH 框架的学生选课系统</a>\n","tags":["spring"]},{"title":"[批处理] cmd快捷大全","url":"/2019/03/21//articles/2019/03/21/1553178509000.html/","content":"\n```\n#\t显示和修改地址解析协议(ARP)使用的 \"IP 到物理\" 地址转换表（操作当前arp缓存）：\narp\n#\t显示arp缓存\narp -a\n#\t删除一条缓存纪录\narp -d\n#\t添加一条缓存纪录\narp -s\n\n#\t显示或修改文件扩展名关联\t\nassoc\n\n#\t安排在特定日期或时间执行某个特定的命令和程序，经常结合net time命令使用\t\nat time command \\computer\n\n#\t显示或更改文件属性\t\nattrib\n\n#\t设置启动数据库中的属性以控制启动加载\t\nbcdedit\n\n#\t设置或清除扩展式 CTRL+C 检查\t\nbreak\n\n#\t显示或修改文件的访问控制列表(ACL)\t\ncacls\n\n#\t启动计算器\t\ncalc\n\n#\t从另一个批处理程序调用这一个\t\ncall\n\n#\t显示当前目录的名称或将其更改\t\ncd\n\n#\t证书管理实用程序\t\ncertmgr.msc\n\n#\t启动字符映射表\t\ncharmap\n\n#\t显示或设置活动代码页数\t\nchcp\n\n#\t显示当前目录的名称或将其更改\t\nchdir\n\n#\t检查磁盘并显示状态报告\t\nchkdsk\n\n#\t显示或修改启动时间磁盘检查\t\nchkntfs\n\n#\t索引服务程序\t\nciadv.msc\n\n#\t磁盘清理\t\ncleanmgr\n\n#\tSQL Server 客户端网络实用工具\t\ncliconfg\n\n#\t清除屏幕\t\ncls\n\n#\t打开另一个 Windows 命令解释程序窗口\t\ncmd\n\n#\t设置默认控制台前景和背景颜色\t\ncolor\n\n#\t比较两个或两套文件的内容\t\ncomp\n\n#\t显示或更改 NTFS 分区上文件的压缩\t\ncompact\n\n#\t计算机管理\t\ncompmgmt.msc\n\n#\t将 FAT 卷转换成 NTFS。你不能转换当前驱动器\t\nconvert\n\n#\t将至少一个文件复制到另一个位置\t\ncopy\n\n#\t显示或设置日期\t\ndate\n\n#\t打开系统组件服务\t\ndcomcnfg\n\n#\t删除至少一个文件\t\ndel\n\n#\t删除文件夹和其下面的所有子文件夹和文件，慎用\t\ndeltree\n\n#\t设备管理器\t\ndevmgmt.msc\n\n#\t显示一个目录中的文件和子目录\t\ndir\n\n#\t磁盘管理实用程序\t\ndiskmgmt.msc\n\n#\t显示或配置磁盘分区属性\t\ndiskpart\n\n#\t编辑命令行、撤回 Windows 命令并创建宏\t\ndoskey\n\n#\t显示当前设备驱动程序状态和属性\t\ndriverquery\n\n#\tDVD播放器，如果没有回打开Windows Media Play\t\ndvdplay\n\n#\tDirectX诊断工具\t\ndxdiag\n\n#\t显示消息，或将命令回显打开或关闭\t\necho\n\n#\t结束批文件中环境更改的本地化\t\nendlocal\n\n#\t删除一个或多个文件\t\nerase\n\n#\t造字程序（专用字符编辑程序）\t\neudcedit\n\n#\t事件查看器\t\neventvwr\n\n#\t退出 CMD.EXE 程序(命令解释程序)\t\nexit\n\n#\t打开资源管理器\t\nexplorer\n\n#\t比较两个文件或两个文件集并显示它们之间的不同\t\nfc\n\n#\t在一个或多个文件中搜索一个文本字符串\t\nfind\n\n#\t在多个文件中搜索字符串\t\nfindstr\n\n#\t显示与运行手指服务的指定系统上某个用户有关的信息。输出因远程系统而异\t\nfinger\n\n#\t为一组文件中的每个文件运行一个指定的命令\t\nfor\n\n#\t格式化磁盘\t\nformat\n\n#\t共享文件夹管理器\t\nfsmgmt.msc\n\n#\t显示或配置文件系统属性\t\nfsutil\n\n#\tFTP指令集（本文不细讲了，自己敲help吧）\t\nftp\n\n#\t显示或修改在文件扩展名关联中使用的文件类型\t\nftype\n\n#\t将 Windows 命令解释程序定向到批处理程序中某个带标签的行\t\ngoto\n\n#\t本地组策略编辑器\t\ngpedit.msc\n\n#\t显示计算机或用户的组策略信息\t\ngpresult\n\n#\t使 Windows 在图形模式下显示扩展字符集\t\ngraftabl\n\n#\t提供 Windows 命令的帮助信息\t\nhelp\n\n#\t显示、修改、备份或还原文件和目录的 ACL\t\nicacls\n\n#\t木马捆绑工具，系统自带\t\niexpress\n\n#\t在批处理程序中执行有条件的处理操作\t\nif\n\n\n#\tWindows IP配置指令集\nipconfig\n\n#\t显示详细信息\nipconfig /all\n\n#\t更新所有适配器 \nipconfig /renew\n\n#\t更新所有名称以 EL 开头的连接 \nipconfig /renew EL*\n\n#\t释放所有匹配的连接，例如 \"有线以太网连接 1\"或 \"有线以太网连接 2\" \nipconfig /release *Con*\n\n#\t显示有关所有隔离舱的信息 \nipconfig /allcompartments\n\n#\t显示有关所有隔离舱的详细信息\nipconfig /allcompartments /all\n\n#\t创建、更改或删除磁盘的卷标\t\nlabel\n\n#\t注销命令\t\nlogoff\n\n#\t本机用户和组\t\nlusrmgr.msc\n\n#\t放大镜实用程序\t\nmagnify\n\n#\t创建一个目录\t\nmd\n\n#\t创建一个目录\t\nmkdir\n\n#\t创建符号链接和硬链接\t\nmklink\n\n#\t打开控制台\t\nmmc\n\n#\t同步中心\t\nmobsync\n\n#\t配置系统设备\t\nmode\n\n#\t逐屏显示输出\t\nmore\n\n#\t将一个或多个文件从一个目录移动到另一个目录\t\nmove\n\n#\t系统配置实用程序\t\nmsconfig\n\n#\t画图\t\nmspaint\n\n#\t远程桌面连接\t\nmstsc\n\n#\t屏幕'讲述人'\t\nnarrator\n\n#\t显示协议统计和当前使用 NBI 的 TCP/IP 连接(在 TCP/IP 上的 NetBIOS)\t\nnbtstat\n\n#\t网络指令集，有很多子命令，建议掌握\t\nnet\n\n#\t查看所有和用户组有关的信息和进行相关操作，如可利用它来把某个帐户提升为administrator组帐户\nlocalgroup groupname username /add\t\n\n#\t\nnet\n\n#\t启动远程主机上的服务\t\nnet start servername\n\n#\t停止远程主机上的某服务\t\nnet stop servername\n\n#\t查看远程主机当前的时间\t\nnet time\n\n#\t把远程主机的某个共享资源影射为本地盘符\t\nnet use x: \\IP\\sharename\n\n#   查看和帐户有关的情况，包括新建帐户、删除帐户、查看特定帐户、激活帐户、帐户禁用等。 \nnet user\n\n#   查看用户名为abcd的用户的情况\nnet user abcd\n\n#   新建一个用户名为abcd，密码为1234的帐户，默认为user组成员\nnet user abcd 1234 /add\n\n#   将用户名为abcd的用户删除 net user abcd\nnet user abcd /del\n\n#   将用户名为abcd的用户禁用\nnet user abcd /active:no\n\n#   激活用户名为abcd的用户\nnet user abcd /active:yes\n\n#\t查看网络状态的命令（活动链接）\t\nnetstat\n\n#   (TC)命令检查接口\t\nnetstat -an\n\n#\t打开记事本\t\nnotepad\n\n#\t域名服务器及IP查询，敲入exit命令退出\t\nnslookup\n\n#\tODBC数据源管理程序\t\nodbcad32\n\n#\t显示远程用户为了文件共享而打开的文件\t\nopenfiles\n\n#\t打开屏幕键盘\t\nosk\n\n#\t为可执行文件显示或设置搜索路径\t\npath\n\n#\t类似tracert，但可以显示一些tracert不能显示的信息\t\npathing\n\n#\t暂停批处理文件的处理并显示消息\t\npause\n\n#\t计算机性能监视器\t\nperfmon.msc\n\n#\t用来检查网络是否通畅或者网络连接速度的命令\t\nping\n\n#\t还原通过 PUSHD 保存的当前目录的上一个值\t\npopd\n\n#\t打印一个文本文件\t\nprint\n\n#\t更改 Windows 命令提示\t\nprompt\n\n#\t保存当前目录，然后对其进行更改\t\npushd\n\n#\t删除目录\t\nrd\n\n#\t从损坏的或有缺陷的磁盘中恢复可读信息\t\nrecover\n\n#\t注册表编辑器\t\nregedit\n\n#\t注册表编辑器\t\nregedt32\n\n#\t记录批处理文件或 CONFIG.SYS 中的注释(批注)\t\nrem\n\n#\t重命名文件\t\nren\n\n#\t重命名文件\t\nrename\n\n#\t替换文件\t\nreplace\n\n#\t删除目录\t\nrmdir\n\n#\t复制文件和目录树的高级实用工具\t\nrobocopy\n\n#\t组策略结果集\t\nrsop.msc\n\n#\t显示或配置服务(后台进程)\t\nsc\n\n#\t安排在一台计算机上运行命令和程序\t\nschtasks\n\n#\t本地安全策略\t\nsecpol.msc\n\n#\t本地服务设置\t\nservices.msc\n\n#\t显示、设置或删除 Windows 环境变量\t\nset\n\n#\t开始本地化批处理文件中的环境更改\t\nsetlocal\n\n#\t系统文件检查器\t\nsfc\n\n#\tWindows系统文件保护（扫描与修复，按Crtl+C中断）\t\nsfc /scannow\n\n#\t调整批处理文件中可替换参数的位置\t\nshift\n\n#\t创建共享文件夹向导\t\nshrpubw\n\n#\t允许通过本地或远程方式正确关闭计算机\t\nshutdown\n\n#\t文件签名验证程序\t\nsigverif\n\n#\t对输入排序\t\nsort\n\n#\t启动单独的窗口以运行指定的程序或命令\t\nstart\n\n#\t将路径与驱动器号关联\t\nsubst\n\n#\t显示计算机的特定属性和配置\t\nsysteminfo\n\n#\t中止或停止正在运行的进程或应用程序\t\ntaskkill\n\n#\t显示包括服务在内的所有当前运行的任务\t\ntasklist\n\n#\t任务管理器\t\ntaskmgr\n\n#\t远程登陆命令（本文不细讲了，自己敲help吧）\t\ntelnet\n\n#\t显示或设置系统时间\t\ntime\n\n#\t设置 CMD.EXE 会话的窗口标题\t\ntitle\n\n#\t跟踪路由信息，查出数据从本地机器传输到目标主机所经过的所有途径\t\ntracert\n\n#\t以图形方式显示驱动程序或路径的目录结构\t\ntree\n\n#\t显示文本文件的内容\t\ntype\n\n#\t辅助工具管理器（讲述人）\t\nutilman\n\n#\t显示 Windows 的版本\t\nver\n\n#\t告诉 Windows 是否进行验证，以确保文件正确写入磁盘\t\nverify\n\n#\t显示磁盘卷标和序列号\t\nvol\n\n#\t扫描仪和照相机向导\t\nwiaacmgr\n\n#\t关于 \"Windows\"\t\nwinver\n\n#\t在交互式命令 shell 中显示 WMI 信息\t\nwmic\n\n#\t打开Windows管理体系结构(WMI)\t\nwmimgmt.msc\n\n#\t写字板\t\nwrite\n\n#\tWindows脚本宿主设置\t\nwscript\n\n#\tWindows 更新独立安装程序\t\nwusa\n\n#\t复制文件和目录树\nxcopy\n\n#============================== 限WinXP ==============================\n#\t剪贴板查看器\t限WinXP\nclipbrd\n#\t启动netmeeting\t限WinXP\nconf\n#\t打开DDE共享设置\t限WinXP\nddeshare\n#\t磁盘碎片整理程序\t限WinXP\ndfrg.msc\n#\t系统医生\t限WinXP\ndrwtsn32\n#\t显示内存使用情况\t限WinXP\nmem\n#\t开始信使服务\t限WinXP\nnet start messenger\n#\t停止信使服务\t限WinXP\nnet stop messenger\n#\t系统备份和还原\t限WinXP\nntbackup\n#\t移动存储管理器\t限WinXP\nntmsmgr.msc\n#\t移动存储管理员操作请求\t限WinXP\nntmsoprq.msc\n#\t检查XP是否激活\t限WinXP\noobe /msoobe /a\n#\t对象包装程序\t限WinXP\npackager\n#\t程序管理器\t限WinXP\nprogman\n#\t停止dll文件运行\t限WinXP\nregsvr32 /u *.dll\n#\t取消ZIP支持\t限WinXP\nregsvr32 /u zipfldr.dll\n#\t15秒关机\t限WinXP\nrononce -p\n#\t录音机\t限WinXP\nsndrec32\n#\t音量控制程序\t限WinXP\nsndvol32\n#\t创建一个公文包\t限WinXP\nsyncapp\n#\t系统配置编辑器\t限WinXP\nsysedit\n#\t系统加密，一旦加密就不能解开，保护Windows XP系统的双重密码\t限WinXP\nsyskey\n#\tWinXP简介（漫游简介）\t限WinXP\ntourstart\n#\t60秒倒计时关机命令\t限WinXP\ntsshutdn\n#\t局域网聊天\t限WinXP\nwinchat\n#\t系统信息\t限WinXP\nwinmsd\n#\tWindows更新程序\t限WinXP\nwupdmgr\n```\n\n","tags":["批处理"]},{"title":"[docker] SpringBoot利用Docker整合RabbitMQ","url":"/2019/03/21//articles/2019/03/21/1553178508000.html/","content":"<a href=\"https://www.cnblogs.com/NeverCtrl-C/p/9563339.html\" target=\"_blank\">docker+springboot+mq</a>\n<a href=\"https://gitee.com/wysfury/SpringBoot_RabbitMQ01\" target=\"_blank\">github</a>\n```\ndocker pull rabbitmq:3.7.7-management\n# 查看镜像\ndocker images\n# 创建并启动rabbitMQ容器\ndocker run -d --hostname my-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3.7.7-management\ndocker ps\n# 访问，用户名和密码：guest/guest\ndocker inspect |grep \"IPAddress\"\n```\n\n> 其它\n\n<a href=\"https://blog.csdn.net/hsg_happylearning/article/details/82314082\" target=\"_blank\">SpringBoot利用Docker整合RabbitMQ</a>\n<a href=\"https://www.cnblogs.com/hhhshct/p/9718063.html\" target=\"_blank\">springboot整合rabbitMQ</a>","tags":["docker"]},{"title":"[jpa] 利用Eclipse的JPA自动生成注解实体","url":"/2019/03/21//articles/2019/03/21/1553178507000.html/","content":"<a href=\"https://www.cnblogs.com/pretty-sunshine/p/7219727.html\" target=\"_blank\">利用Eclipse的JPA自动生成注解实体</a>\n<a href=\"https://www.2cto.com/database/201501/372023.html\" target=\"_blank\">Eclipse从数据库逆向生成Hibernate带注解的实体类</a>\n\n","tags":["jpa"]},{"title":"[springboot] 静态资源和拦截器处理","url":"/2019/03/21//articles/2019/03/21/1553178506000.html/","content":"<a href=\"https://www.cnblogs.com/java-synchronized/p/7091723.html\" target=\"_blank\">springboot中静态资源和拦截器处理</a>\n```\nspring.mvc.static-path-pattern=/static/**\n```","tags":["springboot"]},{"title":"[java] json转实体类对象","url":"/2019/03/21//articles/2019/03/21/1553178505000.html/","content":"pom.xml\n```xml\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>fastjson</artifactId>\n    <version>1.2.54</version>\n</dependency>\n```\n创建对象\n```java\nimport java.io.Serializable;\nimport com.alibaba.fastjson.annotation.JSONField;\npublic class Demo implements Serializable{\n\n\tprivate static final long serialVersionUID = 1L;\n\n\tprivate String a;\n\tprivate String b;\t\n\t\n\t//对应json中的key值\n\t@JSONField(name = \"a\")\n\tpublic String getA() {\n\t\treturn a;\n\t}\n\tpublic void setA(String a) {\n\t\tthis.a = a;\n\t}\n\t@JSONField(name = \"b\")\n\tpublic String getB() {\n\t\treturn b;\n\t}\n\tpublic void setB(String b) {\n\t\tthis.b = b;\n\t}\n}\n```\n2、使用alibabajson把json字符串转对象\n```java\nimport com.alibaba.fastjson.JSON;\n\npublic class App{\n\tpublic static void main(String[] args){\n\t     String jsonStr = \"{a:'50',b:'55'}\";\n\t     Demo demo =  JSONStr.parseObject(jsonStr,Demo.class);\n\t}\n}\n```\n","tags":["java"]},{"title":"[layui] 多文件上传","url":"/2019/03/21//articles/2019/03/21/1553178504000.html/","content":"```\n layui.use(['table', 'form', 'upload'], function () {\n        var table = layui.table;\n        var form = layui.form;\n        var upload = layui.upload;\n\n        form.render();\n\n        var addHtml = $('#imgShowDiv').html();\n        $('#imgShowDiv').remove();\n\n        $(\"#imgShowBtn\").click(function () {\n            layer.open({\n                title: '上传图片',\n                content: addHtml,\n                area: ['700px', '600px'],\n                btn: '关闭',\n                closeBtn: 1,\n                success: function () {\n\n                    //多文件列表示例\n                    var imgListView = $('#imgList'), uploadListIns = upload.render({\n                        elem: '#imgUpload',\n                        url: contextPath + '/user/uploadImp/',\n                        /*before:function(input){\n                            var data = {'id':'2'}\n\n                        }*/\n                        accept: 'file',\n                        multiple: true,\n                        auto: false,\n                        bindAction: '#imgListAction',\n                        choose: function (obj) {\n                            var files = this.files = obj.pushFile(); //将每次选择的文件追加到文件队列\n                            obj.preview(function (index, file, result) {\n                                //debugger;\n                                var tr = $(['<tr id=\"upload-' + index + '\">',\n                                    '<td>' + file.name + '</td>',\n                                    '<td>' + (file.size / 1014).toFixed(1) + 'kb</td>',\n                                    '<td>等待上传</td>',\n                                    '<td>',\n                                    '<button class=\"layui-btn layui-btn-xs layui-btn-danger demo-delete\"  style=\"background-color: red;\">删除</button>',\n                                    '</td>',\n                                    '</tr>'].join(''));\n                                //单个重传\n                                tr.find('.demo-reload').on('click', function () {\n                                    obj.upload(index, file);\n                                });\n\n                                //删除\n                                tr.find('.demo-delete').on('click', function () {\n                                    delete files[index]; //删除对应的文件\n                                    tr.remove();\n                                    uploadListIns.config.elem.next()[0].value = ''; //清空 input file 值，以免删除后出现同名文件不可选\n                                });\n\n                                imgListView.append(tr);\n                            });\n                        },\n                        before: function (obj) {\n                            $(\"#imgListAction\").attr(\"disabled\", true);\n                            debugger;\n                        },\n                        done: function (res, index, upload) {\n                            if (res.code == 200) { //上传成功\n                                var tr = imgListView.find('tr#upload-' + index), tds = tr.children();\n                                tds.eq(2).html('<span style=\"color: #5FB878;\">上传成功</span>');\n                                tds.eq(3).html(''); //清空操作\n                                return delete this.files[index]; //删除文件队列已经上传成功的文件\n                            }\n                            this.error(index, upload, res);\n                        },\n                        error: function (index, upload, res) {\n                            var tr = imgListView.find('tr#upload-' + index), tds = tr.children();\n                            tds.eq(2).html('<span style=\"color: #FF5722;\">' + res.msg + '</span>');\n                            tds.eq(3).find('.demo-reload').removeClass('layui-hide'); //显示重传\n                        },\n                        allDone: function (obj) {\n                            $(\"#imgListAction\").attr(\"disabled\", false);\n                        }\n                    });\n                },\n                end: function () { // 只要层被销毁了，end都会执行\n                    table.reload('userTable');\n                }\n            });\n        });\n```","tags":["layui"]},{"title":"[layui] 封装模态框和ajax构建菜单","url":"/2019/03/21//articles/2019/03/21/1553178503000.html/","content":"\n```js\nlayui.use(['form', 'layer'], function() {\n    var form = layui.form;\n    var layer = layui.layer;\n\n    form.render();\n\n\n    var contextPath = 'http://localhost'\n\n\n    $(document).ready(function() {\n\n        layerOpen(\"编辑\", ['50%', '50%'], $(\"#showContent\"), function(form) {\n\n            ajaxSelectBuilder(form, \"/path/to/getMenuList\", {\n                companyCode: data.value\n            }, $(\"#targetSelectId\"), function(obj) {\n                return {\n                    id: obj.id,\n                    name: obj.name\n                }\n            });\n\n            form.val('targetFormFilter', {\n\n            });\n\n        }, function() {\n\n            confirmPromise('是否确定请求abc操作', 'tableFilterId', '/path/to/operation', {\n                voData: JSON.stringify({\n                    id: data.id\n                })\n            }, function(data) {\n\n            });\n\n        });\n\n    });\n\n    //ajax形成 select 选项\n    function ajaxSelectBuilder(form, menuPath, data, idSelector, objCallback) {\n        idSelector.empty();\n        idSelector.append('<option value=\"\" selected=\"selected\">请选择</option>');\n        $.ajax({\n            url: contextPath + menuPath,\n            dataType: 'json',\n            type: 'post',\n            async: false,\n            data: data,\n            complete: function(XHR, TS) {\n                var returnObj = eval('(' + XHR.responseText + ')');\n                $.each(returnObj, function(i, obj) {\n                    var idName = objCallback(obj);\n                    idSelector.append('<option value=\"' + idName.id + '\">' + idName.name + '</option>');\n                });\n                form.render();\n            }\n        });\n    }\n\n\n    function normalPromise(tableFilterId, path, data, successCallback) {\n        layui.use(['layer', 'table', 'form'], function() {\n            let layer = layui.layer;\n            let table = layui.table;\n            let form = layui.form;\n\n            $.ajax({\n                url: contextPath + path,\n                dataType: 'json',\n                type: 'post',\n                async: false,\n                data: data,\n                complete: function(XHR, TS) {\n                    let returnObj = eval('(' + XHR.responseText + ')');\n                    if (returnObj.code != 200) {\n                        layer.msg(returnObj.msg, {\n                            icon: 2,\n                            time: 1500\n                        });\n                    } else {\n                        layer.msg(returnObj.msg, {\n                            icon: 1,\n                            time: 1500\n                        });\n                        typeof successCallback == 'function' & successCallback(returnObj.data);\n                    }\n                    table.reload(tableFilterId);\n                }\n            });\n        });\n    }\n\n    function confirmPromise(confirmTxt, tableFilterId, path, data, successCallback) {\n        layui.use(['layer', 'table', 'form'], function() {\n            let layer = layui.layer;\n            let table = layui.table;\n            let form = layui.form;\n\n            layer.confirm(confirmTxt, function(index) {\n                $.ajax({\n                    url: contextPath + path,\n                    dataType: 'json',\n                    type: 'post',\n                    async: false,\n                    data: data,\n                    complete: function(XHR, TS) {\n                        let returnObj = eval('(' + XHR.responseText + ')');\n                        if (returnObj.code != 200) {\n                            layer.msg(returnObj.msg, {\n                                icon: 2,\n                                time: 1500\n                            });\n                        } else {\n                            layer.msg(returnObj.msg, {\n                                icon: 1,\n                                time: 1500\n                            });\n                            typeof successCallback == 'function' & successCallback(returnObj.data);\n                        }\n                        layer.close(index);\n                        table.reload(tableFilterId);\n                    }\n                });\n            });\n        });\n    }\n\n\n    function layerOpen(showTitle, area, showContentSelector, editPrepareCallback, yesCallback) {\n        var showContent = showContentSelector.html();\n        showContentSelector.html(\"\");\n\n        layui.use(['layer', 'table', 'form'], function() {\n            let layer = layui.layer;\n            let table = layui.table;\n            let form = layui.form;\n\n            layer.open({\n                type: 1,\n                id: 'showLayui',\n                title: showTitle,\n                content: showContent,\n                area: area,\n                btn: ['确定', '取消'],\n                btnAlign: 'c',\n                success: function(layero, index) {\n                    typeof editPrepareCallback == 'function' & editPrepareCallback(form)\n                    form.render();\n                },\n                yes: function(index, layero) { // 确定按钮\n                    typeof yesCallback == 'function' & yesCallback()\n                    layer.close(index);\n                },\n                end: function() { // 只要层被销毁了，end都会执行\n                    showContentSelector.html(showContent);\n                }\n            });\n        });\n    }\n\n});\n```","tags":["layui"]},{"title":"[layui] layui+百度地图API定位","url":"/2019/03/21//articles/2019/03/21/1553178502000.html/","content":"```js\n$(document).ready(function() {\n\n    getLocation(\n        'bmapId',\n        'locateCityBtnId',\n        'locateCityId',\n        'provinceNameId',\n        'cityNameId',\n        'areaNameId',\n        'detailsLocationId',\n        'longitudeId',\n        'latitudeId',\n         data,\n        'add'\n    );\n\n});\n\n\nfunction getLocation(bmapId, locateCityBtnId, locateCityId, provinceNameId, cityNameId, areaNameId, detailsLocationId, longitudeId, latitudeId, openType, data) {\n    var myCity = new BMap.LocalCity();\n    myCity.get(myFun);\n\n    // 百度地图API功能\n    var map = new BMap.Map(bmapId);\n    var point = new BMap.Point(116.331398, 39.897445); //地图中心点\n    map.centerAndZoom(point, 12); //缩放层级\n    map.enableScrollWheelZoom(); // 启用滚轮放大缩小，默认禁用\n    var geocoder = new BMap.Geocoder(); //计算\n    //\"定位\"按钮\n    $(\"#\" + locateCityBtnId).click(function() {\n        var cityName = $(\"#\" + locateCityId).val();\n        if (cityName != \"\") {\n            map.centerAndZoom(cityName, 11); // 用城市名设置地图中心点\n        }\n    });\n\n    map.addEventListener(\"click\", showInfo);\n\n    if (openType == \"add\") {\n        function myFun(result) {\n            var cityName = result.name;\n            $(\"#\" + locateCityId).val(cityName);\n            map.setCenter(cityName);\n        }\n    } else if (openType == \"edit\") {\n        $(\"#\" + locateCityId).val(data.cityName);\n        var new_point = new BMap.Point(data.longitude, data.latitude);\n        var marker = new BMap.Marker(new_point);\n        map.addOverlay(marker);\n        map.centerAndZoom(new_point, 15);\n    }\n\n    var myCity = new BMap.LocalCity();\n    myCity.get(myFun);\n\n    //鼠标点击地图，增加点\n    function showInfo(e) {\n        map.clearOverlays();\n        var marker = new BMap.Marker(e.point);\n        map.addOverlay(marker);\n        geocoder.getLocation(e.point, function(rs) {\n            var provincesOverAll = rs.addressComponents.province;\n            var cityOverAll = rs.addressComponents.city;\n            var countyOverAll = rs.addressComponents.district;\n            var detailsOverAll = rs.addressComponents.street;\n            longitudeOverAll = e.point.lng;\n            latitudeOverAll = e.point.lat;\n\n            $(\"#\" + provinceNameId).val(provincesOverAll); //获取省份\n            $(\"#\" + provinceNameId).css(\"color\", \"gray\");\n\n            $(\"#\" + cityNameId).val(cityOverAll); //获取城市\n            $(\"#\" + cityNameI).css(\"color\", \"gray\");\n\n            $(\"#\" + areaNameId).val(countyOverAll); //获取区\n            $(\"#\" + areaNameId).css(\"color\", \"gray\");\n\n            $(\"#\" + detailsLocationId).val(detailsOverAll); //获取街道\n\n            $(\"#\" + longitudeId).val(longitudeOverAll); //填入经度\n            $(\"#\" + longitudeId).css(\"color\", \"gray\");\n\n            $(\"#\" + latitudeId).val(latitudeOverAll); //填入纬度\n            $(\"#\" + latitudeId).css(\"color\", \"gray\");\n        });\n    };\n}\n```\n","tags":["layui"]},{"title":"[springboot] 报错解决集合","url":"/2019/03/21//articles/2019/03/21/1553178501000.html/","content":"包含websocket的单元测试失败\n```\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n\n#或\n#@SpringBootTest(classes = SellApplication.class, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)\n```","tags":["springboot"]},{"title":"[layui] laypage组件常见用法总结","url":"/2019/03/21//articles/2019/03/21/1553178500000.html/","content":"<a href=\"https://www.layui.com/demo/laypage.html\" target=\"_blank\">官网laypage</a>\n<a href=\"https://www.cnblogs.com/wyy1234/p/9448519.html\" target=\"_blank\">laypage组件常见用法总结</a>","tags":["layui"]},{"title":"[地图] 百度地图API的使用","url":"/2019/03/21//articles/2019/03/21/1553178499000.html/","content":"<a href=\"https://www.cnblogs.com/zqzjs/p/5293698.html\" target=\"_blank\">百度地图API的使用</a>\n<a href=\"https://www.cnblogs.com/xiaonannan/p/php.html\" target=\"_blank\">百度地图API，定位您的当前位置</a>\n```html\n<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n    <style type=\"text/css\">\n        body, html,#allmap {\n        \twidth: 100%;height: 100%;overflow: hidden;margin:0;font-family:\"微软雅黑\";\n        }\n    </style>\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=你的密钥\"></script>\n    <title>浏览器定位</title>\n</head>\n<body>\n<div id=\"allmap\"></div>\n</body>\n\n\n<script type=\"text/javascript\">\n    // 百度地图API功能\n    var map = new BMap.Map(\"allmap\");\n    var point = new BMap.Point(116.331398,39.897445);\n    map.centerAndZoom(point,12);\n\n    var geolocation = new BMap.Geolocation();\n    geolocation.getCurrentPosition(function(r){\n        if(this.getStatus() == BMAP_STATUS_SUCCESS){\n            var mk = new BMap.Marker(r.point);\n            map.addOverlay(mk);\n            map.panTo(r.point);\n            alert('您的位置：'+r.point.lng+','+r.point.lat);\n        }\n        else {\n            alert('failed'+this.getStatus());\n        }\n    },{\n        enableHighAccuracy: true\n    });\n    //关于状态码\n    //BMAP_STATUS_SUCCESS    检索成功。对应数值 \"0\"。\n    //BMAP_STATUS_CITY_LIST    城市列表。对应数值 \"1\"。\n    //BMAP_STATUS_UNKNOWN_LOCATION    位置结果未知。对应数值 \"2\"。\n    //BMAP_STATUS_UNKNOWN_ROUTE    导航结果未知。对应数值 \"3\"。\n    //BMAP_STATUS_INVALID_KEY    非法密钥。对应数值 \"4\"。\n    //BMAP_STATUS_INVALID_REQUEST    非法请求。对应数值 \"5\"。\n    //BMAP_STATUS_PERMISSION_DENIED    没有权限。对应数值 \"6\"。(自 1.1 新增)\n    //BMAP_STATUS_SERVICE_UNAVAILABLE    服务不可用。对应数值 \"7\"。(自 1.1 新增)\n    //BMAP_STATUS_TIMEOUT    超时。对应数值 \"8\"。(自 1.1 新增)\n</script>\n</html>\n```\n","tags":["地图"]},{"title":"[layui] 在线引用地址","url":"/2019/03/21//articles/2019/03/21/1553178498000.html/","content":"<a href=\"https://blog.csdn.net/hl_qianduan/article/details/82185055\" target=\"_blank\">layui在线引用地址</a>\n```\n2.4.3版本layui在线引用地址（永久有效）\n\nlayui.js：\nhttps://heerey525.github.io/layui-v2.4.3/layui/layui.js\n\nlayui.css：\nhttps://heerey525.github.io/layui-v2.4.3/layui/css/layui.css\n\n2.4.4版本layui在线引用地址（永久有效）\nlayui.js: \nhttps://heerey525.github.io/layui-v2.4.3/layui-v2.4.4/layui.js\n\nlayui.css: \nhttps://heerey525.github.io/layui-v2.4.3/layui-v2.4.4/css/layui.css\n\n2.4.5最新版本layui在线引用地址（永久有效）\nlayui.js: \nhttps://heerey525.github.io/layui-v2.4.3/layui-v2.4.5/layui.js\nlayui.css: \nhttps://heerey525.github.io/layui-v2.4.3/layui-v2.4.5/css/layui.css\n\nCHC云提供的layui CDN库：\n（包括layui、layer、laydata、FlyTemplate）\nhttps://layui.hcwl520.com.cn/\n```","tags":["layui"]},{"title":"[算法] 题目","url":"/2019/03/21//articles/2019/03/21/1553175238000.html/","content":"<a href=\"https://blog.csdn.net/u013517797/column/info/lanqiaobeiacm\" target=\"_blank\">程序猿之洞|蓝桥杯</a>","tags":["算法"]},{"title":"[requirejs] 百度地图","url":"/2019/03/21//articles/2019/03/21/1553175028000.html/","content":"<a href=\"https://blog.csdn.net/lancelot_lewis/article/details/51489755\" target=\"_blank\">使用requirejs调用百度地图解决方案</a>\ncommon.js\n```\n// requirejs 的配置，因为百度地图是非AMD模式的，所以需要加上shim进行转换\nrequire.config({\n    paths: {\n    \t'async': '../../lib/require/async',\n        'BMap': ['http://api.map.baidu.com/api?v=2.0&ak=mXijumfojHnAaN2VxpBGoqHM'],\n    },\n    shim: {\n        'BMap': {\n            deps: ['jquery'],\n            exports: 'BMap'\n        }\n    }\n});\n```\n\nbmap.js\n```\n// 调用百度地图\ndefine(['jquery','async!BMap'], function(){\n    var map = new BMap.Map(\"map\");\n});\n```","tags":["requirejs"]},{"title":"[php] 实现简单登录注册","url":"/2019/03/21//articles/2019/03/21/1553175026000.html/","content":"<a href=\"https://www.cnblogs.com/leinov/p/3745401.html\" target=\"_blank\">php注册登录系统(一)-极简</a>\n<a href=\"https://www.awaimai.com/610.html\" target=\"_blank\">PHP cURL库函数抓取页面内容</a>\n<a href=\"https://blog.csdn.net/qq_39630587/article/details/79768838\" target=\"_blank\">PHP实现简单注册登录系统</a>","tags":["php"]},{"title":"[spring] 使用maven搭建springmvc项目","url":"/2019/03/21//articles/2019/03/21/1553174892000.html/","content":"<a href=\"https://www.cnblogs.com/hehaiyang/p/4578488.html\" target=\"_blank\">使用maven搭建springmvc项目</a>","tags":["spring"]},{"title":"[前端] 解决页面input自动填充记住的账号密码","url":"/2019/03/21//articles/2019/03/21/1553148888000.html/","content":"<a href=\"https://blog.csdn.net/qq_36802726/article/details/80447144\" target=\"_blank\">解决页面input自动填充记住的账号密码</a>\n<a href=\"https://blog.csdn.net/zora_55/article/details/79397216\" target=\"_blank\">关于input标签的记住密码</a>\n```\n<input type=\"text\" placeholder=\"账号\" readonly onfocus=\"this.removeAttribute('readonly');\" autocomplete=\"off\" />\n```\n\n方法1：\n```\ninput标签有一个属性autocomplete属性\n该属性默认为'on'，所以将该属性设置为'off'即可禁用自动完成功能。即为：\n<input type=\"text\" autocomplete=\"off\" />\n```\n\n方法2：\n```\n如果在fom标签内，input没有type='password'标签的话，方法1即可。\n若有，则可以设置autocomplete属性为其他值，'new-password'\n```\n\n方法3：\n在用户名和密码标签之间添加一个隐藏的input type='password'的标签，如：\n```\n<input type=\"text\">\n<input type=\"password\" style=\"display:none\">\n<input type=\"password\">\n```","tags":["前端"]},{"title":"[java] java设计模式","url":"/2019/03/21//articles/2019/03/21/1553148385000.html/","content":"<a href=\"https://www.cnblogs.com/zailushang1996/p/8601808.html\" target=\"_blank\">java 三种工厂模式</a>\n```\n一、简单工厂模式\n二、工厂方法模式\n三、抽象工厂模式\n```\n\n<a href=\"http://www.runoob.com/design-pattern/design-pattern-intro.html\" target=\"_blank\">菜鸟教程|设计模式|java</a>\n\n","tags":["java"]},{"title":"[小程序] 打开网页","url":"/2019/03/21//articles/2019/03/21/1553148383000.html/","content":"<a href=\"https://github.com/sennyla/WebchatShare\" target=\"_blank\">github | 微信小程序（内嵌网页分享功能）</a>","tags":["小程序"]},{"title":"[centos7] 部署禅道","url":"/2019/03/21//articles/2019/03/21/1553148178000.html/","content":"<a href=\"https://blog.csdn.net/wm5920/article/details/78047755\" target=\"_blank\">Linux下部署开源版 \"禅道\" 项目管理系统</a>\n\n> 1.开源版安装包下载\n```\nwget http://dl.cnezsoft.com/zentao/9.0.1/ZenTaoPMS.9.0.1.zbox_64.tar.gz\n```\n> 2.直接解压安装包到/opt目录下\n```\ntar -zxvf ZenTaoPMS.9.0.1.zbox_64.tar.gz -C /opt\n```\n> 3.修改禅道自带apache、mysql端口\n```\n#为了不占用Server上默认的80、3306端口，我们修改禅道自带的apache、mysql端口\n#修改禅道自带apache端口：\n/opt/zbox/zbox -ap 9000\n#修改禅道自带mysql端口：\n/opt/zbox/zbox -mp 9001\n```\n> 4.重启禅道服务\n```\n#开启Apache和Mysql\n/opt/zbox/zbox start\n#停止Apache和Mysql\n/opt/zbox/zbox stop\n#重启Apache和Mysql\n/opt/zbox/zbox restart\n#获取关于zbox命令的帮助\n/opt/zbox/zbox -h\n```\n> 5.创建数据库账号\n```\n/opt/zbox/auth/adduser.sh\n\n#注：(1)数据库的用户名：root，密码为空。\n#    (2)数据库管理用的是adminer，但是为了安全，访问adminer的时候需要身份验证，需要运行脚本添加账户\n\n#命令行登录禅道自带mysql数据库：\n/opt/zbox/bin/mysql -u root -P 3306 -p\n\n#如果是首次安装 \"禅道\" ，此处略过；如果之前已经装有 \"禅道\" ，想导入之前的数据，则可以导入备份的zentao.sql文件；\n#命令行导入备份的数据：\n/opt/zbox/bin/mysql -u root -P 3306 -p zentaopro < zentao.sql\n```\n> 6.配置iptables防火墙规则，允许端口访问\n```\niptables -A INPUT -p tcp --dport 9000 -j ACCEPT\niptables -A INPUT -p tcp --dport 9001 -j ACCEPT\n#重启防火墙，使规则生效：\nservice iptables save\nservice iptables restart\n```\n> 7.浏览器访问\n```\nhttp://x.x.x.x:9000\n客户端：\nhttp://x.x.x.x:9000/zentao/user-login-L3plbnRhby8=.html\n默认账号密码：\nadmin/123456\n```","tags":["centos7"]},{"title":"[centos7] 部署springboot前环境","url":"/2019/03/21//articles/2019/03/21/1553148177000.html/","content":"<a href=\"https://www.cnblogs.com/zuidongfeng/p/8859229.html\" target=\"_blank\">centos7部署springboot</a>\n<a href=\"https://github.com/linj6/springboot-learn/tree/master/springboot-helloworld\" target=\"_blank\">springboot-helloworld</a>\n\n> java环境\n\n<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\">jdk8官网</a>\n第一步：centos7服务器使用wget方式来下载安装包 \n```\nyum install wget\nwget --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" http://download.oracle.com/otn-pub/java/jdk/8u161-b12/2f38c3b165be4555a1fa6e98c45e0808/jdk-8u161-linux-x64.tar.gz\n```\n第二步：解压\n```\n#切换到安装包保存目录：\ncd /usr/local/\n#解压到当前目录：\ntar -zxvf jdk-8u161-linux-x64.tar.gz\n```\n第三步：配置环境变量\n```\n#打开系统环境变量配置文件：\nvim /etc/profile\n\n#在profile文件末尾加上如下内容：\n## JAVA\nJAVA_HOME=/usr/local/jdk1.8.0_161\nJRE_HOME=/usr/local/jdk1.8.0_161/jre\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nexport JAVA_HOME JRE_HOME PATH CLASSPATH\n\n#输入：wq保存退出\n```\n第四步：配置文件生效\n```\n#使配置文件立即生效\nsource /etc/profile\n```\n第五步：测试jdk是否安装成功\n```\n#查看jdk版本信息：\njava -version\n```\n\n> 下载和安装tomcat\n\n第一步：\n```\n#访问tomcat官网：\nhttps://tomcat.apache.org/download-80.cgi\n\n#方法一：先从官网下载到本地，再上传到服务器\n选择下载tomcat8.5.30版本\n\n#下载成功后，使用xtfp 5将安装包上传到/usr/local目录下\n\n#方法二：wget下载\nwget http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.30/bin/apache-tomcat-8.5.30.tar.gz\n```\n第二步：解压\n```\n#切换到tomcat下载目录：\ncd /usr/local\n#解压到当前目录：\ntar -zxvf apache-tomcat-8.5.30.tar.gz\n```\n第三步：启动\n```\n#切换到解压后的tomcat的bin目录下：\ncd /usr/local/apache-tomcat-8.5.30/bin\n#执行启动命令：\n./startup.sh\n#查看tomcat启动日志：\ntail -f ../logs/catalina.out\n#发现启动耗时太长,解决方法可参考此篇文章：\nhttps://blog.csdn.net/u013939884/article/details/72860358\n#我自己是通过修改JRE中的java.security文件为 securerandom.source=file:/dev/urandom来解决该问题。\n```\n第四步：测试\n```\n访问网址：http://ip:8080/,访问时将ip替换为自己的服务器ip，出现如下画面，表示tomcat启动成功。\n备注：如果tomcat启动成功，但是该页面又访问不了，请检查8080端口是否开放。 \n```\n\n\n> 演示项目\n\nServletInitializer类：\n该类用于已tomcat方式启动springboot\n```\npackage com.lnjecit.springboothelloworld;\n\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.boot.web.support.SpringBootServletInitializer;\n\npublic class ServletInitializer extends SpringBootServletInitializer {\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n        return application.sources(SpringbootHelloworldApplication.class);\n    }\n\n} \n```\n\nHelloWorldController类：\n```\npackage com.lnjecit.springboothelloworld.controller;\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\n/**\n * @author\n * @create 2018-04-16 16:06\n **/\n@RequestMapping(\"/helloWorld\")\n@RestController\npublic class HelloWorldController {\n\n    @RequestMapping(\"/sayHello\")\n    public String sayHello(@RequestParam(\"name\") String name) {\n        return \"Hi, \" + name;\n    }\n}\n```\n\n> 以war包方式部署\n\n步骤：\n第一步：将项目打包方式修改为war\n第二步：在idea中Terminal控制台执行maven打包命令\n```\nmvn clean package -Dmaven.test.skip=true\n```\n第三步：使用xftp将war包上传到服务器/usr/local/apache-tomcat-8.5.30/webapps目录下\n```\n先将该目录下的ROOT目录删除，然后将springboot-helloworld-0.0.1-SNAPSHOT.war重命名为ROOT.war\n```\n第四步：启动tomcat\n第五步：测试\n```\n在浏览器中输入：http://ip:8080/helloWorld/sayHello?name=李白 ip改为自己服务器的ip\n```\n\n\n只有当pom依赖有改动，才重新打一个完整的war包部署到服务器上。\n\n以jar包方式部署\n完整jar包\n第一步：将项目打包方式修改为jar\n\n第二步：在idea中Terminal控制台执行maven打包命令，生成jar包\n```\nmvn clean package -Dmaven.test.skip=true\n```\n第三步：使用xftp将jar包上传到服务器/usr/local/springboot-helloworld目录下\n第四步：运行jar包\n```\n#先切换到jar包所在目录：\ncd /usr/local/springboot-helloworld/\n运行jar:\njava -jar springboot-helloworld-0.0.1-SNAPSHOT.jar \n```\n第五步：测试\n```\n在浏览器中输入：http://ip:8080/helloWorld/sayHello?name=李白 ip改为自己服务器的ip\n```\n\n缺点：\n```\n1、打包后，配置文件和依赖包都在jar包内部，配置文件无法修改。而实际项目中，开发环境的配置与服务器环境配置并不完全一致，例如数据库信息，日志信息保存路径等，想要修改配置文件也无法修改\n\n2、项目依赖包一般不会有变化，但是每次打包都会把依赖包打包到jar包内\n\n3、控制台页面一关闭，springboot服务也关闭\n```\n\nJar包、配置文件、依赖包分开打包\n```\n由于每次以jar包方式部署会有上面说的缺点，为了解决这些问题，可以将jar包、配置文件、依赖包分开打包。分开打包后，有如下好处：\n\n1、可以实现当依赖包有变化时，才重新打包依赖包\n\n2、配置文件也可以修改\n\n3、由于依赖包和jar包分离，可以减少jar文件大小。jar文件减少，可以缩短上传到服务器的时间\n```\n\n第一步：pom文件修改如下：\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.lnjecit</groupId>\n    <artifactId>springboot-helloworld</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <name>springboot-helloworld</name>\n    <description>Demo project for Spring Boot</description>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>1.5.8.RELEASE</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <!--<plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>-->\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <configuration>\n                    <excludes>\n                        <exclude>*.properties</exclude>\n                        <exclude>*.yml</exclude>\n                    </excludes>\n                    <archive>\n                        <manifest>\n                            <!-- 为依赖包添加路径, 这些路径会写在MANIFEST文件的Class-Path下 -->\n                            <mainClass>com.lnjecit.springboothelloworld.SpringbootHelloworldApplication</mainClass>\n                            <addClasspath>true</addClasspath>\n                            <classpathPrefix>lib/</classpathPrefix>\n                            <!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 -->\n                            <useUniqueVersions>false</useUniqueVersions>\n                        </manifest>\n                        <manifestEntries>\n                            <!-- 在Class-Path下添加配置文件的路径 -->\n                            <Class-Path>config/</Class-Path>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-resources-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>copy-xmls</id>\n                        <phase>process-sources</phase>\n                        <goals>\n                            <goal>copy-resources</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>${basedir}/target/config</outputDirectory>\n                            <resources>\n                                <resource>\n                                    <directory>${basedir}/src/main/resources</directory>\n                                    <includes>\n                                        <include>*.properties</include>\n                                        <include>*.yml</include>\n                                    </includes>\n                                </resource>\n                            </resources>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-dependency-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>copy</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>copy-dependencies</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>target/lib/</outputDirectory>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n```\n第二步：在idea中Terminal控制台执行maven打包命令，在target目录下生成了jar包、config、lib三部分\n```\nmvn clean package -Dmaven.test.skip=true\n```\n第三步：使用xftp将jar包上传到服务器/usr/local/springboot-helloworld/deploy目录下\n第四步：运行jar包\n```\n#先切换到jar包所在目录：\ncd /usr/local/springboot-helloworld/deploy/\n#springboot默认启动端口为8080，为了测试分开打包后可以修改配置文件，在application.properties文件中修改启动端口为8081\n#运行jar:\njava -jar springboot-helloworld-0.0.1-SNAPSHOT.jar\n```\n第五步：测试\n```\n在浏览器中输入：http://ip:8081/helloWorld/sayHello?name=阿飞 ip改为自己服务器的ip\n```\n\nJar包运行\n```\n#普通运行\njava -jar springboot-helloworld-0.0.1-SNAPSHOT.jar\n#指定端口运行\njava -jar springboot-helloworld-0.0.1-SNAPSHOT.jar --server.port=8082\n```\n\n后台运行\n方法一：\n```\n#启动后再当前目录生成一个nohup.out文件\nnohup java -jar springboot-helloworld-0.0.1-SNAPSHOT.jar &\n#查看启动后的服务：\nps -ef | grep java\n#关闭服务：\nkill -9 3730\n```\n方法二： \n```\nnohup java -jar demo.jar & > log.file 2>&1 &\n```","tags":["centos7"]},{"title":"[centos7] 安装docker","url":"/2019/03/21//articles/2019/03/21/1553148176000.html/","content":"<a href=\"https://www.cnblogs.com/yufeng218/p/8370670.html\" target=\"_blank\">Centos7上安装docker</a>","tags":["centos7"]},{"title":"[springboot] WebFlux","url":"/2019/03/16//articles/2019/03/16/1552747477000.html/","content":"<a href=\"https://github.com/JeffLi1993/springboot-learning-example\" target=\"_blank\">springboot-learning-example</a>\nspring boot 实践学习案例，是 spring boot 初学者及核心技术巩固的最佳实践。\n```\nSpring Boot 入门、Spring Boot 配置、Web 开发、模板引擎、数据存储、数据缓存 案例更新\t11\nchapter-1-spring-boot-quickstart\nchapter-2-spring-boot-config\nchapter-3-spring-boot-web\n表单校验案例\nchapter-4-spring-boot-validating-form-input\nchapter-4-spring-boot-web-thymeleaf\nchapter-5-spring-boot-data-jpa\n数据分页排序案例\t\nchapter-5-spring-boot-paging-sorting\nchapter-6-spring-boot-cache-redis\n\n\nSpring Data Elasticsearch - 基本案例\t\nspring-data-elasticsearch-crud\n\nspring-data-elasticsearch - 实战案例详解\t\nspring-data-elasticsearch-query\n\nSpring Boot 之配置注解使用\t\nspringboot-configuration\n\nSpringboot 整合 Dubbo/ZooKeeper 详解 SOA 案例\t\nspringboot-dubbo-client\n\nSpring Boot Dubbo applications.properties 配置清单\t\nspringboot-dubbo-server\n\nSpring Boot 整合 Elasticsearch，实现 function score query 权重分查询\t\nspringboot-elasticsearch\n\nUpdate application.properties\nspringboot-freemarker\n\nSpringboot 整合 Mybatis 的完整 Web 案例\t\nspringboot-helloworld\n\nSpring Boot 整合 Mybatis Annotation 案例\t\nspringboot-mybatis-annotation\n\nSpring Boot 整合 Mybatis 实现 Druid 多数据源配置\t\nspringboot-mybatis-mutil-datasource\n\nSpring Boot 注解实现整合 Redis 作为缓存\t\nspringboot-mybatis-redis-annotation\n\nspringboot-mybatis-redis :: 整合 Mybatis 并使用 Redis 作为缓存\t\nspringboot-mybatis-redis\nspringboot-mybatis\n\nSpring Boot 之配置文件详解\t\nspringboot-properties\nspringboot-restful\t更新\t\n\nSpring Boot HTTP over JSON 的错误码异常处理\t\nspringboot-validation-over-json\n\nWebFlux 快速入门实践\nspringboot-webflux-1-quickstart\n\nWebFlux 实战城市管理系统\nspringboot-webflux-10-book-manage-sys\n\nSpring Boot WebFlux 实现 Restful 服务，基于 HTTP / JSON 传输\nspringboot-webflux-2-restful\n\nWebFlux 快速入门实践\nspringboot-webflux-3-mongodb\n\nSpring Boot WebFlux 整合 Thymeleaf\nspringboot-webflux-4-thymeleaf\n\nSpring Boot WebFlux 中 Thymeleaf 和 Mongodb 实践\nspringboot-webflux-5-thymeleaf-mongodb\n\nWebFlux 使用 ReactiveRedisTemplate\nspringboot-webflux-6-redis\n\nWebFlux 整合 Redis 实现缓存\nspringboot-webflux-7-redis-cache\n\nWebFlux 中 WebSocket 实现通信\nspringboot-webflux-8-websocket\n\nWebFlux 集成测试及部署\nspringboot-webflux-9-test\n```","tags":["springboot"]},{"title":"[cocos] lua格斗游戏","url":"/2019/03/16//articles/2019/03/16/1552743746000.html/","content":"<a href=\"https://www.cnblogs.com/adoontheway/p/4348317.html\" target=\"_blank\">利用Cocos2dx 3.3 lua 做一个动作类游戏</a>\n<a href=\"https://github.com/AdoBeatTheWorld/SuperLink\" target=\"_blank\"></a>\n","tags":["cocos"]},{"title":"[springboot] 通过swagger2markup+asciidockorj","url":"/2019/03/16//articles/2019/03/16/1552743336000.html/","content":"<a href=\"https://segmentfault.com/a/1190000015497599\" target=\"_blank\">Asciidoctor Maven插件使用</a>\n<a href=\"https://blog.csdn.net/qq_25215821/article/details/79175535\" target=\"_blank\">通过swagger2markup+asciidoctorj生成html和pdf文档（maven方式及java代码方式）</a>\n<a href=\"https://www.jianshu.com/p/9b88feca33c0\" target=\"_blank\">SpringBoot+Swagger2+Asciidoctor输出静态文档</a>\n","tags":["springboot"]},{"title":"[qt] 扫码登陆","url":"/2019/03/16//articles/2019/03/16/1552740632000.html/","content":"<a href=\"https://blog.csdn.net/liang19890820/article/details/51833234\" target=\"_blank\">qt扫码登陆</a>\n","tags":["qt"]},{"title":"[springboot] 资源拦截","url":"/2019/03/16//articles/2019/02/25/1552739522000.html/","content":"```\nSpring Boot 2.x 版本针对这个问题有最优解决方案,直接修改application.properties 文件即可\nspring.mvc.static-path-pattern=/static/**\n```\n\n<a href=\"https://www.jianshu.com/p/11bf2dd615a1\" target=\"_blank\">简书 | Springboot2拦截器设置（不拦截静态资源）</a>\n<a href=\"https://www.cnblogs.com/java-synchronized/p/7091723.html\" target=\"_blank\">springboot资源拦截</a>\n```\n默认资源映射\nSpring Boot 默认为我们提供了静态资源处理，使用 WebMvcAutoConfiguration 中的配置各种属性。\n\nSpring Boot的默认提供的静态资源映射如下:\n\nclasspath:/META-INF/resources\nclasspath:/resources\nclasspath:/static\nclasspath:/public\n\nspring.mvc.static-path-pattern=/META-INF/resources,classpath:/resources,classpath:/static,classpath:/public\n```\n\n```\n@Configuration\npublic class MyWebMvcAutoConfiguration extends WebMvcAutoConfigurerAdapter{\n\n\t/**\n\t * 配置静态访问资源\n\t * @param registry\n\t */\n\t @Override\n\t public void addResourceHandlers(ResourceHandlerRegistry registry){\n\t \tsuper.addResourceHandlers(registry);\n\t }\n}\n```","tags":["springboot"]},{"title":"[springboot] 取消数据库配置","url":"/2019/03/16//articles/2019/02/25/1552739521000.html/","content":"<a href=\"https://blog.csdn.net/qq_15071263/article/details/78458890\" target=\"_blank\">取消数据库配置</a>\n```\n@SpringBootApplication(exclude={DataSourceAutoConfiguration.class,HibernateJpaAutoConfiguration.class})\n```\n","tags":["springboot"]},{"title":"[java] HttpServletRequest自行添加parameter参数","url":"/2019/03/16//articles/2019/03/16/1552738602000.html/","content":"<a href=\"https://blog.csdn.net/gaoleijie/article/details/79446361\" target=\"_blank\">HttpServletRequest 自行添加parameter参数</a>\n\n```\n<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-api</artifactId>\n    <version>1.7.25</version>\n</dependency>\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-log4j12</artifactId>\n    <version>1.7.2</version>\n</dependency> \n```\n\n```\n通过request进行getParameter获取该属性的值\n```\n\nwrapper/ParameterRequestWrapper.java\n```java\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletRequestWrapper;\n\npublic class ParameterRequestWrapper extends HttpServletRequestWrapper {\n\n    private Map<String, String[]> params = new HashMap<String, String[]>();\n\n    @SuppressWarnings(\"unchecked\")\n    public ParameterRequestWrapper(HttpServletRequest request) {\n        // 将request交给父类，以便于调用对应方法的时候，将其输出，其实父亲类的实现方式和第一种new的方式类似\n        super(request);\n        //将参数表，赋予给当前的Map以便于持有request中的参数\n        this.params.putAll(request.getParameterMap());\n    }\n\n    //重载一个构造方法\n    public ParameterRequestWrapper(HttpServletRequest request, Map<String, Object> extendParams) {\n        this(request);\n        addAllParameters(extendParams);//这里将扩展参数写入参数表\n    }\n\n    @Override\n    public String getParameter(String name) {//重写getParameter，代表参数从当前类中的map获取\n        String[] values = params.get(name);\n        if (values == null || values.length == 0) {\n            return null;\n        }\n        return values[0];\n    }\n\n    public String[] getParameterValues(String name) {//同上\n        return params.get(name);\n    }\n\n    public void addAllParameters(Map<String, Object> otherParams) {//增加多个参数\n        for (Map.Entry<String, Object> entry : otherParams.entrySet()) {\n            addParameter(entry.getKey(), entry.getValue());\n        }\n    }\n\n\n    public void addParameter(String name, Object value) {//增加参数\n        if (value != null) {\n            if (value instanceof ArrayList) {\n                String value1 = String.valueOf(value).substring(1, String.valueOf(value).length());\n                value = value1.substring(0, value1.length() - 1);\n                params.put(name, new String[]{(String) value});\n            } else if (value instanceof String[]) {\n                params.put(name, (String[]) value);\n            } else if (value instanceof String) {\n                params.put(name, new String[]{(String) value});\n            } else {\n                params.put(name, new String[]{String.valueOf(value)});\n            }\n        }\n    }\n}\n```\n\nfilter/ParameterRequestFilter.java\n```java\npublic class ParameterRequestFilter implements Filter {\n\n    private static final Logger log = LoggerFactory.getLogger(ParameterRequestFilter.class);\n\n    public FilterConfig config;\n\n    private static Field requestField;\n\n    private static Field parametersParsedField;\n\n    private static Field coyoteRequestField;\n\n    private static Field parametersField;\n\n    private static Field hashTabArrField;\n\n    private static String REQUEST_METHOD = \"POST\";\n\n    private Field[] declaredFields = null;\n\n\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n        try {\n            Class clazz = Class.forName(\"org.apache.catalina.connector.RequestFacade\");\n            requestField = clazz.getDeclaredField(\"request\");\n            requestField.setAccessible(true);\n\n\n            parametersParsedField = requestField.getType().getDeclaredField(\"parametersParsed\");\n            parametersParsedField.setAccessible(true);\n\n\n            coyoteRequestField = requestField.getType().getDeclaredField(\"coyoteRequest\");\n            coyoteRequestField.setAccessible(true);\n\n\n            parametersField = coyoteRequestField.getType().getDeclaredField(\"parameters\");\n            parametersField.setAccessible(true);\n\n            declaredFields = parametersField.getType().getDeclaredFields();\n            if (declaredFields.length > 0) {\n                for (Field field : declaredFields) {\n                    if (\"paramHashStringArray\".equals(field.getName())) {//tomcat6的属性\n                        hashTabArrField = field;\n                    }\n                    if (\"paramHashValues\".equals(field.getName())) {//tomcat7的属性\n                        hashTabArrField = field;\n                    }\n                }\n            }\n            hashTabArrField.setAccessible(true);\n        } catch (Exception e) {\n            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n        }\n\n        this.config = filterConfig;\n    }\n\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n        ParameterRequestWrapper parameterRequestWrapper = new ParameterRequestWrapper(httpServletRequest);\n        Map<String, Object> map = getRequestMap(request);\n//        if (map != null) {\n//            if (httpServletRequest.getMethod() == REQUEST_METHOD) {//只添加post类型的请求数据\n//                Map<String, Object> ruleMap = (Map) xxx;//将要存放的值\n//                if (null != ruleMap) {\n//                    map.putAll(ruleMap);\n//                }\n//            }\n//        }\n        parameterRequestWrapper.addAllParameters(map);\n        chain.doFilter(parameterRequestWrapper, response);\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    private Map<String, Object> getRequestMap(ServletRequest request) {\n        try {\n            Object innerRequest = requestField.get(request);\n            parametersParsedField.setBoolean(innerRequest, true);\n            Object coyoteRequestObject = coyoteRequestField.get(innerRequest);\n            Object parameterObject = parametersField.get(coyoteRequestObject);\n            return (Map<String, Object>) hashTabArrField.get(parameterObject);\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n            return Collections.emptyMap();\n        }\n    }\n\n    @Override\n    public void destroy() {\n        this.config = null;\n    }\n\n}\n```","tags":["java"]},{"title":"[java] java压缩字符串","url":"/2019/03/16//articles/2019/03/15/1552738580000.html/","content":"<a href=\"https://www.cnblogs.com/gengaixue/archive/2013/09/04/3300658.html\" target=\"_blank\">java压缩字符串</a>\n```java\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.util.zip.GZIPInputStream;\nimport java.util.zip.GZIPOutputStream;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipInputStream;\nimport java.util.zip.ZipOutputStream;\n\npublic class ZipUtils {\n\n    /**\n     * 使用gzip进行压缩\n     */\n    public static String gzip(String primStr) {\n        if (primStr == null || primStr.length() == 0) {\n            return primStr;\n        }\n\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n\n        GZIPOutputStream gzip = null;\n        try {\n            gzip = new GZIPOutputStream(out);\n            gzip.write(primStr.getBytes());\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (gzip != null) {\n                try {\n                    gzip.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n\n        return new sun.misc.BASE64Encoder().encode(out.toByteArray());\n    }\n\n    /**\n     * <p>Description:使用gzip进行解压缩</p>\n     *\n     * @param compressedStr\n     * @return\n     */\n    public static String gunzip(String compressedStr) {\n        if (compressedStr == null) {\n            return null;\n        }\n\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        ByteArrayInputStream in = null;\n        GZIPInputStream ginzip = null;\n        byte[] compressed = null;\n        String decompressed = null;\n        try {\n            compressed = new sun.misc.BASE64Decoder().decodeBuffer(compressedStr);\n            in = new ByteArrayInputStream(compressed);\n            ginzip = new GZIPInputStream(in);\n\n            byte[] buffer = new byte[1024];\n            int offset = -1;\n            while ((offset = ginzip.read(buffer)) != -1) {\n                out.write(buffer, 0, offset);\n            }\n            decompressed = out.toString();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (ginzip != null) {\n                try {\n                    ginzip.close();\n                } catch (IOException e) {\n                }\n            }\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException e) {\n                }\n            }\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                }\n            }\n        }\n\n        return decompressed;\n    }\n\n    /**\n     * 使用zip进行压缩\n     *\n     * @param str 压缩前的文本\n     * @return 返回压缩后的文本\n     */\n    public static final String zip(String str) {\n        if (str == null)\n            return null;\n        byte[] compressed;\n        ByteArrayOutputStream out = null;\n        ZipOutputStream zout = null;\n        String compressedStr = null;\n        try {\n            out = new ByteArrayOutputStream();\n            zout = new ZipOutputStream(out);\n            zout.putNextEntry(new ZipEntry(\"0\"));\n            zout.write(str.getBytes());\n            zout.closeEntry();\n            compressed = out.toByteArray();\n            compressedStr = new sun.misc.BASE64Encoder().encodeBuffer(compressed);\n        } catch (IOException e) {\n            compressed = null;\n        } finally {\n            if (zout != null) {\n                try {\n                    zout.close();\n                } catch (IOException e) {\n                }\n            }\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                }\n            }\n        }\n        return compressedStr;\n    }\n\n    /**\n     * 使用zip进行解压缩\n     *\n     * @param compressedStr 压缩后的文本\n     * @return 解压后的字符串\n     */\n    public static final String unzip(String compressedStr) {\n        if (compressedStr == null) {\n            return null;\n        }\n\n        ByteArrayOutputStream out = null;\n        ByteArrayInputStream in = null;\n        ZipInputStream zin = null;\n        String decompressed = null;\n        try {\n            byte[] compressed = new sun.misc.BASE64Decoder().decodeBuffer(compressedStr);\n            out = new ByteArrayOutputStream();\n            in = new ByteArrayInputStream(compressed);\n            zin = new ZipInputStream(in);\n            zin.getNextEntry();\n            byte[] buffer = new byte[1024];\n            int offset = -1;\n            while ((offset = zin.read(buffer)) != -1) {\n                out.write(buffer, 0, offset);\n            }\n            decompressed = out.toString();\n        } catch (IOException e) {\n            decompressed = null;\n        } finally {\n            if (zin != null) {\n                try {\n                    zin.close();\n                } catch (IOException e) {\n                }\n            }\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException e) {\n                }\n            }\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                }\n            }\n        }\n        return decompressed;\n    }\n}\n\n```","tags":["java"]},{"title":"[springboot] websocket","url":"/2019/03/16//articles/2019/03/16/1552738523000.html/","content":"<a href=\"https://www.cnblogs.com/wlfcolin/p/5193583.html\" target=\"_blank\">Android中脱离WebView使用WebSocket实现群聊和推送功能</a>\n<a href=\"https://files-cdn.cnblogs.com/files/wlfcolin/websocket%E8%81%8A%E5%A4%A9%E6%B5%8B%E8%AF%95demo.zip\" target=\"_blank\">相应 安卓+java后台+html demo.zip</a>\n\n> pom.xml\n\n```xml\n<dependency>\n    <groupId>javax</groupId>\n    <artifactId>javaee-api</artifactId>\n    <version>7.0</version>\n    <scope>provided</scope>\n</dependency>\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-websocket</artifactId>\n</dependency>\n```\n\n> WebSocketConfig.java\n\n```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.socket.server.standard.ServerEndpointExporter;\n\n/**\n * 开启WebSocket支持\n */\n@Configuration  \npublic class WebSocketConfig {  \n\n    @Bean  \n    public ServerEndpointExporter serverEndpointExporter() {  \n        return new ServerEndpointExporter();  \n    }  \n\n}\n```\n\n> index.html\n\n```html\n<!DOCTYPE HTML>\n<html>\n<head>\n    <title>WebSocket</title>\n</head>\n\n<body>\n       Welcome<br/>\n       <input id=\"text\" type=\"text\"/>\n       <button onclick=\"send()\">发送</button>\n       <button onclick=\"closeWebSocket()\">关闭</button>\n       <div id=\"message\"></div>\n</body>\n\n<script type=\"text/javascript\">\n    var websocket = null;\n\n    //判断当前浏览器是否支持WebSocket\n    if('WebSocket' in window){\n        websocket = new WebSocket(\"ws://localhost:8080/websocket\");\n    }\n    else{\n        alert('对不起，您的浏览器不支持websocket')\n    }\n\n    //连接发生错误的回调方法\n    websocket.onerror = function(){\n        setMessageInnerHTML(\"error\");\n    };\n\n    //连接成功建立的回调方法\n    websocket.onopen = function(event){\n        setMessageInnerHTML(\"open\");\n    }\n\n    //接收到消息的回调方法\n    websocket.onmessage = function(event){\n        setMessageInnerHTML(event.data);\n    }\n\n    //连接关闭的回调方法\n    websocket.onclose = function(){\n        setMessageInnerHTML(\"close\");\n    }\n\n    //监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。\n    window.onbeforeunload = function(){\n        websocket.close();\n    }\n\n    //将消息显示在网页上\n    function setMessageInnerHTML(innerHTML){\n        document.getElementById('message').innerHTML += innerHTML + '<br/>';\n    }\n\n    //关闭连接\n    function closeWebSocket(){\n        websocket.close();\n    }\n\n    //发送消息\n    function send(){\n        var message = document.getElementById('text').value;\n        websocket.send(message);\n    }\n</script>\n</html>\n```\n\nMyWebSocket.java\n```\nimport org.springframework.stereotype.Component;\nimport javax.websocket.*;\nimport javax.websocket.server.ServerEndpoint;\nimport java.io.IOException;\nimport java.util.concurrent.CopyOnWriteArraySet;\n\n@ServerEndpoint(value = \"/websocket\")\n@Component\npublic class MyWebSocket {\n\n    //静态变量，用来记录当前在线连接数。应该把它设计成线程安全的。\n    private static int onlineCount = 0;\n    //concurrent包的线程安全Set，用来存放每个客户端对应的MyWebSocket对象。\n    private static CopyOnWriteArraySet<MyWebSocket> webSocketSet = new CopyOnWriteArraySet<MyWebSocket>();\n    //与某个客户端的连接会话，需要通过它来给客户端发送数据\n    private Session session;\n\n    /**\n     * 连接建立成功调用的方法*/\n    @OnOpen\n    public void onOpen(Session session) {\n        this.session = session;\n        webSocketSet.add(this);     //加入set中\n        addOnlineCount();           //在线数加1\n        System.out.println(\"有新连接加入！当前在线人数为\" + getOnlineCount());\n        try {\n            sendMessage(\"测试\");\n        } catch (IOException e) {\n            System.out.println(\"IO异常\");\n        }\n    }\n\n    /**\n     * 连接关闭调用的方法\n     */\n    @OnClose\n    public void onClose() {\n        webSocketSet.remove(this);  //从set中删除\n        subOnlineCount();           //在线数减1\n        System.out.println(\"有一连接关闭！当前在线人数为\" + getOnlineCount());\n    }\n\n    /**\n     * 收到客户端消息后调用的方法\n     *\n     * @param message 客户端发送过来的消息*/\n    @OnMessage\n    public void onMessage(String message, Session session) {\n        System.out.println(\"来自客户端的消息:\" + message);\n\n        //群发消息\n        for (MyWebSocket item : webSocketSet) {\n            try {\n                item.sendMessage(message);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n\n     public void onError(Session session, Throwable error) {\n        System.out.println(\"发生错误\");\n        error.printStackTrace();\n     }\n\n\n     public void sendMessage(String message) throws IOException {\n        this.session.getBasicRemote().sendText(message);\n     }\n\n\n     /**\n      * 群发自定义消息\n      * */\n    public static void sendInfo(String message) throws IOException {\n        for (MyWebSocket item : webSocketSet) {\n            try {\n                item.sendMessage(message);\n            } catch (IOException e) {\n                continue;\n            }\n        }\n    }\n\n    public static synchronized int getOnlineCount() {\n        return onlineCount;\n    }\n\n    public static synchronized void addOnlineCount() {\n        MyWebSocket.onlineCount++;\n    }\n\n    public static synchronized void subOnlineCount() {\n        MyWebSocket.onlineCount--;\n    }\n}\n```","tags":["springboot"]},{"title":"[Android] WebSocket","url":"/2019/03/16//articles/2019/03/16/1552737786000.html/","content":"<a href=\"https://blog.csdn.net/zly921112/article/details/72973054/\" target=\"_blank\">WebSocket安卓客户端实现详解 - 连接建立与重连</a>\n","tags":["Android"]},{"title":"[springboot] stomp","url":"/2019/03/16//articles/2019/03/16/1552737785000.html/","content":"> 1.pom.xml,页面采用Thymeleaf\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-thymeleaf</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-websocket</artifactId>\n</dependency>\n```\n\n> 2.WebSocketConfig.java\n\n```java\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.messaging.simp.config.MessageBrokerRegistry;\nimport org.springframework.web.socket.config.annotation.AbstractWebSocketMessageBrokerConfigurer;\nimport org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker;\nimport org.springframework.web.socket.config.annotation.StompEndpointRegistry;\n\n/**\n * 配置WebSocket,需要在配置类上使用@EnableWebSocketMessageBroker开启WebSocket支持\n * @EnableWebSocketMessageBroker注解同时会开启使用STOMP协议来传输基于代理（message broker）用的消息，\n * 这时控制器支持使用@MessageMapping，就像使用@RequestMapping一样。\n */\n@Configuration\n@EnableWebSocketMessageBroker\npublic class WebSocketConfig extends AbstractWebSocketMessageBrokerConfigurer {\n\n    /**\n     * 注册STOMP协议的节点（endpoint）并映射指定的URL\n     * @param registry\n     */\n    public void registerStompEndpoints(StompEndpointRegistry registry){\n        //注册一个STOMP的endpoint，并指定使用SockJs协议\n        registry.addEndpoint(\"/endpointWisely\").withSockJS();\n    }\n\n    /**\n     * 配置消息代理类\n     * @param registry\n     */\n    public void configureMessageBroker(MessageBrokerRegistry registry){\n        //广播式应配置一个/topic消息代理\n        registry.enableSimpleBroker(\"/topic\");\n    }\n}\n```\n\n> 3.WebSocketController.java\n\n```java\nimport org.springframework.messaging.handler.annotation.MessageMapping;\nimport org.springframework.messaging.handler.annotation.SendTo;\nimport org.springframework.stereotype.Controller;\n\n\n@Controller\npublic class WebSocketController {\n\n    /**\n     * 当浏览器向服务端发送请求时，通过@MessageMapping映射/welcome这个地址，类似于@RequestMapping\n     * 当服务端有消息时，会对订阅了@SendTo中的路径的浏览器发送消息\n     * @param msg\n     * @return\n     */\n    @MessageMapping(\"/welcome\")\n    @SendTo(\"/topic/getResponse\")\n    public String say(String msg){\n        return msg;\n    }\n}\n```\n\n> 4.index.html\n\n```html\n<!DOCTYPE html>\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n    <meta charset=\"UTF-8\"/>\n    <title>SocketJs演示WebSocket</title>\n</head>\n<body onload=\"disconnect()\">\n<div>\n    <div>\n        <button id=\"connect\" onclick=\"connect();\">连接</button>\n        <button id=\"disconnect\" disabled=\"disabled\" onclick=\"disconnect();\">断开连接</button>\n    </div>\n\n    <div id=\"conversationDIV\">\n        <label>输入你的名字</label>\n        <input type=\"text\" id=\"name\"/>\n        <button id=\"sendName\" onclick=\"sendName();\">发送</button>\n        <p id=\"response\"></p>\n    </div>\n\n</div>\n<script th:src=\"@{https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js}\"></script>\n<script th:src=\"@{https://cdn.bootcss.com/sockjs-client/1.1.4/sockjs.min.js}\"></script>\n<script th:src=\"@{https://cdn.bootcss.com/stomp.js/2.3.3/stomp.js}\"></script>\n<script type=\"text/javascript\">\n    var stompClient = null;\n\n    function setConnected(connected){\n        document.getElementById('connect').disabled = connected;\n        document.getElementById('disconnect').disabled = !connected;\n        document.getElementById('conversationDIV').style.visibility = connected ? 'visible':'hidden';\n        $('#response').html();\n    }\n\n    function connect(){\n        //链接Socket的endpoint名称为endpointWisely\n        var socket = new SockJS('/endpointWisely');\n        //使用STOMP子协议的WebSocket客户端\n        stompClient = Stomp.over(socket);\n        //链接WebSocket服务端\n        stompClient.connect({},function (frame) {\n            setConnected(true);\n            console.log('Connected:' + frame);\n            //通过stompClient.subscribe订阅/topic/getResponse目标发送的消息，即控制器中的@SendTo\n            stompClient.subscribe('/topic/getResponse',function (response) {\n                showResponse(JSON.parse(response.body));\n            });\n        });\n    }\n\n    function disconnect(){\n        if(stompClient != null){\n            stompClient.disconnect();\n        }\n        setConnected(false);\n        console.log(\"Disconnecteed\");\n    }\n\n    function sendName(){\n        var name = $('#name').val();\n        stompClient.send(\"/welcome\",{},name);\n    }\n\n    function showResponse(message){\n        $('#response').append($('#response').val() + message + '<br/>');\n    }\n\n</script>\n</body>\n</html>\n```","tags":["springboot"]},{"title":"[mysql] 唯一索引UNIQUE","url":"/2019/03/16//articles/2019/03/16/1552737784000.html/","content":"<a href=\"https://www.cnblogs.com/wuhan729/p/8443119.html\" target=\"_blank\">MYSQL 唯一索引UNIQUE使用方法详解</a>\n```\n（1）创建索引：\nCREATE UNIQUE INDEX indexName ON tableName(tableColumns(length))\n（2）修改表结构：\nALTER tableName ADD UNIQUE [indexName] ON (tableColumns(length))\n（3）创建表的时候直接指定：\nCREATE TABLE tableName ( [...], UNIQUE [indexName] (tableColumns(length));\n```\n\nMySQL中删除unique key的语法 (删除某个字段的唯一性)\n```\nCREATE TABLE `good_booked` (\n  `auto_id` int(10) NOT NULL auto_increment,\n  `good_id` int(11) default NULL,\n  `chemist_id` int(11) default NULL,\n\n  PRIMARY KEY  (`auto_id`),\n  UNIQUE KEY `good_id` (`good_id`,`chemist_id`),\n  KEY `current_state` (`current_state`),\n  KEY `send_time` (`send_time`)\n);\n```\n\n想删除某个表中某个字段的unique key：\n``` \nALTER TABLE good_booked DROP INDEX good_id;\n```\n\n","tags":["mysql"]},{"title":"[layui] 根据地图地址定位省市区","url":"/2019/03/15//articles/2019/03/15/1552655573000.html/","content":"\n```html\n<!DOCTYPE html>\n<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>省市区联动</title>\n    <style type=\"text/css\">\n        .red {\n            color: red;\n        }\n    </style>\n</head>\n\n<body>\n<!-- 弹出层的内容start -->\n<div id=\"showParkingSpaceContent\" style=\"display: none;\">\n    <!-- 内容显示区域start -->\n    <div class=\"layuiWindownContent\">\n        <div class=\"layui-form font-num-6\" lay-filter=\"parkingSpaceFrom\">\n            <div class=\"layui-form-item\">\n                <label class=\"layui-form-label\"><span class=\"red\">* </span>地址</label>\n                <div class=\"layui-input-inline\">\n                    <input type=\"text\" id=\"provinceName\" name=\"provinceName\" lay-verify=\"provinceName\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"省\" disabled>\n                </div>\n                <div class=\"layui-input-inline\">\n                    <input type=\"text\" id=\"cityName\" name=\"cityName\" lay-verify=\"cityName\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"市\" disabled>\n                </div>\n                <div class=\"layui-input-inline\">\n                    <input type=\"text\" id=\"areaName\" name=\"areaName\" lay-verify=\"areaName\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"县/区\" disabled>\n                </div>\n            </div>\n            <div class=\"layui-form-item\">\n                <label class=\"layui-form-label\"></label>\n                <div class=\"layui-input-inline\">\n                    <input type=\"text\" id=\"location\" name=\"location\" lay-verify=\"location\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"请填写详细地址\" style=\"margin-top: -11px;\">\n                </div>\n                <div class=\"div-custom\" style=\"margin-top: -11px;\">地图取点自动获取省/市/区</div>\n            </div>\n            <div class=\"layui-form-item\">\n                <label class=\"layui-form-label\"><span class=\"red\">* </span>经纬度</label>\n                <div class=\"layui-input-inline\">\n                    <input type=\"text\" id=\"inpLongitudeNum\" name=\"inpLongitudeNum\" lay-verify=\"areaName\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"经度\" onkeyup=\"if(isNaN(value))execCommand('undo')\" onafterpaste=\"if(isNaN(value))execCommand('undo')\" disabled>\n                </div>\n                <div class=\"layui-input-inline\">\n                    <input type=\"text\" id=\"inpLatitudeNum\" name=\"inpLatitudeNum\" lay-verify=\"location\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"纬度\" onkeyup=\"if(isNaN(value))execCommand('undo')\" onafterpaste=\"if(isNaN(value))execCommand('undo')\" disabled>\n                </div>\n                <div class=\"div-custom\">地图取点自动获取经纬度</div>\n            </div>\n            <div class=\"layui-form-item\">\n                <label class=\"layui-form-label\">城市名称</label>\n                <div class=\"layui-input-inline\">\n                    <input type=\"text\" id=\"showMapCityName\" name=\"showMapCityName\" oninput=\"if(value.length>15)value=value.slice(0,15)\" lay-verify=\"areaName\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"请输入城市名称\">\n                </div>\n                <div class=\"div-btn\" id=\"getNewCityName\">定位</div>\n                <div class=\"div-custom\">根据城市名可定位到地图相应位置</div>\n            </div>\n            <div id=\"showParkingMap\" class=\"show-parking-map-box\"></div>\n        </div>\n    </div>\n    <!-- 内容显示区域end -->\n</div>\n</body>\n<script>\n    layui.use(['table', 'form', 'laydate'], function() {\n        var myCity = new BMap.LocalCity();\n        myCity.get(myFun);\n        oldParkingName = \"\";\n\n        if (type == \"edit\") {\n            $(\"#parkingCreateTime\").removeClass(\"none\");;\n        }\n        // 百度地图API功能\n        var map = new BMap.Map(\"showParkingMap\");\n        var point = new BMap.Point(116.331398, 39.897445); //地图中心点\n        map.centerAndZoom(point, 12); //缩放层级\n        map.enableScrollWheelZoom(); // 启用滚轮放大缩小，默认禁用\n        var geocoder = new BMap.Geocoder(); //计算\n        //\"定位\"按钮\n        $(\"#getNewCityName\").click(function() {\n            var cityName = $(\"#showMapCityName\").val();\n            if (cityName != \"\") {\n                map.centerAndZoom(cityName, 11); // 用城市名设置地图中心点\n            }\n        });\n\n        map.addEventListener(\"click\", showInfo);\n\n        if ($(\".show-parking-area-box\").html() == \"\") {\n            $(\"#big-area-box\").removeClass(\"none\");\n            var areaObj = { \"id\": 0, \"areaName\": \"\", \"longitude\": longitudeOverAll, \"latitude\": latitudeOverAll };\n            addAreaHtmlFunction(0, areaObj);\n        }\n\n        if (type == \"add\") {\n            function myFun(result) {\n                var cityName = result.name;\n                $(\"#showMapCityName\").val(cityName);\n                map.setCenter(cityName);\n            }\n        } else {\n            $(\"#showMapCityName\").val(data.cityName);\n            var new_point = new BMap.Point(data.longitude, data.latitude)\n            var marker = new BMap.Marker(new_point)\n            map.addOverlay(marker);\n            map.centerAndZoom(new_point, 15);\n        }\n\n\n        var myCity = new BMap.LocalCity();\n        myCity.get(myFun);\n        oldParkingName = \"\";\n        //鼠标点击地图，增加点\n        function showInfo(e) {\n            map.clearOverlays();\n            var marker = new BMap.Marker(e.point);\n            map.addOverlay(marker);\n            geocoder.getLocation(e.point, function(rs) {\n                var provincesOverAll = rs.addressComponents.province;\n                var cityOverAll = rs.addressComponents.city;\n                var countyOverAll = rs.addressComponents.district;\n                var detailsOverAll = rs.addressComponents.street;\n                longitudeOverAll = e.point.lng;\n                latitudeOverAll = e.point.lat;\n\n                $(\"#provinceName\").val(provincesOverAll); //获取省份\n                $(\"#provinceName\").css(\"color\", \"gray\");\n\n                $(\"#cityName\").val(cityOverAll); //获取城市\n                $(\"#cityName\").css(\"color\", \"gray\");\n\n                $(\"#areaName\").val(countyOverAll); //获取区\n                $(\"#areaName\").css(\"color\", \"gray\");\n\n                $(\"#location\").val(detailsOverAll); //获取街道\n\n                $(\"#inpLongitudeNum\").val(longitudeOverAll); //填入经度\n                $(\"#inpLongitudeNum\").css(\"color\", \"gray\");\n\n                $(\"#inpLatitudeNum\").val(latitudeOverAll); //填入纬度\n                $(\"#inpLatitudeNum\").css(\"color\", \"gray\");\n\n            });\n        };\n    });\n</script>\n\n</html>\n```","tags":["layui"]},{"title":"[layui] 省市区三级联动","url":"/2019/03/15//articles/2019/03/15/1552655572000.html/","content":"<a href=\"https://blog.csdn.net/weixin_42457316/article/details/81298069\" target=\"_blank\">layui（省市区）三级联动</a>\n<a href=\"https://github.com/shulongfei/layui_upload.git\" target=\"_blank\">github|layui（省市区）三级联动</a>","tags":["layui"]},{"title":"[Android] 在线短视频播放","url":"/2019/03/15//articles/2019/03/15/1552623375000.html/","content":"一款纯粹的在线视频App，基于Material Design + MVP + RxJava + Retrofit + Realm + Glide\n<a href=\"https://github.com/GeekGhost/Ghost\" target=\"_blank\">微影</a>\n\n<a href=\"https://github.com/JackChan1999/VideoPlayer\" target=\"_blank\">在线短视频播放</a>\n","tags":["Android"]},{"title":"[API] 实用API","url":"/2019/03/15//articles/2019/03/15/1552623374000.html/","content":"<a href=\"https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=neteasecloudmusicapi\" target=\"_blank\">网易云API</a>","tags":["API"]},{"title":"[java] Java网络编程：BIO、NIO、AIO","url":"/2019/03/15//articles/2019/03/15/1552623373000.html/","content":"<a href=\"https://blog.csdn.net/anxpp/article/details/51512200\" target=\"_blank\">Java网络编程：BIO、NIO、AIO</a>\n<a href=\"https://github.com/anxpp/Java-IO\" target=\"_blank\">github | Java-IO </a>","tags":["java"]},{"title":"[java] 获取当前年、月、日 、小时 、分钟、 秒、 毫秒","url":"/2019/03/15//articles/2019/03/15/1552623372000.html/","content":"<a href=\"https://blog.csdn.net/xuforeverlove/article/details/81565173\" target=\"_balnk\">java实现获取当前年、月、日 、小时 、分钟、 秒、 毫秒</a>\n\n","tags":["java"]},{"title":"[java] 检查图片像素","url":"/2019/03/15//articles/2019/03/15/1552623371000.html/","content":"<a href=\"https://www.cnblogs.com/wangjunxiao/p/6700920.html\" target=\"_balnk\">获取图片指定位置的RGB值</a>\n\n<a href=\"https://blog.csdn.net/wy634379160/article/details/46814787\" target=\"_balnk\">Java读取图片像素和大小</a>\n```\n    /**\n     * 获取图片像素\n     */\n    public static int[] getPixel(MultipartFile file) {\n        int[] pixel = new int[2];\n        BufferedImage bi = null;\n        try {\n            bi = ImageIO.read(file.getInputStream());\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        pixel[0] = bi.getWidth();\n        pixel[1] = bi.getHeight();\n        return pixel;\n    }\n```","tags":["java"]},{"title":"[java] 文件大小限制","url":"/2019/03/15//articles/2019/03/15/1552623370000.html/","content":"<a href=\"https://blog.csdn.net/qq_39027229/article/details/80748722\" target=\"_blank\">JAVA后台,对上传资源限定大小</a>\n```\n  /**\n     * 判断文件大小\n     *\n     * @param :multipartFile:上传的文件\n     * @param size: 限制大小\n     * @param unit:限制单位（B,K,M,G)\n     * @return boolean:是否大于\n     */\n    public static boolean checkFileSize( MultipartFile multipartFile, int size, String unit) {\n        long len = multipartFile.getSize();//上传文件的大小, 单位为字节.\n        //准备接收换算后文件大小的容器\n        double fileSize = 0;\n        if (\"B\".equals(unit.toUpperCase())) {\n            fileSize = (double) len;\n        } else if (\"K\".equals(unit.toUpperCase())) {\n            fileSize = (double) len / 1024;\n        } else if (\"M\".equals(unit.toUpperCase())) {\n            fileSize = (double) len / 1048576;\n        } else if (\"G\".equals(unit.toUpperCase())) {\n            fileSize = (double) len / 1073741824;\n        }\n        //如果上传文件大于限定的容量\n        if (fileSize > size) {\n            return false;\n        }\n        return true;\n    }\n```","tags":["java"]},{"title":"[js] 插件","url":"/2019/03/15//articles/2019/03/15/1552623369000.html/","content":"<a href=\"http://www.ijquery.cn/\" target=\"_blank\">爱上JQuery</a>\n","tags":["js"]},{"title":"[mysql] 查看执行sql语句的记录日志","url":"/2019/03/15//articles/2019/03/15/1552623368000.html/","content":"mysql查看执行sql语句的记录日志\n\n1、使用processlist\n```\n-- 但是有个弊端，就是只能查看正在执行的sql语句，对应历史记录，查看不到。好处是不用设置，不会保存。\nuse information_schema;\nshow processlist;\n-- 或者：\nselect * from information_schema.`PROCESSLIST` where info is not null;\n```\n2、开启日志模式\n```\n-- 日志开启\nSET GLOBAL log_output = 'TABLE';SET GLOBAL general_log = 'ON';\n-- 日志关闭\nSET GLOBAL log_output = 'TABLE'; SET GLOBAL general_log = 'OFF';\n```\n3、查询\n```\nSELECT * from mysql.general_log ORDER BY event_time DESC;\n-- date_format(event_time, '%Y-%m-%d %H:%i:%s')\nselect * from sys.syslogins\n```\n4、清空表（delete对于这个表，不允许使用，只能用truncate）\n```\ntruncate table mysql.general_log;\n```\n5、MySQL中查看每个ip的连接数\n```\nselect SUBSTRING_INDEX(host,':',1) as ip , count(*) from information_schema.processlist group by ip;\n```\n6、MySQL查看所有连接的客户端ip\n```\nSELECT substring_index(host, ':',1) AS host_name,state,count(*) FROM information_schema.processlist GROUP BY state,host_name;\n```","tags":["mysql"]},{"title":"[mysql] 触发器","url":"/2019/03/15//articles/2019/03/15/1552623367000.html/","content":"<a href=\"https://www.cnblogs.com/CraryPrimitiveMan/p/4206942.html\" target=\"_blank\">MySQL的学习 - 触发器</a>\n<a href=\"https://www.cnblogs.com/zhangzhongxian/p/7070277.html\" target=\"_blank\">MySQL触发器更新和插入操作</a>\n\n<a href=\"http://www.cnblogs.com/zzwlovegfj/archive/2012/07/04/2576989.html\" target=\"_blank\">mysql之触发器trigger|包含示例</a>\n```\n触发器创建语法四要素：\n1.监视地点(table) \n2.监视事件(insert/update/delete) \n3.触发时间(after/before) \n4.触发事件(insert/update/delete)\n```\n\n句型\n```\nCREATE TRIGGER <trigger_name>\n<after/before> <insert/update/delete> ON <tbl_name> FOR EACH ROW\nbegin\n  <trigger_stmt>\nend;\n```\n\n一个完整的创建触发器示例\n创建site_chart_log表格\n```\ncreate table site_chart_log(\n\tid int(11) primary key auto_increment,\n\tsite_id int(11),\n\ttwo int(11),\n\tfour int(11),\n\tsix int(11),\n\teight int(11),\n\tten int(11),\n\ttwelve int(11),\n\tfourteen int(11),\n\teighteen int(11),\n\ttwenty int(11),\n\ttwenty2 int(11),\n\ttwenty4 int(11)\n);\n```\n\n```\nDELIMITER $\ncreate trigger tri_site_chart_log after update\non student for each row\nbegin\ndeclare c int;\nset c = (select stuCount from class where classID=new.classID);\nupdate class set stuCount = c + 1 where classID = new.classID;\nend$\nDELIMITER ;\n```\n\n```\ncreate trigger upd_tri_site_chart_log\nafter insert on StuCost for each row \nbegin \n update StuCostbyHour set HourCost = HourCost + new.Cost \n where (TimeJD = hour(new.RecordTime) + 1) and date_format(new.RecordTime, '%Y-%m-%d') = date_format(RecordTime, '%Y-%m-%d'); \nend; \n```\n\n```\n2.存储引擎与其特点\n\n特点                Myisam                    InnoDB\n\n批量插入的速度      高                           低\n\n事务安全            不支持                       支持\n\n全文索引            支持                          支持(5.5或以上版本)\n\n锁机制               表锁                           行锁\n```\n","tags":["mysql"]},{"title":"[python] python代码","url":"/2019/03/15//articles/2019/03/15/1552623366000.html/","content":"<a href=\"https://github.com/miqi1992/python_code\" target=\"_blank\">python_code</a>\n","tags":["python"]},{"title":"[springboot] elaticsearch","url":"/2019/03/15//articles/2019/03/15/1552623364000.html/","content":"<a href=\"https://github.com/anxpp/spring-boot-elasticsearch\" target=\"_blank\">spring-boot-elasticsearch</a>\n","tags":["springboot"]},{"title":"[springboot] idea+lombok+@Slf4j","url":"/2019/03/15//articles/2019/03/15/1552623363000.html/","content":"<a href=\"https://blog.csdn.net/xue632777974/article/details/80437452\" target=\"_blank\">lombok @Slf4j注解</a>\n<a href=\"https://github.com/mplushnikov/lombok-intellij-plugin/releases\" target=\"_blank\">idea lombok插件</a>\n```\n@Data：注解在类上；提供类所有属性的 getting 和 setting 方法，此外还提供了equals、canEqual、hashCode、toString 方法 \n@SneakyThrows：无需在签名处显式抛出异常\n@Log4j：注解在类上；为类提供一个 属性名为log 的 log4j 日志对像 \n@Slf4j: 同上 \n@NoArgsConstructor：注解在类上；为类提供一个无参的构造方法 \n@AllArgsConstructor：注解在类上；为类提供一个全参的构造方法\n\n@Setter：注解在属性上；为属性提供 setting 方法\n@Getter：注解在属性上；为属性提供 getting 方法\n```\n<a href=\"https://www.cnblogs.com/30go/p/8468981.html\" target=\"_blank\">eclipse lombok</a>\n<a href=\"https://blog.csdn.net/qq_20698983/article/details/83962002\" target=\"_blank\">Spring boot学习之集成logback和lombok(四)</a>\n<a href=\"https://github.com/xiaotian180/spring-boot-parent/tree/master/3.spring-boot-logback-lombok\" target=\"_blank\">github|spring-boot-logback-lombok</a>\n","tags":["springboot"]},{"title":"[springboot] jar打包发布","url":"/2019/03/15//articles/2019/03/15/1552623362000.html/","content":"```\nmvn clean install -Dmaven.test.skip=true\nscreen -ls\n#创建 \nscreen -S <名字>\n#切换\nscreen -r <名字>\n#退出\nCtrl + A 松开Ctrl 按 D\n#查看进程\nnetstat -anp | grep <服务端口>\nkill <进程id>\njava -Xms512m -Xmx512m -jar <jar包名> &\n```\n","tags":["springboot"]},{"title":"[springboot] kaptcha验证码","url":"/2019/03/15//articles/2019/03/15/1552623361000.html/","content":"<a href=\"https://blog.csdn.net/u014104286/article/details/70515004\" target=\"_blank\">springboot 集成kaptcha验证码简单实例</a>\n<a href=\"https://blog.csdn.net/chenjin_chenjin/article/details/79149100\" target=\"_blank\">spring boot下验证码的实现</a>\n<a href=\"https://github.com/larger5/Kaptcha.git\" target=\"_blank\">Kaptcha</a>\n```\n<dependency>\n\t<groupId>com.github.penggle</groupId>\n\t<artifactId>kaptcha</artifactId>\n\t<version>2.3.2</version>\n</dependency>\n```\n","tags":["springboot"]},{"title":"[springboot] layui+mybatis+shiro+mysql","url":"/2019/03/15//articles/2019/03/15/1552623360000.html/","content":"<a href=\"https://github.com/sunqibao/springboot-layui-mybatis-shiro-mysql\" target=\"_blank\">layui+mybatis+shiro+mysql</a>","tags":["springboot"]},{"title":"[springboot] openoffice实现在线预览功能","url":"/2019/03/15//articles/2019/03/15/1552623359000.html/","content":"<a href=\"https://blog.csdn.net/ccc1234_/article/details/79052809\" target=\"_blank\">springboot搭建文件预览解决方案，支持目前主流格式office文件，txt文件，png，jpg等图片以及压缩文件的在线预览功能</a>\n<a href=\"https://blog.csdn.net/weixin_40162216/article/details/82387621\" target=\"_blank\">springboot+openoffice实现在线预览功能</a>\n<a href=\"https://github.com/Chenchicheng/file_viewer\" target=\"_blank\">github file_viewer</a>\n```\n用于文件的预览。支持文件类型：文本文件 、压缩文件 、office文件、pdf文件等\n```\n","tags":["springboot"]},{"title":"[springboot] rabbitmq监控","url":"/2019/03/15//articles/2019/03/15/1552623358000.html/","content":"<a href=\"https://xvshu.blog.csdn.net/column/info/rabbitmqcheck\" target=\"_balnk\">springboot+rabbitmq</a>\n\n","tags":["springboot"]},{"title":"[springboot] redis单机+集群+哨兵","url":"/2019/03/15//articles/2019/03/15/1552623357000.html/","content":"<a href=\"https://blog.csdn.net/qq_33814088/article/details/83347757\" target=\"_blank\">SpringBoot集成redisson(单机,集群,哨兵)</a>","tags":["springboot"]},{"title":"[springboot] shiro+vue","url":"/2019/03/15//articles/2019/03/15/1552623356000.html/","content":"<a href=\"https://github.com/miqi1992/SpringBoot-Shiro-Vue\" target=\"_blank\">shiro+vue</a>","tags":["springboot"]},{"title":"[springboot] WebSocket获取HttpSession问题","url":"/2019/03/15//articles/2019/03/15/1552623355000.html/","content":"<a href=\"https://www.cnblogs.com/coder163/p/8605645.html\" target=\"_blank\">SpringBoot集成redisson(单机,集群,哨兵)</a>\n","tags":["springboot"]},{"title":"[springboot] 踩坑日记","url":"/2019/03/15//articles/2019/03/15/1552623354000.html/","content":"springboot 踩坑日记 :This may be the result of an unspecified view, due to default view name generation\n```\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-thymeleaf</artifactId>\n</dependency>\n```","tags":["springboot"]},{"title":"[springboot] 电影推荐系统","url":"/2019/03/15//articles/2019/03/15/1552623353000.html/","content":"<a href=\"https://github.com/miqi1992/movie\" target=\"_blank\">电影推荐系统</a>\n","tags":["springboot"]},{"title":"[springboot] 基于maven多模块项目搭建","url":"/2019/03/15//articles/2019/03/15/1552623351000.html/","content":"<a href=\"https://www.cnblogs.com/elvinle/p/8177825.html\" target=\"_blank\">springboot 多模块 - 将 dao(mybatis) 拆分出去</a>\n\n项目多模块打包与部署\n```\nhttps://blog.csdn.net/weixin_42033269/article/details/80086692\nhttps://gitee.com/hengboy/spring-boot-chapter\n```\n<a href=\"https://www.cnblogs.com/jcjssl/p/9380309.html\" target=\"_blank\">基于maven多模块项目搭建</a>","tags":["springboot"]},{"title":"[springboot] redis单机+集群+哨兵","url":"/2019/03/15//articles/2019/03/15/1552623350000.html/","content":"<a href=\"https://github.com/whvcse/JwtPermission\" target=\"_blank\">基于jjwt实现的一套用于前后端分离项目的权限控制框架，用于实现基于token验证的Web权限框架</a>\n\n<a href=\"https://www.jianshu.com/p/ca4cebefd1cc\" target=\"_blank\">Spring boot 2.0 整合 Security JWT 前后分离 认证授权</a>\n<a href=\"https://gitee.com/whvse/EasyWeb\" target=\"_blank\">EasyWeb基于OAuth2.0的前后端分离开发平台</a>\n","tags":["springboot"]},{"title":"[springboot] email、logback+lombok插件","url":"/2019/03/15//articles/2019/03/15/1552623349000.html/","content":"<a href=\"https://github.com/xiaotian180/spring-boot-parent\" target=\"_blank\">spring-boot-parent</a>\n\n<a href=\"https://blog.csdn.net/qq_20698983/article/details/83421020\" target=\"_blank\">Spring Boot 使用 QQ邮箱发邮件</a>\n<a href=\"https://blog.csdn.net/zyw_java/article/details/81635375\" target=\"_blank\">SpringBoot 2.x 集成QQ邮箱、网易系邮箱、Gmail邮箱发送邮件</a>\n<a href=\"https://gitee.com/javen205/SpringBoot_Guide.git\" target=\"_blank\">github</a>\n","tags":["springboot"]},{"title":"[springboot] 在linux下启动失败如何关闭","url":"/2019/03/15//articles/2019/03/15/1552623348000.html/","content":"\n```\nfg\nctrl + c\n```","tags":["springboot"]},{"title":"[springboot] 在service层获取session和request","url":"/2019/03/15//articles/2019/03/15/1552623347000.html/","content":"<a href=\"https://blog.csdn.net/javaofliang/article/details/52237903\" target=\"_blank\">spring在service层获取session和request</a>\n\n首先要在web.xml增加如下代码:\n```\n<listener>\n    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>\n</listener>\n```\n\nservice层调用\n```\n@Autowired  \nprivate HttpSession session;  \n\n@Autowired  \nprivate HttpServletRequest request; \n\n\nHttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();\n```\n\n```\n/**\n * @return\n * @Description：获得当前session\n * @return: HttpSession\n */\npublic static HttpSession getSession() {\n    HttpSession session = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest().getSession();// 获得当前session\n    return session;\n}\n```\n\n<a href=\"http://www.zuidaima.com/question/3705058816248832.htm\" target=\"_blank\">springboot配置RequestContextListener</a>\n```\n\t@Bean\n\tpublic RequestContextListener requestContextListener(){\n\t    return new RequestContextListener();\n\t}\n\n\t//配置 RequestContextListener\n\t@Bean\n\tpublic ServletListenerRegistrationBean<RequestContextListener> listenerRegistration3() {\n\t\treturn new ServletListenerRegistrationBean<>(new RequestContextListener());\n\t}\n\nHttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();  \n```\n","tags":["springboot"]},{"title":"[springboot] 在线视频播放","url":"/2019/03/15//articles/2019/03/15/1552623346000.html/","content":"<a href=\"https://github.com/zhiyiTec/OnlineVideo\" target=\"_blank\">使用分离的前端+springBoot框架来实现在线视频播放功能</a>\n<a href=\"https://github.com/joutaojian/sitvideo\" target=\"_blank\">使用SSM搭建的在线视频播放项目(包括前后台)</a>\n<a href=\"https://github.com/mjquestc/SSMVedio\" target=\"_blank\">ssm+jsp</a>\n<a href=\"https://github.com/iamzken/simple-video-website\" target=\"_blank\">java写的简单的在线视频播放网站</a>\n","tags":["springboot"]},{"title":"[springboot] 在线音乐播放","url":"/2019/03/15//articles/2019/03/15/1552623345000.html/","content":"<a href=\"https://github.com/sunqibao/-springboot-\" target=\"_blank\">在线音乐播放</a>\n","tags":["springboot"]},{"title":"[springcloud] 消息总线SpringCloudBus","url":"/2019/03/15//articles/2019/03/15/1552623344000.html/","content":"<a href=\"https://www.jianshu.com/p/70b0e95b0ec3\" target=\"_blank\">消息总线SpringCloudBus</a>\n","tags":["springcloud"]},{"title":"[springmvc] SpringMVC+Mybatis+Shiro+redis","url":"/2019/03/15//articles/2019/03/15/1552623343000.html/","content":"<a href=\"https://github.com/baichengzhou/SpringMVC-Mybatis-Shiro-redis-0.2\" target=\"_blank\">SpringMVC-Mybatis-Shiro-redis</a>\n","tags":["springmvc"]},{"title":"[前端] WEB技术分享博客","url":"/2019/03/15//articles/2019/03/15/1552623342000.html/","content":"<a href=\"https://www.helloweba.net/\" target=\"_blank\">WEB技术分享博客</a>\n","tags":["前端"]},{"title":"[前端] 省市区联动","url":"/2019/03/15//articles/2019/03/15/1552623341000.html/","content":"<a href=\"https://www.cnblogs.com/olivianate/p/5330811.html\" target=\"_blank\">基于jQuery+JSON省市区联动效果jquery.cityselect.js</a>\n\n<a href=\"http://www.ijquery.cn/demo/cityselect/cityselect.zip\" target=\"_blank\">cityselect.zip</a>\n\n<a href=\"http://www.ijquery.cn/js/cityselect/city.min.js\" target=\"_blank\">city.mini.js</a>\n```\n<div id=\"city\">\n    <select class=\"prov\"></select>\n    <select class=\"city\" disabled=\"disabled\"></select>\n    <select class=\"dist\" disabled=\"disabled\"></select>\n</div>\n\n<!--<script type=\"text/javascript\" src=\"http://www.jq22.com/jquery/jquery-3.3.1.js\"></script>-->\n<script type=\"text/javascript\" src=\"http://www.ijquery.cn/demo/cityselect/js/jquery.js\"></script>\n<script type=\"text/javascript\" src=\"http://www.ijquery.cn/demo/cityselect/js/jquery.cityselect.js\"></script>\n<script type=\"text/javascript\">\n    $(function(){\n        $(\"#city\").citySelect({\n            prov:\"湖南\", //省份\n            city:\"长沙\", //城市\n            dist:\"岳麓区\" //区县\n        });\n    });\n</script>\n```\n","tags":["前端"]},{"title":"[微信] 扫码+java实现微信支付","url":"/2019/03/15//articles/2019/03/15/1552623340000.html/","content":"<a href=\"https://github.com/search?l=Java&q=%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98&type=Repositories\" target=\"_blank\">github搜索| java微信扫码支付</a>\n<a href=\"https://github.com/szhgoldeneye/WechatPay\" target=\"_blank\">github | WechatPay</a>\n<a href=\"https://github.com/softprog/spring-boot-pay\" target=\"_blank\">github | 利用 srping boot实现的支付宝快捷支付，wap支付和微信扫码支付，公众号支付</a>\n<a href=\"https://blog.csdn.net/qq_37345604/article/details/79742324\" target=\"_blank\">扫码支付-java实现微信支付后端篇</a>\n","tags":["微信"]},{"title":"[小程序] 省市区联动","url":"/2019/03/15//articles/2019/03/15/1552623339000.html/","content":"<a href=\"https://github.com/chenjinxinlove/citySelect\" target=\"_blank\">省市区联动</a>","tags":["小程序"]},{"title":"[小程序] 微信小程序导航项目","url":"/2019/03/15//articles/2019/03/15/1552623338000.html/","content":"<a href=\"https://github.com/giscafer/wechat-weapp-mapdemo\" target=\"_blank\">wechat-weapp-mapdemo</a>\n\n","tags":["小程序"]},{"title":"[小程序] java微信小程序支付","url":"/2019/03/10//articles/2019/03/10/1552212067000.html/","content":"<a href=\"https://blog.csdn.net/qq_30641447/article/details/73222648\" target=\"_blank\">微信小程序支付（小程序 + java后端）</a>\n<a href=\"https://pan.baidu.com/s/1dFRVmiX\" target=\"_blank\">小程序微信支付java.zip\n</a>\n```\ndkx7\n```\n\n<a href=\"https://blog.csdn.net/zhourenfei17/article/details/77765585\" target=\"_blank\">微信小程序支付 java</a>\n<a href=\"https://pan.baidu.com/s/1v8QWUE1m2EnA4uAoAZtRRQ\" target=\"_blank\">demo.zip</a>\n```\ncgrt\n```\n<a href=\"https://blog.csdn.net/qq_39316096/article/details/80242283\" target=\"_blank\">java-微信小程序支付代码分享</a>","tags":["小程序"]},{"title":"[小程序] 常用合法request域名","url":"/2019/03/10//articles/2019/03/10/1552212065000.html/","content":"```\nhttps://api.map.baidu.com\nhttps://apis.map.qq.com\n```","tags":["小程序"]},{"title":"[小程序] 腾讯地图","url":"/2019/03/10//articles/2019/03/10/1552212063000.html/","content":"<a href=\"http://3gimg.qq.com/lightmap/xcx/jssdk/qqmap-wx-jssdk1.2.zip\" target=\"_blank\">小程序js库|qqmap-wx-jssdk1.2.zip</a>\n<a href=\"https://lbs.qq.com/qqmap_wx_jssdk/\" target=\"_blank\">官方Hello world代码</a>\n<a href=\"https://lbs.qq.com/guides/startup.html\" target=\"_blank\">申请开发密钥（Key）</a>\n小程序添加合法request域名\n```\nhttps://apis.map.qq.com\n```\n<a href=\"https://lbs.qq.com/console/mykey.html?console=mykey\" target=\"_blank\">查看我的key</a>\n```\n找出：\nkey 、 授权 APP ID\n```\n<a href=\"https://lbs.qq.com/webservice_v1/index.html\" target=\"_blank\">WebServiceAPI 入门及使用限制</a>\n<a href=\"https://lbs.qq.com/tool/component-route.html\" target=\"_blank\">官方路线规划组件</a>\n<a href=\"https://mp.weixin.qq.com/wxopen/plugindevdoc?appid=wx5bc2ac602a747594&token=435650527&lang=zh_CN\" target=\"_blank\">腾讯地图路线插件</a>\n<a href=\"https://www.jb51.net/article/107018.htm\" target=\"_blank\">使用腾讯地图SDK详解及实现步骤|qqmapsdk.search</a>\n<a href=\"https://blog.csdn.net/muzimiaomiaopeng/article/details/82181847\" target=\"_blank\">wx.getLocation + 腾讯地图 逆地址解析</a>\n```js\nvar QQMapWX = require('qqmap-wx-jssdk.js');\nvar qqmapsdk;\nPage({\n\n  data:{\n    location:''\n  },\n\n  onLoad: function() {\n    qqmapsdk = new QQMapWX({\n      key: '申请的key'\n    });\n  },\n\n  onShow: function() {\n    qqmapsdk.search({\n      keyword: '酒店',\n      success: function(res) {\n        console.log(res);\n      },\n      fail: function(res) {\n        console.log(res);\n      },\n      complete: function(res) {\n        console.log(res);\n      }\n    });\n  },\n\n  getLocation: function(e) {\n    var that = this;\n    wx.getLocation({\n      success: function(res) {\n        type: 'wgs84'\n        qqmapsdk.reverseGeocoder({\n          location: {\n            latitude: res.latitude,\n            longitude: res.longitude\n          },\n          success: function(e) {\n            var location = e.result.address;\n            that.setData({\n              location: location\n            })\n          }\n        })\n      },\n    })\n  }\n\n})\n```\n","tags":["小程序"]},{"title":"[小程序] 百度地图","url":"/2019/03/10//articles/2019/03/10/1552212062000.html/","content":"<a href=\"https://github.com/baidumapapi/wxapp-jsapi\" target=\"_blank\">wxapp-jsapi|小程序示例</a>\n<a href=\"https://blog.csdn.net/michael_ouyang/article/details/55097646\" target=\"_blank\">微信小程序的百度地图获取地理位置</a>\n<a href=\"http://lbsyun.baidu.com/apiconsole/key\" target=\"_blank\">AK列表</a>\n<a href=\"http://www.phptext.net/article_view.php?id=790\" target=\"_blank\">问题解决|百度地图WEB API报错：APP Referer校验失败</a>\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#permission\" target=\"_blank\">微信小程序permission设置</a>\napp.json\n```\n{\n  \"pages\": [\"pages/index/index\"],\n  \"permission\": {\n    \"scope.userLocation\": {\n      \"desc\": \"你的位置信息将用于小程序位置接口的效果展示\"\n    }\n  }\n}\n```\n","tags":["小程序"]},{"title":"[jsp] ssm","url":"/2019/03/10//articles/2019/03/10/1552212061000.html/","content":"<a href=\"https://github.com/zhongmiao0706/NumberOne-MM\" target=\"_blank\">Java SSM 商户管理系统</a>\n```\n客户管理\n库存管理\n销售报表\n\n系统介绍： \n1.系统采用主流的 SSM 框架 jsp JSTL bootstrap html5 (PC浏览器使用) \n2.springmvc + spring4.2.5 + mybaits3.3 SSM 普通java web（非maven） 3.数据库：mysql\n4.开发工具：myeclipse eclipse idea 均可\n```","tags":["jsp"]},{"title":"[小程序] 富文本解析","url":"/2019/03/10//articles/2019/03/10/1552212054000.html/","content":"<a href=\"https://www.jianshu.com/p/50cbb428ad1c\" target=\"_blank\">简书 | wxParse富文本解析</a>\n<a href=\"https://github.com/icindy/wxParse\" target=\"_blank\">github | wxParse</a>\n","tags":["小程序"]},{"title":"[小程序] 图表","url":"/2019/03/10//articles/2019/03/10/1552212053000.html/","content":"<a href=\"https://github.com/xiaolin3303/wx-charts\" target=\"_blank\">wx-charts</a>\n","tags":["小程序"]},{"title":"[小程序] 小程序借鉴","url":"/2019/03/10//articles/2019/03/10/1552212052000.html/","content":"<a href=\"https://github.com/SuperKieran/weapp-artand/tree/master/pages/login\" target=\"_blank\">登陆</a>\n<a href=\"https://github.com/SuperKieran/weapp-artand/tree/master/pages/register\" target=\"_blank\">注册</a>\n<a href=\"https://github.com/SuperKieran/weapp-artand/tree/master/pages/register\" target=\"_blank\">二维码</a>\n<a href=\"https://github.com/vincentSea/wechat-cnode\" target=\"_blank\">社区评论列表</a>\n<a href=\"https://github.com/yesifeng/wechat-weapp-movie\" target=\"_blank\">搜索</a>\n<a href=\"https://github.com/lanfeng1993/LoadDataDemo\" target=\"_blank\">分页加载</a>\n<a href=\"https://gitee.com/zhongyoucong/order-project\" target=\"_blank\">餐厅</a>\n","tags":["小程序"]},{"title":"[小程序] 源码大全","url":"/2019/03/10//articles/2019/03/10/1552212051000.html/","content":"<a href=\"https://www.jianshu.com/p/8685a24ab008\" target=\"_blank\">简书|微信小程序开源项目整理(github)</a>\n<a href=\"https://www.cnblogs.com/tuyile006/p/6268961.html\" target=\"_blank\">cnblogs|微信小程序实例源码大全</a>\n<a href=\"https://www.jianshu.com/p/e49a366030bc\" target=\"_blank\">简书|微信小程序开源项目库集合</a>\n\n> github小程序常用组件\n\n<a href=\"https://github.com/justjavac/awesome-wechat-weapp\" target=\"_blank\">awesome-wechat-weapp</a>\n<a href=\"https://github.com/opendigg/awesome-github-wechat-weapp\" target=\"_blank\">awesome-github-wechat-weapp</a>\n\n","tags":["小程序"]},{"title":"[小程序] fashop小程序商城+docker-compose+php后台","url":"/2019/03/10//articles/2019/03/10/1552212049000.html/","content":"<a href=\"https://github.com/mojisrc/wechat-mini-shop\" target=\"_blank\">wechat-mini-shop</a>\n","tags":["小程序"]},{"title":"[blog] 大前端","url":"/2019/03/09//articles/2019/03/09/1552103307000.html/","content":"<a href=\"http://jeffzhong.space/sites/demo/index.html\" target=\"_blank\">前端特效</a>\n<a href=\"https://github.com/edwardzhong?tab=repositories\" target=\"_blank\">github|前端特效</a>","tags":["blog"]},{"title":"[h5] demos","url":"/2019/03/09//articles/2019/03/09/1552103306000.html/","content":"<a href=\"https://github.com/xbw12138/H5_Theme_Collect\" target=\"_blank\">h5+bootstrap demos</a>\n","tags":["h5"]},{"title":"[css3] demos","url":"/2019/03/09//articles/2019/03/09/1552103305000.html/","content":"<a href=\"https://github.com/kingheshan/tmooc\" target=\"_blank\">css3实战教程素材</a>\n","tags":["css3"]},{"title":"[vue] demos","url":"/2019/03/09//articles/2019/03/09/1552103304000.html/","content":"<a href=\"https://github.com/jgchenu/vue-shopcar\" target=\"_blank\">慕课网购物车 vue.js入门教程源码+素材</a>","tags":["vue"]},{"title":"[架构] 后端结构师技术图谱","url":"/2019/03/09//articles/2019/03/09/1552103303000.html/","content":"<a href=\"https://github.com/xingshaocheng/architect-awesome/blob/master/README.md\" target=\"_blank\">后端架构师技术图谱</a>","tags":["架构"]},{"title":"[素材] 素材","url":"/2019/03/09//articles/2019/03/09/1552103302000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=%E7%B4%A0%E6%9D%90&ref=simplesearch\" target=\"_blank\">github素材</a>\n<a href=\"https://www.easyicon.net\">easyicon</a>\n<a href=\"http://www.iconfont.cn/\">github登陆|阿里iconfont</a>\n<a href=\"http://www.lanrentuku.com/\">懒人图库</a>\n<a href=\"https://github.com/ppt-tips/awesome-ppt\">github|awesome-ppt</a>\n<a href=\"https://icon.52112.com/\">寻图标|收费</a>\n<a href=\"http://3png.com/\">qq微信登陆|3png三元素</a>\n\n\n","tags":["素材"]},{"title":"[mysql] 时间查询","url":"/2019/03/09//articles/2019/03/09/1552100736000.html/","content":"<a href=\"https://blog.csdn.net/a453169345/article/details/82048654\" target=\"_blank\">以当前时间为基准的查询</a>\n```sql\n-- 查询当前日期\nSELECT DATE_SUB(CURDATE(),INTERVAL 0 DAY) ;\nSELECT NOW();\nSELECT CURDATE();\n-- 如需格式化可用DATE_FORMAT函数\nSELECT DATE_FORMAT(NOW(),'%Y-%m-%d %h:%i:%s');\n-- 查询昨天\nSELECT DATE_SUB(CURDATE(),INTERVAL 1 DAY);\n-- 查询明天\nSELECT DATE_SUB(CURDATE(),INTERVAL -1 DAY) ;\n-- 查询前一个小时\nSELECT DATE_SUB(NOW(),INTERVAL 1 HOUR) ;\n-- 查询后一个小时\nSELECT DATE_SUB(NOW(),INTERVAL -1 HOUR) ;\n-- 查询前一分钟\nSELECT DATE_SUB(NOW(),INTERVAL 1 MINUTE) ;\n-- 查询前一年\nSELECT DATE_SUB(NOW(),INTERVAL 1 YEAR) ;\n```\n\n<a href=\"https://blog.csdn.net/qq_34902684/article/details/82989844\" target=\"_blank\">mysql常用时间列表的查询（七天内、本月、本周、某天）</a>\n","tags":["mysql"]},{"title":"[layui] 常见问题的处理和实用干货","url":"/2019/03/09//articles/2019/03/09/1552100734000.html/","content":"<a href=\"https://fly.layui.com/jie/5366/\" target=\"_blank\">常见问题的处理和实用干货</a>\nLayui的select不显示，会是什么原因呢？\n```html\n#原因：没有调用render方法\n\n#解决：\nlayui.use('form', function(){\n\tvar form = layui.form; \n\tform.render();\n});\n```\n\nlayui开始时间和结束时间\n```html\n<div class=\"form-group\">\n    <div class=\"layui-form\">\n        <div class=\"layui-form-item\">\n\n            <label class=\"layui-form-label\">日期</label>\n            <div class=\"layui-input-inline\">\n                <input type=\"text\" id=\"start_time\" name=\"start_time\" autocomplete=\"off\" placeholder=\"请输入开始时间\" class=\"layui-input\">\n            </div>\n            <div class=\"layui-input-inline\">\n                <input type=\"text\" id=\"end_time\" name=\"end_time\" autocomplete=\"off\" placeholder=\"请输入结束时间\" class=\"layui-input\">\n            </div>\n\n\n            <div id=\"searchBtnId\" class=\"layui-btn\">搜索</div>\n\n        </div>\n    </div>\n\n    <table class=\"layui-hide\" id=\"<tableId>\" lay-filter=\"<tableFilter>\"></table>\n</div>\n<script>\n        layui.use('laydate', function(){\n            var laydate = layui.laydate;\n            var endDate= laydate.render({\n                elem: '#end_time',//选择器结束时间\n                type: 'datetime',\n                min:\"1970-1-1\",//设置min默认最小值\n                done: function(value,date){\n                    startDate.config.max={\n                        year:date.year,\n                        month:date.month-1,//关键\n                        date: date.date,\n                        hours: 0,\n                        minutes: 0,\n                        seconds : 0\n                    }\n                }\n            });\n            //日期范围\n            var startDate=laydate.render({\n                elem: '#start_time',\n                type: 'datetime',\n                max:\"2099-12-31\",//设置一个默认最大值\n                done: function(value, date){\n                    endDate.config.min ={\n                        year:date.year,\n                        month:date.month-1, //关键\n                        date: date.date,\n                        hours: 0,\n                        minutes: 0,\n                        seconds : 0\n                    };\n                }\n            });\n        });\n</script>\n```\n\n","tags":["layui"]},{"title":"[requirejs] jfinal","url":"/2019/03/09//articles/2019/03/09/1552100732000.html/","content":"<a href=\"http://www.requirejs.cn/\" target=\"_blank\">requirejs中文官网</a>\n<a href=\"https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#what-is-thymeleaf\" target=\"_blank\">thymeleaf</a>\n<a href=\"https://www.w3cschool.cn/jfinal/\" target=\"_blank\">w3cschool|jfinal</a>\n<a href=\"https://www.jianshu.com/p/0120e7eae2b3\" target=\"_blank\">requirejs和AngularJS结合使用</a>\n<a href=\"https://blog.csdn.net/bluesky1215/article/details/71079667\" target=\"_blank\">requirejs实用教程</a>\n<a href=\"https://www.cnblogs.com/huaxingtianxia/p/5508276.html\" target=\"_blank\">JFinal连接数据库配置说明</a>\n<a href=\"https://www.jianshu.com/p/fe189f969f5e\" target=\"_blank\">requireJS 从概念到实战</a>","tags":["requirejs"]},{"title":"[react-native] redux","url":"/2019/03/09//articles/2018/03/09/1552099169000.html/","content":"<a href=\"https://github.com/febobo/react-native-redux-FeInn\" target=\"_blank\">react native redux FeInn 从零到1让你学会搭建一个APP</a>\n","tags":["react-native"]},{"title":"[javaswing] JavaSwing","url":"/2019/03/09//articles/2018/03/09/1552099168000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/kingdomrushing/FiveChess/tree/master\" target=\"_blank\">五子棋|FiveChess</a>\n\n","tags":["javaswing"]},{"title":"[docker] windows docker","url":"/2019/03/08//articles/2019/03/08/1551977819000.html/","content":"<a href=\"https://gitforwindows.org\" target=\"_blank\">github|git-bash</a>\n<a href=\"https://www.git-scm.com/downloads\" target=\"_blank\">git-bash</a>\nDocker Quickstart Terminal\n```\n\"D:\\Program Files\\Git\\bin\\bash.exe\" --login -i \"D:\\Program Files\\Docker Toolbox\\start.sh\"\n```","tags":["docker"]},{"title":"[java] DateUtils","url":"/2019/03/07//articles/2019/03/07/1551920553000.html/","content":"<a href=\"http://www.cnblogs.com/ouyanxia/p/7484951.html\" target=\"_blank\">较常用的时间工具类DateUtil</a>\n<a href=\"https://blog.csdn.net/xzp_12345/article/details/79438006\" target=\"_blank\">Java中的日期转化格式DateUtil工具类</a>\n","tags":["java"]},{"title":"[mysql] 日期查询","url":"/2019/03/07//articles/2019/03/07/1551920552000.html/","content":"<a href=\"https://www.cnblogs.com/benefitworld/p/5832897.html\" target=\"_blank\">日期查询</a>\n\n","tags":["mysql"]},{"title":"[springboot] MyBatis+分页插件PageHelper+通用Mapper","url":"/2019/03/07//articles/2019/03/07/1551920551000.html/","content":"<a href=\"https://github.com/abel533/MyBatis-Spring-Boot\" target=\"_blank\">Spring Boot 集成 MyBatis, 分页插件 PageHelper, 通用 Mapper</a>\n","tags":["springboot"]},{"title":"[springboot] Maven的profile与SpringBoot的profile结合使用详解","url":"/2019/03/07//articles/2019/03/07/1551920550000.html/","content":"<a href=\"https://www.cnblogs.com/zeng1994/p/06917ed3b98677fa7a1b0f74de16c3be.html\" target=\"_blank\">Maven的profile与SpringBoot的profile结合使用详解</a>","tags":["springboot"]},{"title":"[springboot] springdatajpa+lombok+querydsl","url":"/2019/03/07//articles/2019/03/07/1551920549000.html/","content":"<a href=\"https://blog.csdn.net/phapha1996/article/details/83614975\" target=\"_blank\">SpringDataJPA+QueryDSL玩转态动条件/投影查询</a>\n<a href=\"https://blog.csdn.net/weixin_42033269/article/details/80059265\" target=\"_blank\">使用QueryDSL与SpringDataJPA实现单表普通条件查询</a>\n\n\n\n\n","tags":["springboot"]},{"title":"[Android] 开发工具集","url":"/2019/03/06//articles/2019/03/06/1551876237000.html/","content":"<a href=\"http://www.androiddevtools.cn\" target=\"_blank\">www.androiddevtools.cn</a>","tags":["Android"]},{"title":"[小程序] 小程序demos","url":"/2019/03/06//articles/2019/03/06/1551874718000.html/","content":"<a href=\"https://github.com/yeahatgithub/MovieApp\" target=\"_blank\">我的电影APP</a>\n<a href=\"https://github.com/yeahatgithub/CityWeather\" target=\"_blank\">城市天气</a>\n<a href=\"https://github.com/yeahatgithub/AlbumVideos\" target=\"_blank\">相册视频</a>\n<a href=\"https://github.com/yeahatgithub/NavigatorArray\" target=\"_blank\">导航</a>\n","tags":["小程序"]},{"title":"[小程序] 微信小程序布局插件wxgrid","url":"/2019/03/06//articles/2019/03/06/1551874717000.html/","content":"<a href=\"http://blog.csdn.net/wowkk/article/details/52739490\" target=\"_blank\">布局插件：wxgrid</a>","tags":["小程序"]},{"title":"[小程序] 分页懒加载","url":"/2019/03/06//articles/2019/03/06/1551874716000.html/","content":"<a href=\"https://www.jianshu.com/p/066c062845e9\" target=\"_blank\">最佳方式实现微信小程序分页加载数据</a>\n<a href=\"https://github.com/lanfeng1993/LoadDataDemo\" target=\"_blank\">LoadDataDemo</a>\n<a href=\"https://www.cnblogs.com/ideacore/p/7724879.html\" target=\"_blank\">小程序学习 - 下拉分页</a>\n<a href=\"https://blog.csdn.net/guanguan0_0/article/details/80354972\" target=\"_blank\">微信小程序分页懒加载</a>\n<a href=\"https://www.cnblogs.com/DurantSimpson/p/9509824.html\" target=\"_blank\">微信小程序分页加载列表</a>\n","tags":["小程序"]},{"title":"[小程序] 常用工具类及网站","url":"/2019/03/06//articles/2019/03/06/1551874715000.html/","content":"<a href=\"https://blog.csdn.net/AdamBieber/article/details/54969047\" target=\"_blank\">常用工具类及网站</a>\n```\n前言：\n做微信小程序当中，会遇到好多的工具类util.js，这里记载下来以便平常使用 \n(Ps:建议通过目录查看) \n很快微信开发者平台：\nhttp://www.henkuai.com/forum.php\n<a href=\"\" target=\"_blank\"></a>\nHotApp小程序统计：\nhttps://weixin.hotapp.cn/\n微信小程序联盟：\nhttp://www.wxapp-union.com/\n```\n<a href=\"http://pan.baidu.com/s/1bpgRWfH\" target=\"_blank\">获取日期（格式化）|t4vx</a>\n<a href=\"http://pan.baidu.com/s/1pLyKxVd\" target=\"_blank\">获取动态更新时间|96le</a>\n<a href=\"http://pan.baidu.com/s/1dFKd3zF\" target=\"_blank\">二维码生成|er3v</a>\n<a href=\"http://pan.baidu.com/s/1i5LrqHf\" target=\"_blank\">html转wxml|jjwm</a>\n<a href=\"http://pan.baidu.com/s/1jINXhki\" target=\"_blank\">生成md5|yabo</a>","tags":["小程序"]},{"title":"[小程序] 登录注册页面设计","url":"/2019/03/06//articles/2019/03/06/1551874715000.html/","content":"<a href=\"https://github.com/youzan/zanui-weapp\" target=\"_blank\">登录注册页面设计</a>","tags":["小程序"]},{"title":"[小程序] JSON对象转换成url参数","url":"/2019/03/06//articles/2019/03/06/1551874714000.html/","content":"<a href=\"\" target=\"_blank\">JSON对象转换成url参数</a>\n```\ndata1 = encodeURI(JSON.stringify(data.rows[0]));\nmoduleInfo = encodeURI(JSON.stringify(data.rows[1]));\ntargetHref \"/XXX/&data='\"+data1+\"&moduleInfo=\"+moduleInfo;\n```","tags":["小程序"]},{"title":"[前端] js监听标签","url":"/2019/03/06//articles/2019/03/06/1551874713000.html/","content":"JS 监听浏览器离开页面操作\n```html\n<body>\n</body>\n<script>\nwindow.onbeforeunload=function(e){     \n　　var e = window.event||e;  \n　　e.returnValue=(\"确定离开当前页面吗？\");\n}\n</script>\n```\n<a href=\"https://blog.csdn.net/MLGB__NIU/article/details/84103377\" target=\"_blank\">JS 监听浏览器各个标签间的切换 - 简单实现</a>\n```html\n<script>\nvar originTitile = document.title, titleTime\n\ndocument.addEventListener('visibilitychange', function() {\n    if (document.hidden) {\n        document.title = '(┬＿┬)';\n        clearTimeout(titleTime);\n    } else {\n        document.title = 'hello world';\n        titleTime = setTimeout(function() {\n            document.title = originTitile;\n        },2000);\n    }\n});\n</script>\n```\n<a href=\"https://www.cnblogs.com/fangsmile/p/8296348.html\" target=\"_blank\">JS 监听浏览器各个标签间的切换 - 讲解和实现</a>\n```html\n<script>\nfunction getHiddenProp()\n{\n    var prefixes = ['webkit','moz','ms','o'];\n\n    if ('hidden' in document) return 'hidden';\n\n    for (var i = 0; i < prefixes.length; i++)\n    {\n        if ((prefixes[i] + 'Hidden') in document) \n            return prefixes[i] + 'Hidden';\n    }\n    return null;\n}\nfunction getVisibilityState() \n{\n    var prefixes = ['webkit', 'moz', 'ms', 'o'];\n    if ('visibilityState' in document) return 'visibilityState';\n    for (var i = 0; i < prefixes.length; i++) \n    {\n        if ((prefixes[i] + 'VisibilityState') in document)\n            return prefixes[i] + 'VisibilityState';\n    }\n    return null;\n}\n\nfunction isHidden() \n{\n    var prop = getHiddenProp();\n    if (!prop) return false;\n    \n    return document[prop];\n}\n\nvar visProp = getHiddenProp();\nif (visProp) \n{\n    var evtname = visProp.replace(/[H|h]idden/, '') + 'visibilitychange';\n    document.addEventListener(evtname, function () \n    {\n        document.title = document[getVisibilityState()]+\"状态\";\n    }, false);\n}\n</script>\n```\n","tags":["前端"]},{"title":"[springboot] 玩转springboot","url":"/2019/03/06//articles/2019/03/06/1551874712000.html/","content":"<a href=\"https://github.com/carter659/spring-boot-skill-01\" targer=\"_blank\">玩转springboot - </a>\n","tags":["springboot"]},{"title":"[springboot] 二维码登陆","url":"/2019/03/06//articles/2019/03/06/1551874711000.html/","content":"<a href=\"https://blog.csdn.net/lzp492782442/article/details/80268565\" targer=\"_blank\">springboot之扫码登录实战-微信扫码</a>\n<a href=\"https://www.cnblogs.com/GoodHelper/p/8641905.html\" targer=\"_blank\">spring boot高性能实现二维码扫码登录(上)——单服务器版</a>\n<a href=\"https://www.cnblogs.com/GoodHelper/p/8643071.html\" targer=\"_blank\">spring boot高性能实现二维码扫码登录(中)——Redis版</a>\n<a href=\"https://www.cnblogs.com/GoodHelper/p/8650243.html\" targer=\"_blank\">spring boot高性能实现二维码扫码登录(下)——订阅与发布机制版</a>\n\n<a href=\"https://github.com/liuyueyi/quick-media\" targer=\"_blank\">github|spring-boot & zxing 搭建二维码服务|小灰灰Blog</a>\n<a href=\"https://my.oschina.net/u/566591/blog/1457164\" targer=\"_blank\">oschina|spring-boot & zxing 搭建二维码服务</a>\n<a href=\"https://www.jianshu.com/p/16bc8c4c03a4\" targer=\"_blank\">简书|spring-boot & zxing 搭建二维码服务|小灰灰Blog</a>\n\n<a href=\"https://blog.csdn.net/xvshu/article/details/80571897\" target=\"_blank\">二维码登录（一）概要设计</a>\n<a href=\"https://github.com/xvshu/qrlogin\" target=\"_blank\">github|qrlogin</a>\n","tags":["springboot"]},{"title":"[springboot] sojson.com在线工具","url":"/2019/03/06//articles/2019/03/06/1551874710000.html/","content":"<a href=\"https://github.com/baichengzhou\" target=\"_blank\">github|sojson.com在线工具</a>\n","tags":["springboot"]},{"title":"[springboot] logback","url":"/2019/03/06//articles/2019/03/06/1551874709000.html/","content":"<a href=\"https://www.cnblogs.com/lixuwu/p/5804793.html\" target=\"_blank\">Spring boot——logback 基础使用篇（一）</a>\n<a href=\"https://blog.csdn.net/qq296398300/article/details/79036447\" target=\"_blank\">SpringBoot整合+logback日志配置</a>\n<a href=\"https://www.cnblogs.com/aben-blog/p/8968363.html\" target=\"_blank\">Spring Boot 集成 logback日志</a>\n<a href=\"https://blog.csdn.net/qq_28988969/article/details/79136941\" target=\"_blank\">SpringBoot学习－（二十）SpringBoot整合Freemarker</a>\n\n<a href=\"https://www.cnblogs.com/zhaojiatao/p/8482998.html\" target=\"_blank\">springboot+shiro+mysql+mybatis(通用mapper)+freemarker+ztree+layui实现通用的java后台管理系统(权限管理+用户管理+菜单管理)</a>\n<a href=\"https://github.com/zhaojiatao/springboot-zjt-chapter10-springboot-mysql-mybatis-shiro-freemarker-layui\" target=\"_blank\">github</a>\n\n<a href=\"http://www.bkjia.com/Javabc/1299176.html#top\" target=\"_blank\">www.bkjia.com</a>\n<a href=\"https://github.com/zhaojiatao/springboot-zjt-chapter08-springboot-mybatis\" target=\"_blank\">github</a>\n```\n通用mapper文档：https://gitee.com/free/Mapper\npagehelper文档：https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md\nlayui文档：http://www.layui.com/doc/\n```","tags":["springboot"]},{"title":"[springboot] jsp","url":"/2019/03/06//articles/2019/03/06/1551874708000.html/","content":"<a href=\"https://blog.csdn.net/qq_38762237/article/details/81283352\" target=\"_blank\">SpringBoot 新手配置使用jsp页面</a>\n<a href=\"https://gitee.com/xbq168/spring-boot-learn\" target=\"_blank\">\n整合了JSP、FreeMark、Servlet、Filter、Listener、Spring的拦截器，以及对静态资源的处理，启动项目的时候加载数据，以及使用tomcat-jdbc数据源整合Mybatis实现动态切换数据源，从而实现查询多个数据库。实现了整合Redis。</a>\n\n","tags":["springboot"]},{"title":"[springboot] freemarker","url":"/2019/03/06//articles/2019/03/06/1551874707000.html/","content":"<a href=\"https://github.com/hong52ni/SpringBoot-SeedProject\" target=\"_blank\">SpringBoot-SeedProject</a>\n<a href=\"https://www.sojson.com/blog/290.html\" target=\"_blank\">www.sojson.com</a>","tags":["springboot"]},{"title":"[springboot] easypoi","url":"/2019/03/06//articles/2019/03/06/1551874706000.html/","content":"<a href=\"https://gitee.com/lemur/easypoi-test/tree/master/src/test/java/cn/afterturn\">easypoi官方例子</a>\n<a href=\"http://easypoi.mydoc.io/\" target=\"_blank\">easypoi中文文档</a>\n```\nEasyPoi 模板 表达式支持\n空格分割\n三目运算 {{test ? obj:obj2}}\nn: 表示 这个cell是数值类型 {{n:}}\nle: 代表长度{{le:()}} 在if/else 运用{{le:() > 8 ? obj1 : obj2}}\nfd: 格式化时间 {{fd:(obj;yyyy-MM-dd)}}\nfn: 格式化数字 {{fn:(obj;###.00)}}\nfe: 遍历数据,创建row\n!fe: 遍历数据不创建row\n$fe: 下移插入,把当前行,下面的行全部下移.size()行,然后插入\n#fe: 横向遍历\nv_fe: 横向遍历值\n!if: 删除当前列 {{!if:(test)}}\n单引号表示常量值 '' 比如'1' 那么输出的就是 1\n&NULL& 空格\n]] 换行符 多行遍历导出\nsum： 统计数据\n```\n\n<a href=\"https://www.jianshu.com/p/5d67fb720ece\" target=\"_blank\">springboot+easypoi一行代码搞定excel导入导出</a>\n<a href=\"https://www.jianshu.com/p/b9ec05479de3\" target=\"_blank\">超实用easypoi简单模板导出Excel</a>\n<a href=\"https://github.com/YangDongChuan1995/Excel_To_DB\" target=\"_blank\">github|SpringBoot+EasyPoi+Redis消息队列实现Excel批量异步导入数据库</a>\n\nword模板\n<a href=\"https://github.com/cmtccc/exportzip\" target=\"_blank\">springboot+easypoi生成word+zip导出</a>\n\nexcel模板\n<a href=\"https://github.com/IanHJW/easypoi/blob/master/src/test/java/easypoi/demo/template/TemplateExcelExportTest.java\" target=\"_blank\">实现excel报表导入导出</a>\n","tags":["springboot"]},{"title":"[springboot] Dockerfile","url":"/2019/03/06//articles/2019/03/06/1551874705000.html/","content":"<a href=\"https://blog.csdn.net/axela30w/article/details/82183853\" target=\"_blank\">Docker Dockerfile打包SpringBoot项目为镜像并部署</a>\n\n<a href=\"https://blog.csdn.net/anxpp/article/details/73478883\" target=\"_blank\">spring boot 应用发布到 docker (完整版)</a>\n<a href=\"https://github.com/anxpp/springboot-docker-demo\" target=\"_blank\">github | springboot-docker-demo</a>","tags":["springboot"]},{"title":"[springboot] MultipartFile+jsp+ajax","url":"/2019/03/06//articles/2019/03/06/1551874704000.html/","content":"<a href=\"https://www.cnblogs.com/s648667069/p/6510694.html\" target=\"_blank\">SpringBoot 之 （多）文件上传</a>\n<a href=\"https://blog.csdn.net/YapingGe2014/article/details/73603624\" target=\"_blank\">spring boot MultipartFile[]文件上传</a>\n\n\n","tags":["springboot"]},{"title":"[spring] 各种常用Java框架组合","url":"/2019/03/06//articles/2019/03/06/1551874703000.html/","content":"<a href=\"https://github.com/ZHENFENG13\" target=\"_blank\">github示例</a>","tags":["spring"]},{"title":"[mysql] 将图片存储到数据库表","url":"/2019/03/06//articles/2019/03/06/1551874702000.html/","content":"mysql的四种BLOB类型\n| 类型 | 最大存储 |\n|:------:|:------:|:------:|\n| tinyblob | 255B |\n| blob | 65K |\n| mediumblob | 16M |\n| longblob | 4G |\n\nsql\n```\nCREATE TABLE MyTable (\n   img1  tinyblob,\n   img2  blob,\n   img3  mediumblob,\n   img4  longblob\n);\n#用sql语句将插入图片到mysql数据库中\nINSERT INTO MyTable (img1) VALUES(LOAD_FILE('/path/to/image.png'));\n```","tags":["mysql"]},{"title":"[docker] 萌の宇","url":"/2019/03/06//articles/2019/03/06/1551874701000.html/","content":"<a href=\"http://dj1211.com/\" target=\"_blank\">萌の宇</a>\n","tags":["docker"]},{"title":"[maven] 常用第三方maven库","url":"/2019/02/26//articles/2019/02/26/1551193137000.html/","content":"<a href=\"https://mvnrepository.com/artifact/com.alipay.sdk\" target=\"_blank\">阿里maven库</a>\n<a href=\"https://mvnrepository.com/artifact/com.jfinal\" target=\"_blank\">jfinal maven库</a>\n<a href=\"https://mvnrepository.com/artifact/com.qiniu\" target=\"_blank\">七牛云maven库</a>\n\n<a href=\"http://www.jfinal.com/share/1235\" target=\"_blank\">国内CDN分流下载 JFinal 3.5 手册 及 demo</a>\n<a href=\"https://res.szlt.net/project/jfinal/jfinal-weixin-2.1.zip\" target=\"_blank\">jfinal-weixin-2.1.zip</a>\nJFinal 3.5 changelog 如果乱码请访问*gbk.txt\n```\nhttps://res.szlt.net/project/jfinal/jfinal-3.5-changelog.txt\nhttps://res.szlt.net/project/jfinal/jfinal-3.5-changelog-gbk.txt\n```\n<a href=\"https://res.szlt.net/project/jfinal/jfinal-3.5-all.zip\" target=\"_blank\">jfinal-3.5-all.zip</a>\n<a href=\"https://res.szlt.net/project/jfinal/jfinal-3.5_demo.zip\" target=\"_blank\">jfinal-3.5_demo.zip</a>\n<a href=\"https://res.szlt.net/project/jfinal/jfinal-3.5_demo_for_maven.zip\" target=\"_blank\">jfinal-3.5_demo_for_maven.zip</a>","tags":["maven"]},{"title":"[docker] github_Dokerfile","url":"/2019/02/26//articles/2019/02/26/1551193136000.html/","content":"```\nhttps://github.com/chenyufeng1991/tomcat-centos7-dockerfile\nhttps://github.com/chenyufeng1991/rabbitmq-centos7-dockerfile\nhttps://github.com/chenyufeng1991/nginx-centos7-dockerfile\nhttps://github.com/chenyufeng1991/tomcat-ubuntu-dockerfile\n```","tags":["docker"]},{"title":"[springboot] springboot启动热部署","url":"/2019/02/26//articles/2019/02/26/1551193135000.html/","content":"<a href=\"https://blog.csdn.net/qq_37598011/article/details/80778915\" target=\"_blank\">SpringBoot启动热部署</a>\n<a href=\"https://blog.csdn.net/lihongjing/article/details/82662892\" target=\"_blank\">spring boot在idea下debug调试热部署</a>\n<a href=\"https://blog.csdn.net/isea533/article/details/70495714\" target=\"_blank\">Spring DevTools介绍</a>\n一、 通过spring-boot-devtools实现热部署\n1、在工程项目中添加spring-boot-devtools依赖\n```\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <optional>true</optional>\n            <scope>true</scope>\n        </dependency>\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <executable>true</executable>\n                    <fork>true</fork>\n                    <addResources>true</addResources>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n```\n2、application.yml\n```\nspring:\n    devtools:\n        restart:\n            #热部署生效\n          enabled: true\n          #设置重启的目录\n         #additional-paths: src/main/java\n          #classpath目录下的WEB-INF文件夹内容修改不重启\n          exclude: WEB-INF/**\n          additional-paths: src/main/java\n    freemarker:\n        #页面不加载缓存，修改即时生效\n        cache: false\n```\n3、运行程序（不可直接运行main类来启动项目）\n```\nmvn spring-boot:run\n```\n二、通过springloaded实现热部署\n1、通过如下配置添加springloaded依赖\n```\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>springloaded</artifactId>\n            <version>1.2.6.RELEASE</version>\n        </dependency>\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.springframework</groupId>\n                        <artifactId>springloaded</artifactId>\n                        <version>1.2.6.RELEASE</version>\n                    </dependency>\n                </dependencies>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <classifier>exec</classifier>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n```\n2、如果使用thymeleaf模板，一定要在application.properties中添加\n```\nspring.thymeleaf.cache=false\n```\n3、运行程序\n```\nclean package spring-boot:run -Dmaven.test.skip=true\n```\n\n三、idea设置\n```\nFile -> Settings... -> Build，Execution，Deployedment -> Compiler -> Build Project automatically\n\nCtrl + Shift + Alt + /，选择Registry，勾选 compiler.automake.allow.when.app.running\n```\n\n四、热部署调试设置\n```\n首先在pom文件中添加配置信息\n-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\n\n<plugin>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-maven-plugin</artifactId>\n    <configuration>\n        <executable>true</executable>\n        <fork>true</fork>\n        <addResources>true</addResources>\n        <jvmArguments>\n            -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\n        </jvmArguments>\n    </configuration>\n</plugin>\n\nspring-boot:run -Drun.jvmArguments=\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"\n```\n\n五、rebuild快捷键\n```\nctrl+shift+F9\n```\n\n六、application.properties\n```\n#是否开启缓存\nspring.thymeleaf.cache=false\n\n#热部署生效\ndevtools.restart.enabled=true\n#设置重启的目录\ndevtools.restart.additional-paths=resources/**,static/**,templates/**\n#该目录下的内容修改不重启\n#devtools.restart.exclude=data/**\n```\n\n七、如果页面不rebuild，使用以下命令\n```\nmvn compile\n```\n","tags":["springboot"]},{"title":"[Android] 游戏开发","url":"/2019/02/26//articles/2019/02/26/1551193134000.html/","content":"<a href=\"https://blog.csdn.net/qq_20698983/article/details/79114710\" target=\"_blank\">Android开发的消消乐游戏</a>\n<a href=\"https://pan.baidu.com/s/1eTkO9mq\">度娘|w48l</a>\n<a href=\"https://blog.csdn.net/xiaominghimi/column/info/androidgame\" target=\"_blank\">Android游戏开发专栏</a>\n<a href=\"https://blog.csdn.net/mango9126/article/details/78832533\" target=\"_blank\">20个Android游戏源码，…</a>\n\n<a href=\"https://github.com/yeahatgithub/TuiXiangzi\" target=\"_blank\">推箱子</a>\n<a href=\"https://github.com/JieYuShi/ParticleFireProject\" target=\"_blank\">OpenGL ES粒子实现简单火焰效果</a>\n\n<a href=\"https://github.com/hayukleung/HandleView\" target=\"_blank\">《贪吃蛇大作战》方向控制按钮效果实现</a>\n\n<a href=\"https://github.com/liuwei1993/mini-games.git\" target=\"_blank\">俄罗斯方块+贪吃蛇</a>\n<a href=\"https://github.com/luoyesiqiu/Mine\" target=\"_blank\">扫雷</a>\n<a href=\"https://github.com/Sean-Git/sean-android-puzzle\" target=\"_blank\">拼图</a>\n\n<a href=\"https://qdct01.baidupcs.com/file/265b2f0b8603637ab352ea39720fb8a8?bkt=p3-0000d9ac12c60cce20dc4e2f5041dcf81c52&fid=1973860983-250528-471462645526020&time=1551104490&sign=FDTAXGERLQBHSKfW-DCb740ccc5511e5e8fedcff06b081203-VHpQdaVjk28tItPz5m6Ztaev1mo%3D&to=90&size=8790997&sta_dx=8790997&sta_cs=0&sta_ft=7z&sta_ct=7&sta_mt=7&fm2=MH%2CYangquan%2CAnywhere%2C%2Cguangdong%2Cct&ctime=1513681604&mtime=1513681604&resv0=cdnback&resv1=0&vuk=1310677397&iv=0&htype=&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=0000d9ac12c60cce20dc4e2f5041dcf81c52&sl=76480590&expires=8h&rt=sh&r=406334321&mlogid=1297211489625083620&vbdid=3152752656&fin=MahjongSolitaire.7z&fn=MahjongSolitaire.7z&rtype=1&dp-logid=1297211489625083620&dp-callid=0.1.1&hps=1&tsl=80&csl=80&csign=XPMxw3fzbha2ji2o1SU2dlIdF40%3D&so=0&ut=6&uter=4&serv=0&uc=874179299&ti=78cccb630bb0656ea81b42417d7324e70c5d612c1bc6ea23&by=themis\" target=\"_blank\">MahjongSolitaire</a>\n\n<a href=\"https://github.com/zhaohuiyuliang/Game_fight_loadlord\" target=\"_blank\">斗地主</a>\n<a href=\"https://github.com/zhaohuiyuliang/AndroidUnlock\" target=\"_blank\">图案解锁</a>\n\n<a href=\"https://github.com/cnRuanYF/AndroidGameExperiments\" target=\"_blank\">Android游戏开发实验 40个游戏</a>\n\n<a href=\"https://www.jianshu.com/p/12d1c0c8e974\" target=\"_blank\">Android应用libGDX引擎系列(一)-Android FrameWork 基于libGDX实现高性能动画特效（粒子特效/烟花效果篇）</a>\n<a href=\"https://github.com/qjoy/libGDX-Android-AppEffect\" target=\"_blank\">libGDX游戏引擎</a>\n<a href=\"https://github.com/denisk20/AndroidOpenGLESLessons\" target=\"_blank\">AndroidOpenGLESLessons</a>","tags":["Android"]},{"title":"[kotlin] Android+Kotlin实战书籍博客","url":"/2019/02/26//articles/2019/02/26/1551193133000.html/","content":"<a href=\"https://blog.csdn.net/aqi00/article/details/50012511\" target=\"_blank\">Android+Kotlin实战书籍博客</a>","tags":["kotlin"]},{"title":"[springboot] springboot+jpa+freemarker实现后端分页完整示例","url":"/2019/02/25//articles/2019/02/25/1551056832000.html/","content":"<a href=\"https://github.com/EasyKotlin/chatper15_net_io_img_crawler\" target=\"_blank\">github|springboot+jpa+freemarker实现后端分页完整示例</a>\n<a href=\"https://www.jianshu.com/p/cee11a002307\" target=\"_blank\">简书|springboot+jpa+freemarker实现后端分页完整示例</a>","tags":["springboot"]},{"title":"[java] jpa生成表注释","url":"/2019/02/25//articles/2019/02/25/1551056831000.html/","content":"<a href=\"https://blog.csdn.net/ninisui/article/details/79309081\" target=\"_blank\">jpa 生成表注释</a>\n<a href=\"http://www.majunwei.com/view/201707241152140494.html\" target=\"_blank\">Jpa自动创建表，添加注释</a>\n```\n@Column(name=\"loginname\",columnDefinition=(\"varchar(50)  default null comment '登录名'\"))\n```\n<a href=\"https://blog.csdn.net/u014268482/article/details/80883471\" target=\"_blank\">JPA单项一对多外键关联</a>","tags":["java"]},{"title":"[pdm] 根据mysql表结构生成对应的pdm","url":"/2019/02/25//articles/2019/02/25/1551056830000.html/","content":"<a href=\"https://blog.csdn.net/u011641008/article/details/79495360\" target=\"_blank\">根据mysql表结构生成对应的pdm</a>\n<a href=\"https://www.cnblogs.com/duanxz/p/3792723.html\" target=\"_blank\">powerdesigner中将表的name在生成建表sql时生成注释</a>\n<a href=\"https://blog.csdn.net/kun_zai/article/details/78722571\" target=\"_blank\">PowerDesigner导入mysql文件注释丢失问题解决</a>\ncomment2code.vbs\n```\nOption   Explicit\nValidationMode   =   True\nInteractiveMode   =   im_Batch\n\nDim   mdl   '   the   current   model\n\n'   get   the   current   active   model \nSet   mdl   =   ActiveModel      \nIf   (mdl   Is   Nothing)   Then      \n       MsgBox   \"There   is   no   current   Model \"\nElseIf   Not   mdl.IsKindOf(PdPDM.cls_Model)   Then\n       MsgBox   \"The   current   model   is   not   an   Physical   Data   model. \"\nElse      \n      ProcessFolder   mdl      \nEnd   If     \n\nPrivate   sub   ProcessFolder(folder)\nOn Error Resume Next     \n      Dim   Tab   'running     table\n       for   each   Tab   in   folder.tables\n             if   not   tab.isShortcut   then\n                  tab.name   =   tab.comment\n                  Dim   col   '   running   column\n                   for   each   col   in   tab.columns\n                   if col.comment=\"\" then\n                   else\n                        col.name=   col.comment\n                   end if\n                  next\n             end   if\n      next\n\n      Dim   view   'running   view\n       for   each   view   in   folder.Views\n             if   not   view.isShortcut   then\n                  view.name   =   view.comment\n             end   if\n      next\n\n      '   go   into   the   sub-packages\n      Dim   f   '   running   folder\n      For   Each   f   In   folder.Packages\n             if   not   f.IsShortcut   then\n                 ProcessFolder   f\n             end   if\n      Next\nend   sub\n```\n<a href=\"https://jingyan.baidu.com/article/851fbc3799a9143e1f15ab94.html\" target=\"_blank\">定制powerdesigner个性化菜单</a>\n<a href=\"https://blog.csdn.net/qq_31302091/article/details/75214777\" target=\"_blank\">PowerDesigner如何将消失的工具栏显示出来</a>\n<a href=\"https://blog.csdn.net/u011781521/article/details/78958529\" target=\"_blank\">PowerDesigner逆向导入MYSQL数据库并显示中文注释|ODBC</a>","tags":["pdm"]},{"title":"[js] Set集合","url":"/2019/02/25//articles/2019/02/25/1551056829000.html/","content":"<a href=\"https://www.cnblogs.com/20gg-com/p/6687443.html\" target=\"_blank\">js 中 Map/Set 集合</a>\n<a href=\"https://www.cnblogs.com/xiaoyulive/p/7906548.html\" target=\"_blank\">JS中集合对象(Array、Map、Set)及类数组对象的使用与对比</a>\n```\nvar arr = [1,2,3,4,4];\nvar list_key = new Set(arr);\nvar what = list_key.keys();\nfor (let item of list_key.keys()) {\n    console.log(item);\n}\narr.length == Array.from(what).length\n```","tags":["js"]},{"title":"[springboot] springboot+微信小程序短信验证码","url":"/2019/02/25//articles/2019/02/25/1551025245000.html/","content":"<a href=\"https://blog.csdn.net/it18911008884/article/details/78520051\" target=\"_blank\">spring-boot | 集成短信验证码服务</a>\n<a href=\"https://blog.csdn.net/wangguang1995/article/details/80092734\" target=\"_blank\">微信小程序获取手机验证码|界面好看</a>\n<a href=\"https://blog.csdn.net/dianziagen/article/details/80805346\" target=\"_blank\">微信小程序-短信验证码</a>\n<a href=\"https://github.com/BeijiYang/minaSmsVerification\" target=\"_blank\">github|minaSmsVerification</a>\n<a href=\"https://github.com/NullPointer8023/springboot-mini-program\" target=\"_blank\">springboot-mini-program</a>\n<a href=\"https://blog.csdn.net/codejas/article/details/79341919\" target=\"_blank\">慕课网：SpringBoot+MyBatis搭建迷你小程序</a>\n<a href=\"https://blog.csdn.net/zuoliangzhu/article/details/81219900\" target=\"_blank\">包含springmvc</a>\n<a href=\"https://blog.csdn.net/qq_32584661/article/details/80607240\" target=\"_blank\">小程序学习：全局变量的设置、获取、修改，全局方法是执行</a>","tags":["Android"]},{"title":"[Android] 百度语音","url":"/2019/02/25//articles/2019/02/25/1551025243000.html/","content":"<a href=\"http://ai.baidu.com/tech/speech/wake\" target=\"_blank\">百度语音唤醒</a>\n<a href=\"https://github.com/search?l=Java&o=desc&q=%E7%99%BE%E5%BA%A6%E8%AF%AD%E9%9F%B3&s=stars&type=Repositories\" target=\"_blank\">github|search|Android百度语音</a>\n\n仿照Siri，利用百度语音和图灵机器人，实现打电话，聊天等功能\n<a href=\"https://github.com/AmazingUU/Android-VoiceAssistant\" target=\"_blank\">Android-VoiceAssistant</a>","tags":["Android"]},{"title":"[Android] 播放器","url":"/2019/02/25//articles/2019/02/25/1551025242000.html/","content":"<a href=\"https://github.com/CarGuo/GSYVideoPlayer\" target=\"_blank\">github|\n远光软件|Shuyu Guo\n视频播放器（IJKplayer、ExoPlayer、MediaPlayer），\n支持\nHTTPS，\n弹幕，滤镜、水印、gif截图，片头广告、中间广告，多个同时播放，\n基本的拖动，声音、亮度调节，\n边播边缓存，\n视频本身自带rotation的旋转（90,270之类），\n重力旋转与手动旋转的同步，\n列表播放 ，直接添加控件为封面，列表全屏动画，视频加载速度，列表小窗口支持拖动，动画效果，调整比例，多分辨率切换，\n切换播放器，进度条小窗口预览，列表切换详情页面无缝播放，其他一些小动画效果，rtsp、concat、mpeg</a>\n\n<a href=\"https://blog.csdn.net/qq_24531461/article/details/73456794\" target=\"_blank\">著名Android播放器开源项目介绍</a>\n```\nhttps://github.com/Bilibili/ijkplayer\nhttps://github.com/google/ExoPlayer\nhttps://github.com/googlesamples/android-UniversalMusicPlayer\nhttps://github.com/CarGuo/GSYVideoPlayer\nhttps://github.com/lipangit/JieCaoVideoPlayer\nhttps://github.com/naman14/Timber\nhttps://github.com/ryanhoo/StylishMusicPlayer\nhttps://github.com/psaravan/JamsMusicPlayer\nhttps://github.com/andremion/Music-Player\nhttps://github.com/daniulive/SmarterStreaming\nhttps://github.com/pili-engineering/PLDroidPlayer\nhttps://github.com/danylovolokh/VideoPlayerManager\n```","tags":["Android"]},{"title":"[Android] 人脸识别","url":"/2019/02/25//articles/2019/02/25/1551025241000.html/","content":"<a href=\"https://github.com/chenyufeng1991/BaiduMap-TrafficAssistant\" target=\"_blank\">github|百度地图助手</a>\n<a href=\"http://www.bubblyyi.com/2016/09/13/android使用face架构包实现人脸识别/\" target=\"_blank\">Face++人脸识别demo</a>\n<a href=\"https://github.com/kongqw/OpenCVForAndroid\" target=\"_blank\">目标检测&目标追踪&人脸检测&人脸识别</a>\n<a href=\"https://blog.csdn.net/weixin_40441128/article/details/82498032\" target=\"_blank\">ArcFaceDemo使用讲解</a>\n1.下载代码\n```\ngit clone https://github.com/andyxm/ArcFaceDemo.git\n```\n2.<a href=\"http://www.arcsoft.com.cn/ai/sdk/apply-1002-4.html\" target=\"_blank\">下载虹软人脸识别库</a>\n<a href=\"https://pan.baidu.com/s/1H3H1VxGpEv7-8ODyV8G4dw\" target=\"_blank\">虹软人脸识别库|度娘|tq2w</a>\n```\n获取对应的key下载对应的android SDK,将对应平台的so和jar都放入demo中的libs里\n下载的libs库后放入facelib下的Module\n```\n3.主项目在face中\n4.FaceHelper中实现了FaceDataHelper\n```\n填写你的所有对应的key,和你将要查询的StudentModel,其中isSaveSdcard如果要保存到sd卡一定要设置true\n```\n5.FaceFRAbsLoop中设置分数值\n6.存储路径\n```\n使用 Android Studio 的 Device File Explorer 可以查看路径\n\n图片的存储路径：/sdcard/Face/Images\n人脸数据存储路：/sdcard/Android/data/com.face/cache\n\n解决多张多次拍照注册ANR问题注意：\n部分开发板可能会有问题，去找你的厂商协调下 使用摄像头时，请自行调节就可以了\n```\n7.安装报错\n```\nInstallation failed with message Failed to finalize session : INSTALL_FAILED_NO_MATCHING_ABIS: Failed to extract native libraries, res=-113.\n\nbuild.gradle\nandroid {\n  splits {\n    abi {\n        enable true\n        reset()\n        include 'x86', 'armeabi-v7a'\n        universalApk true\n    }\n  }\n}\n```\n<a href=\"https://github.com/chenyufeng1991/Android-HowOld\" target=\"_blank\">使用Face++库的adt工程</a>","tags":["Android"]},{"title":"[Android] 百度地图交通类","url":"/2019/02/25//articles/2019/02/25/1551025240000.html/","content":"<a href=\"https://github.com/chenyufeng1991/BaiduMap-TrafficAssistant\" target=\"_blank\">github|百度地图助手</a>","tags":["Android"]},{"title":"[springboot] 微信平台开发","url":"/2019/02/25//articles/2019/02/25/1551025239000.html/","content":"<a href=\"https://github.com/binarywang/weixin-java-pay-demo\" target=\"_blank\">微信支付</a>\n<a href=\"https://github.com/binarywang/weixin-java-miniapp-demo\" target=\"_blank\">小程序</a>\n\n<a href=\"https://gitee.com/binary/weixin-java-mp-demo-springboot.git\" target=\"_blank\">gitee|springboot|公众号</a>\n<a href=\"https://github.com/binarywang/weixin-java-mp-demo-springmvc\" target=\"_blank\">github|springmvc公众号</a>\n\n<a href=\"https://github.com/simplezhli/RxPay\" target=\"_blank\">实现支付宝、微信支付</a>","tags":["springboot"]},{"title":"[springboot] 微信小程序点餐系统","url":"/2019/02/25//articles/2019/02/25/1551025238000.html/","content":"<a href=\"http://www.sqmax.top/springboot-project/\" target=\"_blank\">官网</a>\n<a href=\"https://github.com/sqmax/springboot-project\" target=\"_blank\">springboot微信小程序点餐系统后台</a>\n","tags":["springboot"]},{"title":"[批处理] 常用批处理","url":"/2019/02/25//articles/2019/02/25/1551025237000.html/","content":"<a href=\"https://github.com/auspbro/batch-snippets\" target=\"_blank\">github|batch-snippets</a>\n<a href=\"https://github.com/VonSdite/Bat\" target=\"_blank\">github|bat</a>","tags":["批处理"]},{"title":"[java] log4j与logback配置文件","url":"/2019/02/25//articles/2019/02/25/1551025236000.html/","content":"log4j.properties\n```\n###设置###\nlog4j.rootLogger=debug,stdout,D,E,File\n\n###输出信息到控制抬###\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%-5p]%d{yyyy-MM-ddHH:mm:ss,SSS}method:%l%n%m%n\n\n###输出INFO级别以上的日志到 logs/wechat_debug.log###\nlog4j.appender.File=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.File.File=logs/wechat_info.log\nlog4j.appender.File.Append=true\nlog4j.appender.File.Threshold=INFO\nlog4j.appender.File.layout=org.apache.log4j.PatternLayout\nlog4j.appender.File.layout.ConversionPattern=%-d{yyyy-MM-ddHH:mm:ss}[%t:%r]-[%p]%m%n\n\n###输出DEBUG级别以上的日志到 logs/wechat_debug.log###\nlog4j.appender.D=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.D.File=logs/wechat_debug.log\nlog4j.appender.D.Append=true\nlog4j.appender.D.Threshold=DEBUG\nlog4j.appender.D.layout=org.apache.log4j.PatternLayout\nlog4j.appender.D.layout.ConversionPattern=%-d{yyyy-MM-ddHH:mm:ss}[%t:%r]-[%p]%m%n\n\n###输出ERROR级别以上的日志到 logs/wechat_error.log###\nlog4j.appender.E=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.E.File=logs/wechat_error.log\nlog4j.appender.E.Append=true\nlog4j.appender.E.Threshold=ERROR\nlog4j.appender.E.layout=org.apache.log4j.PatternLayout\nlog4j.appender.E.layout.ConversionPattern=%-d{yyyy-MM-ddHH:mm:ss}[%t:%r]-[%p]%m%n\n```\n<a href=\"https://www.cnblogs.com/warking/p/5710303.html\" target=\"_blank\">logback的使用和logback.xml详解</a>\n","tags":["java"]},{"title":"[Android] jniLibs","url":"/2019/02/25//articles/2019/02/25/1551025234000.html/","content":"<a href=\"https://blog.csdn.net/weixin_36838630/article/details/73826427\" target=\"_blank\">手把手教你 - JNI的基础实现</a>\n<a href=\"https://blog.csdn.net/fang410103/article/details/83012043\" target=\"_blank\">Android中关于libs和JniLibs的各种坑</a>\n```\n1、如果是在eclipse中，需要放到libs下对应库的目录\n\n2、Android Studio 会默认匹配main下的jniLibs目录\n\n3、Android Studio 手动指定使用libs下的库\n#app\\build.gradle中加入以下配置\nandroid {\n    sourceSets {\n        main {\n            jniLibs.srcDirs = ['libs']\n        }\n    }\n}\n```","tags":["Android"]},{"title":"[springboot] 百度人脸识别","url":"/2019/02/25//articles/2019/02/25/1551025234000.html/","content":"<a href=\"https://github.com/search?l=Java&o=desc&q=%E7%99%BE%E5%BA%A6%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB&s=stars&type=Repositories\" target=\"_blank\">github|search|百度人脸识别</a>\n\n<a href=\"https://blog.csdn.net/qq_37525899/article/details/85246173\" target=\"_blank\">springboot中使用百度人脸识别</a>","tags":["springboot"]},{"title":"[react-native] 百度人脸识别","url":"/2019/02/25//articles/2019/02/25/1551025233000.html/","content":"<a href=\"https://github.com/songxiaoliang/react-native-baidu-face\" target=\"_blank\">react-native-baidu-face</a>","tags":["react-native"]},{"title":"[Android] 红外遥控器","url":"/2019/02/25//articles/2019/02/25/1551025232000.html/","content":"<a href=\"https://www.jianshu.com/p/8deeab7f7f47\" target=\"_blank\">简书|Mitaer|android红外遥控器|长按</a>\n<a href=\"https://www.jianshu.com/p/ac189aa321bd\" target=\"_blank\">简书|Mitaer|android红外遥控器</a>\n\n<a href=\"https://github.com/search?l=Java&o=desc&q=%E9%81%A5%E6%8E%A7%E5%99%A8&s=stars&type=Repositories\" target=\"_blank\">github|search|遥控器</a>\n<a href=\"https://blog.csdn.net/qq_17766199/article/details/79466506\" target=\"_blank\">玩玩Andoid的拖拽|实现一款万能遥控器</a>\n\n<a href=\"https://github.com/JackyAndroid/AndroidTVLauncher/blob/master/README-CN.md\" target=\"_blank\">AndroidTVLauncher</a>\n<a href=\"https://github.com/Tamicer/FocusView.git\" target=\"_blank\">安卓tv</a>\n<a href=\"https://github.com/kingthy/TVRemoteIME\" target=\"_blank\">TVRemoteIME</a>\n<a href=\"https://github.com/hejunlin2013/LivePlayback\" target=\"_blank\">安卓tv直播</a>\n<a href=\"https://github.com/zhangjianhao/RemoteControler\" target=\"_blank\">万能遥控器-实现了类似小米万能遥控器的基本功能，还可以遥控电脑</a>\n","tags":["Android"]},{"title":"[Android] Eclipse项目导入AS","url":"/2019/02/25//articles/2019/02/25/1551025231000.html/","content":"<a href=\"https://www.cnblogs.com/mstk/p/6307291.html\" target=\"_blank\">Android Studio导入Eclipse项目的两种方法</a>\n```\n关闭当前的项目 -> 此时弹出一个Welcome对话框 -> 选择Import project (Eclipse ADT, Gradle, etc.) -> 选择要导入的Eclipse项目\nidea工作空间打开后，将看到一个生成android studio版本的工程\n```\n当导入的工程出现gradle报错时，可以参考以下配置\n```\n#<android工程名>\\build.gradle\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.3'\n    }\n}\n\n#<android工程名>\\app\\build.gradle\napply plugin: 'com.android.application'\nandroid {\n    compileSdkVersion 21\n    buildToolsVersion '23.0.0'\n\n    defaultConfig {\n        applicationId \"com.code.demo\"\n        minSdkVersion 19\n        targetSdkVersion 22\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:22.2.1'\n}\n```","tags":["Android"]},{"title":"[Android] AndroidStudio报错处理集合","url":"/2019/02/25//articles/2019/02/25/1551025230000.html/","content":"<a href=\"https://blog.csdn.net/qq_36982160/article/details/80722093\" target=\"_blank\">Android Studio解决org.gradle.api.resources.ResourceException: Could not get resource</a>\n```\n勾选 Enabled embedded Maven repository\n```\n\n版本不兼容\n```\nThe versions of the Android Gradle plugin and Gradle are not compatible.\nPlease do one of the following:<ul><li>Update your plugin to version 2.4. This will require changes to build.gradle due to API changes.\nOpen migration guide</li><li>Downgrade Gradle to version 3.5.\nFix Gradle wrapper and re-import project</li></ul>\n```\n解决版不兼容\n<a href=\"https://brightereyer.xyz/2018/12/18//articles/2018/12/18/1545145002000.html\" target=\"_blank\">gradle对应sdk</a>\n```\n#工程根目录 -> gradle目录 -> wrapper -> gradle-wrapper.properties\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip\n\n#build.gradle\nbuildscript{\n    dependencies {\n       classpath 'com.android.tools.build:gradle:3.0.1'\n    }\n}\n```\n\n<a href=\"https://services.gradle.org/distributions/gradle-3.5-all.zip\" target=\"_blank\">gradle-3.5-all.zip</a>\n```\n%USERPROFILE%\\.gradle\\wrapper\\dists\\gradle-3.5-all\n```\n\naapt.exe finished with non-zero exit value 1\n<a href=\"https://blog.csdn.net/zhangfengwu2014/article/details/79315548\" target=\"_blank\">原因分析</a>\n```\n1. 对图片的审查严格\n解决思路：把jpg格式的图片全部替换为png格式的图片 \n2. 添加的包重复\n解决思路：把build.gradle添加的重复的包去掉 \n3. 可能是缓存导致的\n解决思路：重新创建一下工程。 \n4. Android Studio 问题\n解决思路：重启后打开\n5. Clean、Rebuild 缓存问题\n解决思路：gradle 同步一下\n6. SDK 版本问题\n解决思路：百度一下\n7. 项目中各种包之间版本互斥问题\n解决思路：百度一下\n\n像<TextInputLayout>这样的标签属于android.support.design下面，\n需要在 build.gradle的dependencies里添加support:design\n例\ndependencies{\n    compile 'com.android.support:design:26.0.0-alpha1'\n}\n```\n\n\n<a href=\"https://blog.csdn.net/qq_24118527/article/details/83586161\" taret=\"_blank\">分析解决</a>\n1、<a href=\"http://www.cnblogs.com/weizhxa/p/9950696.html\" target=\"_blank\">查看错误定位命令</a>\n```\n#首先要关闭AAPT2\n#在gradle.properties中添加下面代码,重新编译下\nandroid.enableAapt2=false\n\n#gradlew processDebugResources --debug\ngradlew compileDebugSources --stacktrace -info\n\n#注意第一个 [ERROR]\n\n00:26:13.830 [DEBUG] [org.gradle.process.internal.DefaultExecHandle] Changing state to: FAILED\n00:26:13.830 [DEBUG] [org.gradle.process.internal.DefaultExecHandle] Process 'command 'E:\\Android\\Sdk\\build-tools\\22.0.1\\aapt.exe'' finished with exit value 1 (state: FAILED)\n00:26:13.853 [ERROR] [org.gradle.api.Project] G:\\workspaces\\android\\BluetoothChat\\app\\build\\intermediates\\res\\merged\\debug\\values\\values.xml:366: AAPT: Attribute \"layout_behavior\" has already been defined\n\n00:26:13.854 [ERROR] [org.gradle.api.Project] G:\\workspaces\\android\\BluetoothChat\\app\\build\\intermediates\\res\\merged\\debug\\values\\values.xml:366: AAPT: Attribute \"layout_anchor\" has already been defined\n```\n2、检查下 targetSdkVersion 和引入的 support 包版本是否一致\n```\ncompile 'com.android.support:appcompat-v7:23.+'\n```\n\n<a href=\"https://blog.csdn.net/r8hzgemq/article/details/51239643\" target=\"_blank\">AndroidStudio十佳常见编译或运行错误集锦</a>\n\n<a href=\"https://blog.csdn.net/u012336923/article/details/48289485\" target=\"_blank\">android中No resource found that matches android:TextAppearance.Material.Widget.Button.Inverse问题</a>\n```\n#将23\ncompile 'com.android.support:appcompat-v7:23.0.1'\n#降为22\ncompile 'com.android.support:appcompat-v7:22.2.1'\n```\n\n<a href=\"https://blog.csdn.net/waa_studio/article/details/78732460\" target=\"_blank\">Android Studio 项目使用support v7时的各种问题</a>\n1、修改maven仓库url\n```\nbuildscript {\n    repositories {\n        jcenter()\n        mavenCentral()\n        maven { url:'https://jitpack.io' }\n        maven { url:'https://maven.google.com' }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n    }\n}\n```\n> 2、打开SDK Manager，勾选Android Support Repository\n\n```\nAndroid SDK -> SDK Tools -> Support Repository -> Android Support Repository -> Apply\n```\n\n<a href=\"https://blog.csdn.net/mhl18820672087/article/details/78385361\" target=\"_blank\">Failed to resolve:com.android.support:appcompat-v7:报错处理</a>\n\n> 1、compileSdkVersion 21成功版本\n\n```\nbuild.gradle\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.3'\n    }\n}\n\nbuild.gradle\napply plugin: 'com.android.application'\nandroid {\n    compileSdkVersion 21\n    buildToolsVersion '23.0.0'\n\n    defaultConfig {\n        applicationId \"com.code.demo\"\n        minSdkVersion 19\n        targetSdkVersion 22\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:22.2.1'\n}\n```\n\n> 2、compileSdkVersion 26成功版本\n\n```\nandroid {\n    compileSdkVersion 26\n    buildToolsVersion \"27.0.0\"\n    defaultConfig {\n        applicationId \"com.code.demo\"\n        minSdkVersion 19\n        targetSdkVersion 26\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    compile 'com.android.support:appcompat-v7:26+'\n    testCompile 'junit:junit:4.12'\n}\n```\n\n> Android Studio报 Cannot find System Java Compiler解决方法\n\n```\n快捷键 Ctrl + Alt +Shift + S\n#或 File -> Project Structrue... -> SDK Location -> JDK location\n默认是使用embedded JDK，将 Use embedded JDK 前面勾去掉，指定一个JDK地址\n```\n<a href=\"https://blog.csdn.net/zxccxzzxz/article/details/82986956\" target=\"_blank\">No resource identifier found for attribute 'appComponentFactory' in package 'android'</a>\n```\n#添加以下代码到 app/build.gradle 并且升级 SDK 版本号:\nandroid {\n    compileSdkVersion 28\n    buildToolsVersion '28.0.3'\n\tdefaultConfig {\n        targetSdkVersion 28\n   }\n}\nconfigurations.all {\n    resolutionStrategy.force 'com.android.support:support-v4:26.1.0'\n    resolutionStrategy.force 'com.android.support:appcompat-v7:26.1.0'\n    resolutionStrategy.force 'com.android.support:recyclerview-v7:26.1.0'\n    resolutionStrategy.force 'com.android.support:cardview-v7:26.1.0'\n    resolutionStrategy.force 'com.android.support:design:26.1.0'\n}\n\n#修改 AndroidManifest.xml 中的 Application 代码块 :\n<application\n        android:name=\".HelloApplication\"\n        <!-- 关键两行代码 -->\n        android:appComponentFactory=\"任意字符\"\n        tools:replace=\"android:appComponentFactory\"\n        android:icon=\"@drawable/icon\"\n        android:label=\"@string/app_name\"\n        android:largeHeap=\"true\"\n        android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\">\n\n</application>\n```\n\n> 启动Genymotion模拟器报错\n\n<a href=\"https://blog.csdn.net/qq_34476727/article/details/74910379\" target=\"_blank\">Device supports x86,but APK only supports armeabi-v7a</a>\n```\napp\\build.gradle\nandroid {\n    defaultConfig {\n        ndk {\n            //设置支持的SO库架构\n            abiFilters 'armeabi','armeabi-v7a','armeabi-v8a',\"x86\"\n        }\n    }\n}\n```\n<a href=\"https://www.jianshu.com/p/a781ad09b092\" target=\"_blank\">INSTALL_FAILED_NO_MATCHING_ABIS解决办法</a>\n```\napp\\build.gradle文件中添加以下代码:\nandroid {\n    splits {\n        abi {\n            enable true\n            reset()\n            include 'x86', 'armeabi-v7a','x86_64'\n            universalApk true\n        }\n    }\n}\n```\n\n> The minSdk version should not be declared in the android manifest file.\n\n解决方案\n```\n#Androidstudio3.0 以后不能在AndroidManifest.xml设置最小版本sdk,必须在 gradle里设置\nAndroidManifest.xml\n#删除\n<uses-sdk android:targetSdkVersion=\"\" />\n```\n\n> Unsupported method: BaseConfig.getApplicationIdSuffix()\n\n```\n#将 build.gradle 中的\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.1.1'\n    }\n}\n\n#改成：\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.3'\n    }\n}\n```\n\n> Failed to resolve: com.afollestad:material-dialogs:0.7.3.1\n```\n#访问一下链接，列出了现有的material-dialogs，选择存在的版本\nhttps://jcenter.bintray.com/com/afollestad/material-dialogs/core/\n\ncompile 'com.afollestad.material-dialogs:core:0.9.1.0'\ncompile 'com.afollestad.material-dialogs:commons:0.9.1.0'\n```\n","tags":["Android"]},{"title":"[blog] java","url":"/2019/02/25//articles/2019/02/25/1551025230000.html/","content":"<a href=\"https://www.jianshu.com/u/4e6e80b98daa\" target=\"_blank\">简书 | xiaolyuh</a>\n<a href=\"https://github.com/wyh-spring-ecosystem-student/spring-boot-student\" target=\"_blank\">github | spring-boot-student</a>\n","tags":["blog"]},{"title":"[Android] 蓝牙","url":"/2019/02/25//articles/2019/02/25/1551025229000.html/","content":"<a href=\"https://github.com/dingjikerbo/Android-BluetoothKit\" target=\"_blank\">github|蓝牙通讯库</a>\n<a href=\"https://github.com/xiaoyaoyou1212/BluetoothChat\" target=\"_blank\">github|蓝牙聊天</a>\n<a href=\"https://github.com/megagao/IndoorPos\" target=\"_blank\">maven|java蓝牙室内定位</a>","tags":["Android"]},{"title":"[Android] demos","url":"/2019/02/25//articles/2019/02/25/1551025228000.html/","content":"<a href=\"https://github.com/wapchief/android-CollectionDemo\" target=\"_blank\">github|android-CollectionDemo</a>\n<a href=\"http://www.bubblyyi.com/2016/08/29/android%E5%AE%9E%E6%88%98%E5%88%B6%E4%BD%9C%E7%AE%80%E6%98%93%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5%E8%BD%AF%E4%BB%B6/\" target=\"_blank\">简易天气预报app</a>\n<a href=\"https://github.com/mqzhangw/JIMU\" target=\"_blank\">github | JIMU</a>\n<a href=\"https://www.jianshu.com/p/99254621b5a6\" target=\"_blank\">Android开发之优秀demo整理（持续更新）</a>\n\n","tags":["Android"]},{"title":"[ubuntu] 大数据之hadoop","url":"/2019/02/25//articles/2019/02/25/1551025227000.html/","content":"<a href=\"https://www.cnblogs.com/zhangyinhua/p/7647686.html\" target=\"_blank\">Hadoop（二）搭建伪分布式集群</a>\n\n","tags":["ubuntu"]},{"title":"[微信] 微信公众号开发","url":"/2019/02/25//articles/2019/02/25/1551025227000.html/","content":"<a href=\"https://wiki.jikexueyuan.com/project/java-wechat/16.html\" target=\"_blank\">极客学院|微信公众号开发</a>\n<a href=\"http://www.cuiyongzhi.com/tags-1.html\" target=\"_blank\">blog|微信公众号开发</a>\n","tags":["微信"]},{"title":"[springboot] oauth2","url":"/2019/02/25//articles/2019/02/25/1551025226000.html/","content":"<a href=\"https://www.jianshu.com/p/2d344075d395\" target=\"_blank\">Spring boot 2.0 整合 oauth2 SSO</a>","tags":["springboot"]},{"title":"[ngrok] ngrok","url":"/2019/02/25//articles/2019/02/25/1551025225000.html/","content":"<a href=\"https://ngrok.com/\" target=\"_blank\">ngrok英文官网</a>\n<a href=\"http://ngrok.ciqiuwl.cn/\" target=\"_blank\">小米球</a>\n<a href=\"https://pan.baidu.com/s/1aoHDohmGZLqmcLTr9z16ow\" target=\"_blank\">小米球|windows客户端|6jua</a>\n<a href=\"https://www.ngrok.cc/download.html\" target=\"_blank\">Sunny-Ngrok内网转发</a>\n<a href=\"https://blog.csdn.net/yjc_1111/article/details/79353718\" target=\"_blank\">10分钟教你搭建自己的ngrok服务器</a>\n<a href=\"https://blog.csdn.net/zhangguo5/article/details/77848658\" target=\"_blank\">一分钟实现内网穿透（ngrok服务器搭建）</a>\n1、必要条件\n```\n（1）服务器，用来搭建ngrok的服务器，必须有公网ip，并且可以正常访问（本次测试使用的是Ubuntu 16.04 64位）\n（2）域名，用来生成访问域名\n```\n2、安装git 和Golang\n```\napt-get install build-essential golang mercurial git\n```\n3、下载源码\n```\ngit clone https://github.com/tutumcloud/ngrok.git ngrok\n```\n4、生成自签名证书 \n```\ncd ngrok\nNGROK_DOMAIN=\"<域名>.xyz\"\nopenssl genrsa -out base.key 2048\nopenssl req -new -x509 -nodes -key base.key -days 10000 -subj \"/CN=$NGROK_DOMAIN\" -out base.pem\nopenssl genrsa -out server.key 2048\nopenssl req -new -key server.key -subj \"/CN=$NGROK_DOMAIN\" -out server.csr\nopenssl x509 -req -in server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crt\n\n#执行完成后需要替换证书\ncp base.pem assets/client/tls/ngrokroot.crt\n```\n5、编译\n```\nmake release-server release-client\nls bin\n```\n6、启动服务端\n```\n#ngrokd 会开一个 4443 端口用来跟客户端通讯，可通过 -tunnelAddr=\":4443\"指定\n./bin/ngrokd -tlsKey=server.key -tlsCrt=server.crt -domain=\"<域名>.xyz\" -httpAddr=\":80\" -httpsAddr=\":443\"\n```\n7、编译客户端\n```\n#（1）windows\nGOOS=windows GOARCH=amd64 make release-client  \n#（2）mac\nGOOS=darwin GOARCH=amd64 make release-client\n```\n8、设置本地客户端\n```\n（1）ngrok.cfg\nserver_addr: \"<域名>.xyz:4443\"  \ntrust_host_root_certs: false  \n\n（2）startup.bat\n@echo on\ncd %cd%\n#ngrok -proto=tcp 22\n#ngrok start web\nngrok -config=ngrok.cfg -log=ngrok.log -subdomain=<子域名> 8080\n```\n9、设置为系统程序，并后台运行\n```\ntouch /etc/systemd/system/ngrok.service\n[Unit]\nDescription=ngrok\nAfter=network.target\n\n[Service]\nExecStart=/myweb/ngrok/bin/ngrokd -tlsKey=/myweb/ngrok/server.key -tlsCrt=/myweb/ngrok/server.crt -domain=\"<域名>.xyz\" -httpAddr=\":80\" -httpsAddr=\":443\"\n\n[Install]\nWantedBy=multi-user.target\n\nsystemctl start ngrok.service\n```\n<a href=\"https://www.jianshu.com/p/796c3411f8eb\" target=\"_blank\">Centos搭建Ngrok实现内网穿透</a>\n<a href=\"https://github.com/inconshreveable/ngrok\" target=\"_blank\">github|ngrok</a>\n<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\">github|frp</a>\n","tags":["ngrok"]},{"title":"[maven] 使用Maven构建多模块项目","url":"/2019/02/25//articles/2019/02/25/1551025224000.html/","content":"<a href=\"https://blog.csdn.net/benhuo931115/article/details/80674760\" target=\"_blank\">30个常用的Maven命令</a>\n<a href=\"https://www.cnblogs.com/wkrbky/p/6352188.html\" target=\"_blank\">Maven常用命令</a>\n<a href=\"https://www.cnblogs.com/xdp-gacl/p/4242221.html\" target=\"_blank\">使用Maven构建多模块项目</a>\n```\nmvn archetype:generate -DgroupId=com.code -Dpackaging=pom -DartifactId=system-parent -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\ncd system-parent\nrd /s /q src\n#将pom.xml文件中<packaging>jar</packaging>修改为<packaging>pom</packaging>\nnotepad pom.xml\nmvn archetype:generate -DgroupId=com.code -DartifactId=system-domain -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false -Dpackaging=jar\nmvn archetype:generate -DgroupId=com.code -DartifactId=system-dao -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false -Dpackaging=jar\nmvn archetype:generate -DgroupId=com.code -DartifactId=system-service -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false -Dpackaging=jar\nmvn archetype:generate -DgroupId=com.code -DartifactId=system-web -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false -Dpackaging=war\n```\ncreate与generate区别\n```\n#3.0.1版本之前\nmvn archetype:create\n#3.0.1版本之后\nmvn archetype:generate\n```","tags":["maven"]},{"title":"[jsp] 实战","url":"/2019/02/25//articles/2019/02/25/1551025223000.html/","content":"<a href=\"https://blog.csdn.net/ryo1060732496/article/details/82951673\" target=\"_blank\">目录连接|Java Servlet 实战入门教程-00-Servlet 系列教程汇总</a>\n\n<a href=\"https://github.com/houbb/servlet-learn/tree/master/servlet-base/src/main/java/com/github/houbb/servlet/learn/base\" target=\"_blank\">JSP小项目实战---客户信息管理系统</a>\n\n<a href=\"https://blog.csdn.net/weixin_37720904/article/details/75807661\" target=\"_blank\">JSP小项目实战---客户信息管理系统</a>\n<a href=\"https://blog.csdn.net/Fly_hps/article/details/80097808\" target=\"_blank\">JSP实战————简易用户注册、登录、认证实现</a>\n<a href=\"https://blog.csdn.net/BlueSky_USC/article/details/72905138\" target=\"_blank\">Web基础之Servlet+JDBC+JSP项目实战记录（二）</a>\n\n<a href=\"http://blog.wangxc.club/\" target=\"_blank\">blog|spring-boot-quick</a>\n<a href=\"https://github.com/vector4wang/spring-boot-quick\" target=\"_blank\">spring-boot-quick</a>\n\n<a href=\"https://blog.csdn.net/tiantianheheaa/article/details/82697147\" target=\"_blank\">基于MVC架构的简单javaweb登陆注册功能实现（jsp + servlet + jdbc + mysql)</a>\n\n<a href=\"https://www.cnblogs.com/weberweber/p/6740962.html\" target=\"_blank\">Servlet：从入门到实战学习---Servlet实例（@WebServlet）</a>\n<a href=\"https://www.cnblogs.com/shuiliuhualuo/p/5996180.html\" target=\"_blank\">@WebServlet用注解来实现servlet和url的映射</a>\n\n<a href=\"http://www.cuiyongzhi.com/tags-9.html\" target=\"_blank\">jsp|cookie和session</a>\n\n","tags":["jsp"]},{"title":"[java] jdbc","url":"/2019/02/25//articles/2019/02/25/1551025222000.html/","content":"<a href=\"https://www.cnblogs.com/zhangyinhua/p/7522375.html\" target=\"_blank\">LanceToBigData|JDBC（一）之细说JDBC</a>\n\n","tags":["java"]},{"title":"[编程题库] 牛客网","url":"/2019/02/18//articles/2019/02/06/1550453913000.html/","content":"<a href=\"https://www.nowcoder.com/\" target=\"_blank\">牛客网</a>","tags":["linux"]},{"title":"[linux] 更换源","url":"/2019/02/18//articles/2019/02/06/1550453912000.html/","content":"<a href=\"http://wiki.ubuntu.org.cn/%E6%A8%A1%E6%9D%BF:14.04source\" target=\"_blank\">ubuntu官方镜像源</a>\n<a href=\"https://mirrors.ustc.edu.cn/repogen/\" target=\"_blank\">中科大镜像源（推荐）</a>\n<a href=\"http://mirrors.ustc.edu.cn/\" target=\"_blank\">ustc中国官方镜像网</a>\n<a href=\"http://mirrors.sohu.com/\" target=\"_blank\">搜狐镜像网</a>\n<a href=\"http://mirrors.163.com/\" target=\"_blank\">网易镜像网</a>\n<a href=\"https://opsx.alibaba.com/mirror\" target=\"_blank\">阿里巴巴开源镜像站</a>\n<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" target=\"_blank\">清华开源镜像站</a>\n<a href=\"https://blog.csdn.net/weixin_41762173/article/details/79480832\" target=\"_blank\">ubuntu更改镜像源（软件源）</a>\n\nubuntu 14.04LTS 官方默认源\n```\ndeb http://archive.ubuntu.com/ubuntu/ trusty main restricted\ndeb http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted\ndeb http://archive.ubuntu.com/ubuntu/ trusty universe\ndeb http://archive.ubuntu.com/ubuntu/ trusty-updates universe\ndeb http://archive.ubuntu.com/ubuntu/ trusty multiverse\ndeb http://archive.ubuntu.com/ubuntu/ trusty-updates multiverse\ndeb http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu/ trusty-security main restricted\ndeb http://security.ubuntu.com/ubuntu/ trusty-security universe\ndeb http://security.ubuntu.com/ubuntu/ trusty-security multiverse\n```\nubuntu 14.04LTS\n```\ndocker run -it ubuntu:14.04 /bin/bash\ncat /etc/apt/sources.list|grep ^[^#]\napt-get install apt-transport-https vim\ncp /etc/apt/sources.list /etc/apt/sources.list.bak\ncat > /etc/apt/sources.list <<EOF\ndeb https://mirrors.ustc.edu.cn/ubuntu/ trusty main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ trusty main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ trusty-security main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse\nEOF\napt-get update\napt-get install\n```\nubuntu软件操作的相关命令\n```\nsudo apt-get update  更新源\n \nsudo apt-get install package 安装包\n \nsudo apt-get remove package 删除包\n \nsudo apt-cache search package 搜索软件包\n \nsudo apt-cache show package  获取包的相关信息，如说明、大小、版本等\n \nsudo apt-get install package --reinstall   重新安装包\n \nsudo apt-get -f install   修复安装\n \nsudo apt-get remove package --purge 删除包，包括配置文件等\n \nsudo apt-get build-dep package 安装相关的编译环境\n \nsudo apt-get upgrade 更新已安装的包\n \nsudo apt-get dist-upgrade 升级系统\n \nsudo apt-cache depends package 了解使用该包依赖那些包\n \nsudo apt-cache rdepends package 查看该包被哪些包依赖\n \nsudo apt-get source package  下载该包的源代码\n \nsudo apt-get clean && sudo apt-get autoclean 清理无用的包\n \nsudo apt-get check 检查是否有损坏的依赖\n```\n<a href=\"https://www.cnblogs.com/xuchunlin/p/5671572.html\" target=\"_blank\">linux查看系统</a>","tags":["linux"]},{"title":"[springboot] springboot使用JWT集成Ng-Alain","url":"/2019/02/18//articles/2019/02/18/1550451301000.html/","content":"<a href=\"https://blog.csdn.net/kangkanglou/article/details/84579913\" target=\"_blank\">SpringBoot使用JWT集成Ng-Alain</a>\n<a href=\"https://github.com/ypmc/springboot-ngalain-jwt\" target=\"_blank\">github|springboot-ngalain-jwt</a>","tags":["springboot"]},{"title":"[springboot] springboot+solr","url":"/2019/02/18//articles/2019/02/18/1550451300000.html/","content":"<a href=\"https://blog.csdn.net/larger5/article/details/79768438\" target=\"_blank\">[增删改查] SpringBoot 整合 Solr 之 SolrClient 实现 CRUD、分页接口、高亮显示</a>\n<a href=\"https://github.com/larger5/SpringBoot_solr_base.git\" target=\"_blank\">github|SpringBoot_solr_base</a>\n<a href=\"https://blog.csdn.net/appleyk/article/details/79280836\" target=\"_blank\">Spring-Boot+Solr搜索应用（索引数据创建+关键字高亮+thymeleaf静态html模板渲染跳转）</a>\n<a href=\"https://blog.csdn.net/larger5/article/details/79946353\" target=\"_blank\">使用 LayUI+SpringBoot+Solr 模仿百度、做站内搜索引擎</a>\n<a href=\"https://www.cnblogs.com/cblogs/p/solr-tutorial.html\" target=\"_blank\">Apache Solr入门教程(初学者之旅) </a>\n<a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\">jdk8</a>\n<a href=\"https://archive.apache.org/dist/zookeeper/\" target=\"_blank\">zookeeper</a>\n<a href=\"https://blog.csdn.net/qiushisoftware/article/details/79043379\" target=\"_blank\">Zookeeper简介与集群搭建</a>\n<a href=\"https://www.jianshu.com/p/1f4c70d7ef40\" target=\"_blank\">Linux ZooKeeper入门教程（一）</a>\n```\nZookeeper简介\nZookeeper是一个高效的分布式协调服务，可以提供配置信息管理、命名、分布式同步、集群管理、数据库切换等服务。它不适合用来存储大量信息，可以用来存储一些配置、发布与订阅等少量信息。Hadoop、Storm、消息中间件、RPC服务框架、分布式数据库同步系统，这些都是Zookeeper的应用场景。\n```\n\n```\nsudo apt-get install openjdk-8-jdk\n```\n<a href=\"https://blog.csdn.net/qq_26641781/article/details/80886831\" target=\"_blank\">idea Docker安装Zookeeper并进行操作</a>\n<a href=\"https://www.cnblogs.com/kingkoo/p/8732448.html\" target=\"_blank\">使用 Docker 一步搞定 ZooKeeper 集群的搭建</a>\n```\ndocker pull zookeeper\ndocker run --privileged=true -d --name zookeeper --publish 2181:2181 -d zookeeper:latest\ndocker ps\n\n#idea提供了一个Zookeeper插件，以供连接Zookeeper服务中心和查看内容\n#打开idea –> Settings -> Plugins,搜索Zoo进行下载安装\n\n    <dependencies>\n        <!-- 原生zookeeper -->\n        <dependency>\n            <groupId>org.apache.zookeeper</groupId>\n            <artifactId>zookeeper</artifactId>\n            <version>3.4.6</version>\n        </dependency>\n\n        <!--Apache Curator-->\n        <dependency>\n            <groupId>org.apache.curator</groupId>\n            <artifactId>curator-framework</artifactId>\n            <version>2.9.0</version>\n        </dependency>\n\n        <!-- zkclient -->\n        <dependency>\n            <groupId>com.101tec</groupId>\n            <artifactId>zkclient</artifactId>\n            <version>0.9</version>\n        </dependency>\n\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.17</version>\n        </dependency>\n    </dependencies>\n```\n<a href=\"https://tomcat.apache.org/download-80.cgi\" target=\"_blank\">tomcat8</a>\n\n<a href=\"https://blog.csdn.net/bskfnvjtlyzmv867/article/details/81623416\" target=\"_blank\">docker+centos+solr</a>\n<a href=\"http://lucene.apache.org/solr/downloads.html\" target=\"_blank\">solr下载页</a>\n<a href=\"http://mirrors.shu.edu.cn/apache/lucene/solr/7.7.0/solr-7.7.0.zip\" target=\"_blank\">solr-7.7.0.zip</a>\n```\ncd solr/bin\nsolr start\nsolr create -c mycore1 -p 8983\n#访问\n#http://localhost:8983/solr/admin/cores?action=STATUS&core=mycore1\n#solr服务器默认端口8983，访问http://localhost:8983/solr/\nsolr stop -all\n\nhttps://github.com/x113773/testall/\n```\n<a href=\"https://blog.csdn.net/cs_hnu_scw/article/details/79388080\" target=\"_blank\">手把手教你如何玩转Solr（包含项目实战）</a>\n```\nhttps://pan.baidu.com/s/1dRClm2\nolio\n```\n<a href=\"https://www.jianshu.com/p/45bc44a43485\" target=\"_blank\">使用SSM+Solr优雅的实现电商项目中的搜索功能</a>\n<a href=\"https://github.com/TyCoding/ssm-redis-solr\" target=\"_blank\">github|SSM整合Solr实现电商项目中的搜索功能</a>\n\n<a href=\"https://blog.csdn.net/weixin_38589021/article/details/80323957\" target=\"_blank\">Docker搭建Solr-IKAnalyzer</a>\n<a href=\"https://github.com/kingdz2008/dockerfile/tree/master/solr-ikanalyzer\" target=\"_blank\">github|solr-ikanalyzer</a>\n```\ndocker build .\n```\n<a href=\"https://blog.csdn.net/qq_26641781/article/details/81671323\" target=\"_blank\">Docker+Solr+IK</a>\n<a href=\"https://www.cnblogs.com/yehuabin/p/10180737.html\" target=\"_blank\">docker-compose 安装solr+ikanalyzer</a>\n```\ndocker exec -it solr bash\ncd /opt/solr/server/solr\nmkdir ik_core\ncd ik_core\nmkdir data\ncp -r ../configsets/sample_techproducts_configs/conf/ .\necho 'name=ik_core' > core.properties\nls\n```\n\n<a href=\"https://blog.csdn.net/xiaokang123456kao/article/details/72844729\" target=\"_blank\">solr简介和使用</a>\n<a href=\"https://pan.baidu.com/s/1tIQdpXsOm_98Syuf4YQKag\" target=\"_blank\">ikanalyzer</a>\n","tags":["springboot"]},{"title":"[springboot] springboot视频播放","url":"/2019/02/18//articles/2019/02/18/1550451299000.html/","content":"<a href=\"https://blog.csdn.net/HcJsJqJSSM/article/details/80753712\" target=\"_blank\">SpringBoot基于VIP视频解析接口实现视频播放</a>\n<a href=\"https://blog.csdn.net/qq_37164847/article/details/81668242\" target=\"_blank\">springboot2.0上传文件（视频，图片）到服务器硬盘，并保存路径至mysql,返回可直接访问的url</a>\n<a href=\"https://gitee.com/xuhaiyan/sg\" target=\"_blank\">github|springboot2.0上传文件（图片视频）项目</a>\n```\ncreate database movies;\nuse movies;\ncreate table video(\n\tid int primary key auto_increment,\n\turl varchar(255),\n\tname varchar(255),\n\tpath varchar(255)\n);\n```\n","tags":["springboot"]},{"title":"[springboot] springboot实战专栏","url":"/2019/02/18//articles/2019/02/18/1550451298000.html/","content":"<a href=\"https://blog.csdn.net/HcJsJqJSSM/column/info/22887\" target=\"_blank\">实战专栏</a>\n\nSpringBoot基于Excel模板完成下载\n<a href=\"https://blog.csdn.net/HcJsJqJSSM/article/details/80468598\" target=\"_blank\">IDEA+Maven+SpringBoot+BootStrap+Thymeleaf+Mysql+Excel+MyBatis+Lombok+IDEA热部署</a>\n","tags":["springboot"]},{"title":"[springboot] springboot+mybatis+generator+jpa","url":"/2019/02/18//articles/2019/02/18/1550451297000.html/","content":"<a href=\"https://www.cnblogs.com/liuchengcc/p/8998043.html\" target=\"_blank\">Springboot+MyBatis+JPA集成</a>\n<a href=\"http://www.mybatis.org/generator/index.html\" target=\"_blank\">MyBatis Generator</a>\n```\nclean install -Dmaven.test.skip=true\nmybatis-generator:generate\n```\n\n<a href=\"https://www.cnblogs.com/lkdirk/p/7079905.html\" target=\"_blank\">springBoot数据库jpa+对接mybatis</a>\n```\ncreate database mybatisjpa;\ncreate table t_user(\n    id int primary key auto_increment,\n    name varchar(255)\n);\n```\npom.xml\n```\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\n</dependency>        \n\n<dependency>\n     <groupId>mysql</groupId>\n     <artifactId>mysql-connector-java</artifactId>\n     <version>5.1.21</version>\n</dependency>\n```\napplication.properties\n```\nspring.datasource.url=jdbc:mysql://localhost:3306/mybatisjpa?characterEncoding=UTF8&socketTimeout=60000\nspring.datasource.username=root\nspring.datasource.password=root\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\n```\nentity/User.java\n```\npublic class User {\n    \n    private Integer id;\n    private String name;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}\n```\n继承接口后会自动注入，不需要加@configuration，@bean等进行配置，可以直接@Autowired注入使用\n```\n@Mapper\n@Repository\npublic interface UserRepository extends JpaRepository<User,Integer>{\n}\n```\n接入mybatis\n```\n<dependency>\n    <groupId>org.mybatis.spring.boot</groupId>\n    <artifactId>mybatis-spring-boot-starter</artifactId>\n    <version>1.3.2</version>\n</dependency>\n```\n编写dao，注意加上@Mapper,使用起来和正常mybatis一样，然后在调用处直接注入即可。\n```\n@Mapper\npublic interface UserDAO {\n\n   @Select(\"select count(1) from User\")\n   int findCount();\n\n   @Select(\"select id,name from User where id = #{id}\")\n   User findById(@Param(\"id\")int id);\n\n}\n```\n<a href=\"https://www.cnblogs.com/svili/p/7232323.html\" target=\"_blank\">Mybatis JPA-集成方案+源码</a>\n<a href=\"https://github.com/cnsvili/mybatis-jpa\" target=\"_blank\">github|mybatis-jpa</a>\n<a href=\"https://gitee.com/svili/mybatis-jpa\" target=\"_blank\">gitee|mybatis-jpa</a>\n<a href=\"https://github.com/LittleNewbie/mybatis-jpa\" target=\"_blank\">spring+mybatis+jpa源码地址</a>","tags":["springboot"]},{"title":"[spring] spring+shiro","url":"/2019/02/18//articles/2019/02/18/1550451296000.html/","content":"<a href=\"https://gitee.com/wangzhixuan/spring-shiro-training\" target=\"_blank\">spring-shiro-training</a>\n<a href=\"https://blog.csdn.net/HeatDeath/article/details/78407092\" target=\"_blank\">springmvc+shiro</a>\n<a href=\"https://crossoverjie.top/2016/07/15/SSM3/\" target=\"_blank\">ssm+shiro</a>\n<a href=\"https://www.sojson.com/shiro\" target=\"_blank\">springMVC + Mybatis + Redis 的Shiro整套项目Demo</a>\n<a href=\"https://github.com/baichengzhou/SpringMVC-Mybatis-Shiro-redis-0.2\" target=\"_blank\">SpringMVC-Mybatis-Shiro-redis-0.2</a>","tags":["spring"]},{"title":"[java] 设计模式demos","url":"/2019/02/18//articles/2019/02/18/1550451295000.html/","content":"<a href=\"https://github.com/ypmc/design-pattern\" target=\"_blank\">java设计模式demos</a>","tags":["java"]},{"title":"[flutter] flutter视频播放","url":"/2019/02/18//articles/2019/02/18/1550451294000.html/","content":"<a href=\"https://www.jianshu.com/p/caf7e3cd0df6\" target=\"_blank\">简书|Flutter 视频播放</a>\n<a href=\"https://linux.ctolib.com/shmy-dd_app.html\" target=\"_blank\">[黑人视频]是一款基于flutter实现的在线视频播放app</a>\n\n<a href=\"https://github.com/shmy/flutter_video_player\" target=\"_blank\">video_player</a>\n<a href=\"https://github.com/shmy/flutter_toasty\" target=\"_blank\">toasty</a>\n<a href=\"https://github.com/shmy/flutter_clipboard\" target=\"_blank\">clipboard</a>\n<a href=\"https://github.com/shmy/flutter_loading\" target=\"_blank\">loading</a>\n<a href=\"https://github.com/shmy/flutter_webview\" target=\"_blank\">webview</a>\n<a href=\"https://github.com/shmy/android_intent\" target=\"_blank\">android_intent</a>\n<a href=\"https://github.com/shmy/flutter_tx_xg\" target=\"_blank\">tx_xg</a>\n\n<a href=\"https://blog.csdn.net/Kinsomy/article/details/86083989\" target=\"_blank\">Flutter仿网易云音乐：播放界面</a>\n<a href=\"https://github.com/KinsomyJS/flutter_netease_music\" target=\"_blank\">github|Flutter仿网易云音乐：播放界面</a>\n<a href=\"https://www.cnblogs.com/yangyxd/p/9232308.html\" target=\"_blank\">【Flutter】Flutter 一些常用库</a>\n<a href=\"https://jspang.com/\" target=\"_blank\">技术胖</a>\n<a href=\"https://juejin.im/post/5a5bc8c36fb9a01ca26774eb\" target=\"_blank\">掘金|技术胖155集前端视频教程-全部免费观看</a>\n\n\n\n","tags":["flutter"]},{"title":"[java] slf4j+log4j、slf4j+logback、slf4j+log4j2总结","url":"/2019/02/18//articles/2019/02/18/1550451293000.html/","content":"<a href=\"https://www.tuicool.com/articles/INveIf\" target=\"_blank\">日志门面图解</a>\n<a href=\"https://www.cnblogs.com/huayu0815/p/5341712.html\" target=\"_blank\">slf4j+log4j+logback总结</a>\n```\n总结\n\n1、slf4j提供各种抽象接口，日志应该基于slf4j的API进行日志打印，这样无论迁移到那个项目，只需要配一个实现类log4j or logback,都能正常打印日志\n\n2、slf4j的实现类不能有多个，不然冲突\n\n3、如果项目中有直接引用log4j的，可以加入log4j-over-slf4j，把旧的日志log4j适配到slf4j,这时候，再使用logback就可以了。\n```\n\n哪些采用了log4j\n```\nkafka\n\n<dependency>\n   <groupId>org.slf4j</groupId>\n   <artifactId>log4j-over-slf4j</artifactId>\n   <version>1.7.7</version>\n</dependency>\n```\nspring-boot-starter默认使用logback\n```\n<dependency>\n  <groupId>ch.qos.logback</groupId>\n  <artifactId>logback-core</artifactId>\n  <version>1.1.2</version>\n</dependency>\n<dependency>\n  <groupId>ch.qos.logback</groupId>\n  <artifactId>logback-access</artifactId>\n  <version>1.1.2</version>\n</dependency>\n<dependency>\n  <groupId>ch.qos.logback</groupId>\n  <artifactId>logback-classic</artifactId>\n  <version>1.1.2</version>\n</dependency>\n```\n常见组合：\n（1）log4j+slf4j\n```\nslf4j-api-1.7.25.jar\nlog4j-1.2.17.jar\nslf4j-log4j12-1.7.25.jar\n\n<!--\nspringboot\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter</artifactId>\n    <exclusions>\n        <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n-->\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-api</artifactId>\n    <version>1.7.25</version>\n</dependency>\n<dependency>\n    <groupId>log4j</groupId>\n    <artifactId>log4j</artifactId>\n    <version>1.2.17</version>\n</dependency>\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-log4j12</artifactId>\n    <version>1.7.25</version>\n</dependency>\n\nLogger logger = LoggerFactory.getLogger(Object.class);\nlogger.error(\"==== log4j ====\");\n```\n（2）slf4j-log4j12（注意：需要编写 log4j.properties 文件，且logback-classic 、log4j-over-slf4j  都与 slf4j-log4j12冲突）\n```\n#log4j.properties\nlog4j.rootLogger=INFO, stdout\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n\n\n#pom.xml\n<!--\nspringboot\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter</artifactId>\n    <exclusions>\n        <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n-->\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-log4j12</artifactId>\n    <version>1.7.25</version>\n</dependency>\n```\n（3）slf4j+logback\n```\nslf4j-api-1.7.25.jar\nlogback-core-1.2.3.jar\nlogback-classic-1.2.3.jar\n\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-api</artifactId>\n    <version>1.7.25</version>\n</dependency>\n<dependency>\n    <groupId>ch.qos.logback</groupId>\n    <artifactId>logback-core</artifactId>\n    <version>1.2.3</version>\n</dependency>\n<dependency>\n    <groupId>ch.qos.logback</groupId>\n    <artifactId>logback-classic</artifactId>\n    <version>1.2.3</version>\n</dependency>\n\nLogger logger = LoggerFactory.getLogger(Object.class);\nlogger.error(\"==== logback ====\");\n```\n<a href=\"http://www.importnew.com/28541.html\" target=\"_blank\">logback的使用</a>\n> 日志类的区别\n\n```\n#logback\nprivate final static org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(Object.class);\n\n#log4j\nprivate static final org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(Object.class);\n\n#log4j2\nprivate static org.apache.logging.log4j.Logger logger = org.apache.logging.log4j.LogManager.getLogger(Object.class);\n```\n<a href=\"https://blog.csdn.net/HarderXin/article/details/80422903\" target=\"_blank\">slf4j与log4j、log4j2</a>\n```\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-api</artifactId>\n    <version>1.7.25</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.logging.log4j</groupId>\n    <artifactId>log4j-api</artifactId>\n    <version>2.7</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.logging.log4j</groupId>\n    <artifactId>log4j-core</artifactId>\n    <version>2.7</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.logging.log4j</groupId>\n    <artifactId>log4j-slf4j-impl</artifactId>\n    <version>2.7</version>\n</dependency>\n```\nslf4j+log4j2\n```\n如果我们在系统中需要使用slf4j和log4j2来进行日志输出的话，我们需要引入下面的jar包：\nlog4j2核心jar包：log4j-api-2.7.jar和log4j-core-2.7.jar\nslf4j核心jar包：slf4j-api-1.6.4.jar\nslf4j与log4j2的桥接包：log4j-slf4j-impl-2.7.jar，这个包的作用就是使用slf4j的api，但是底层实现是基于log4j2\n所以我们获取日志仍可以通过下面的代码进行：\n```\n```\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class Slf4jTest {\n  private static final Logger logger = LoggerFactory.getLogger(Slf4jTest2.class);\n\n  public static void main(String[] args) {\n    logger.info(\"hello world\");\n  }\n}\n```\nslf4j+log4j不修改代码升级到log4j2\n```\n如果我们系统中刚开始用的是slf4j和log4j，然后出于性能考虑，要升级到slf4j和log4j2，并且不需要改动任何代码的话(因为我们系统可能是一个大工程，然后基本上每个类都会有日志输出，改动代码可能牵一发而动全身)，出于这个考虑，我们可以这样来进行修改：\n1、删除项目中存在的Log4j1.x所必须的log4j和slf4j-log4j12等依赖，例如从我们上面做的去升级的话，需要删除log4j-1.2.17.jar和slf4j-log4j12-1.6.1.jar\n2、添加log4j2和slf4j桥接包：log4j-slf4j-impl-2.7.jar替换log4j和slf4j桥接包：slf4j-log4j12-1.6.1.jar\n3、如果我们在系统中使用了log4j的api去获取Logger的话：\norg.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(Log4jTest.class)\n我们需要添加log4j-1.2-api-2.7.jar去替换log4j-1.2.17.jar\n4、将log4j的properties文件修改为log4j2的xml文件\n然后，同样在系统中使用slf4j的方式获取日志：\norg.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(Self4jTest.class);\n```\n\n<a href=\"https://www.cnblogs.com/aben-blog/p/8968363.html\" target=\"_blank\">springboot默认集成logback说明</a>\n<a href=\"https://www.cnblogs.com/lixuwu/p/5804793.html\" target=\"_blank\">springboot+logback</a>\n<a href=\"https://www.cnblogs.com/zj0208/p/6149852.html\" target=\"_blank\">springboot+log4j</a>|<a href=\"https://blog.csdn.net/wang465745776/article/details/80384210\" target=\"_blank\">Failed to load class \"org.slf4j.impl.StaticLoggerBinder\"的问题</a>\n```\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter</artifactId>\n  <exclusions>\n      <exclusion>\n          <groupId>org.springframework.boot</groupId>\n          <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n  </exclusions>\n</dependency>\n<dependency> \n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-log4j</artifactId>\n</dependency>\n<!--\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-nop</artifactId>\n    <version>1.7.2</version>\n</dependency>\n-->\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-log4j12</artifactId>\n    <version>1.7.25</version>\n</dependency>\n```\nspringboot+log4j2\n<a href=\"https://www.cnblogs.com/advancing/p/7922463.html\" target=\"_blank\">Spring Boot自定义log4j2日志文件</a>\n<a href=\"https://blog.csdn.net/sdlyjzh/article/details/79416607\" target=\"_blank\">springboot 中 log4j2的使用及配置讲解</a>\n```\n<dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-starter-web</artifactId>\n   <exclusions>\n      <exclusion>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n   </exclusions>\n</dependency>\n\n<dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-starter-log4j2</artifactId>\n   <version>1.5.8.RELEASE</version>\n</dependency>\n```","tags":["java"]},{"title":"[docker] docker+php","url":"/2019/02/15//articles/2019/02/15/1550229510000.html/","content":"```\ndocker run ubuntu:14.04 /bin/echo 'Hello World'\ndocker run -it ubuntu:14.04 /bin/bash\n\nsudo apt-get update\nsudo apt-get install apache2\n/etc/apache2/apache2.conf\nsudo chmod 777 /var/www\n#对注册为服务的程序可以全局使用 service\nsudo service apache2 restart\n#未注册 service 需要制定到程序目录\nsudo /etc/init.d/apache2 restart\n#Nginx 和 Apache 会抢夺80端口，最好先停止其中一个再装。\nsudo apt-get install nginx\n#安装PHP5以及常用模块\nsudo apt-get install libapache2-mod-php5 php5 php5-gd php5-mysql php5-fpm php5-mcrypt php5-curl libcurl3 libcurl3-dev\n#apache的php.ini\n/etc/php5/apache2/php.ini;\n#nginx的php.ini\n/etc/php5/fpm/php.ini\n\n\n#另外装PHP的时候，也自动装了解析器，用来解析PHP语法，两个主要的文件分别在这两个目录：\n/var/run/php5-fpm.sock\n/var/run/php5-fpm.pid\n#在程序工作中，可能会因为权限问题PHP无法创建目录，这是因为在这里有个用户组配置\n/etc/php5/fpm/pool.d/www.conf\n#里面有两个默认设置是\nuser = www-data\ngroup = www-data\n#需要给目录设置用户组以及用户为 www-data:www-data 并重启FPM\nuser = www-data:www-data\ngroup = www-data:www-data\n\nsudo apt-get install mysql-server mysql-client\n安装过程中需要设置 root 密码，我设置的是 root。这步要记住自己设置的密码！\n\nsudo apt-get install phpmyadmin\nln -s /usr/share/phpmyadmin /var/www/html\nphpMyAdmin 需要配置扩展目录 extension_dir，需要修改 php.ini。\n\n#假如配置 Apache 位置在这里：\nsudo vi /etc/php5/apache2/php.ini\n\n#假如配置 Nginx 位置在这里：\nsudo vi /etc/php5/fpm/php.ini\n需要做这几个改动\nextension_dir 启用，并且值等于“PHP扩展目录”\nextension=msql.so 的注释解除\nextension=curl.so 解决 curl 问题 （Nginx）\n\n记录几个重要的目录位置\nphp.ini 目录：\n/etc/php5/apache2/php.ini\n\nPHP扩展目录（日期可能不同）：\n/usr/lib/php5/20131226\n\nnginx.conf 配置文件：\n/etc/nginx/nginx.conf\n\nNginx 的 php.ini\n/etc/php5/fpm/php.ini\n\nApache2 配置文件：\n/etc/apache2/apache2.conf\n\nphpmyadmin 所在目录：\n/usr/share/phpmyadmin\n\nphpmyadmin 配置文件：\n/usr/share/phpmyadmin/libraries/config.default.php\n\n小技巧\n安装完成可以通过命令查看执行文件位置，这样不用担心忘记\n\nwhich apache2\n/usr/sbin/apache2\n\nwhich php\n/usr/bin/php\n\nwhich mysql\n/usr/bin/mysql\n\n重启部分：\nservice php5-fpm restart\nservice nginx restart\n```\n不重启 nginx , 令配置生效\n```\nnginx -s reload\n使用 Nginx + phpmyadmin 时遇到提示 缺少crypt，通过下面方式复制来，并且重启FPM服务即可\n使用 cp 命令复制文件：\ncp /etc/php5/mods-available/mcrypt.ini /etc/php5/fpm/conf.d/\n```\n<a href=\"https://www.cnblogs.com/loseself/p/8888009.html\" target=\"_blank\">Ubuntu Nginx 配置</a>\n\n#docker-machine\ngitbash docker-machine下\n```\ndocker-machine create --driver virtualbox --virtualbox-boot2docker-url=%USERPROFILE%\\.docker\\machine\\cache\\boot2docker.iso default\n\ndocker-machine start default\ndocker-machine stop default\n```\n<a href=\"https://blog.csdn.net/a33130317/article/details/81304048\" target=\"_blank\">利用docker搭建LAMP(php5+mysql+apache2)集成环境</a>\n```\n#在https://hub.docker.com/下搜索 linode/lamp\n\n#拉取镜像lamp\ndocker pull linode/lamp\n\n#建立docker卷\ndocker volume create lamp_www           # apache的web根目录\ndocker volume create lamp_apache_conf   # apache的配置目录\ndocker volume create lamp_mysql_conf    # MySQL的配置目录\ndocker volume create lamp_mysql_data    # MySQL的数据目录\n\n#宿主主机目录\nD:/docker/volumes\n\ndocker run -it -p 80:80 -p 3306:3306 -v lamp_www:/var/www -v lamp_apache_conf:/etc/apache2 -v lamp_mysql_conf:/etc/mysql -v lamp_mysql_data:/var/lib/mysql --name lamp linode/lamp /bin/bash\n \n# 解释：\n# docker run：运行一个container，如果后面要绑定宿主主机的0-1024端口需要使用sudo\n# -p port1:port2: 将宿主机的端口port1映射到容器中的port2\n# -v volume:path: 将宿主机的docker卷映射到容器中的指定的路径\n# -t -i linode/lamp /bin/bash：使用linode/lamp生成容器，并打开shell\n```","tags":["docker"]},{"title":"[docker] docker","url":"/2019/02/15//articles/2019/02/15/1550229509000.html/","content":"#docker-toolbox\n<a href=\"https://gitforwindows.org\" target=\"_blank\">git</a>、<a href=\"http://mirrors.aliyun.com/docker-toolbox/windows/docker-toolbox/\" target=\"_blank\">docker-toolbox</a>\n<a href=\"https://github.com/boot2docker/boot2docker/releases\" target=\"_blank\">官方boot2docker</a>\n百度云盘boot2docker.iso\n<a href=\"https://pan.baidu.com/s/1nwLh1G1\" target=\"_blank\">tthd</a>\n<a href=\"https://pan.baidu.com/s/1i6QGIg9\" target=\"_blank\">fsmb</a>\n1.注意\n```\n如果gitbash安装的位置修改了，则\"Docker Quickstart Terminal\"属性的目标也要跟着改\n正确打开\"Docker Quickstart Terminal\"后，会自动下载boot2docker.iso，过程比较缓慢\n```\n2.可以浏览器访问<a href=\"https://github.com/boot2docker/boot2docker/releases\" target=\"_blank\">github|boot2docker</a>,下载最新版本boot2docker.iso到\n```\n%USERPROFILE%\\.docker\\machine\\cache\\boot2docker.iso\n```\n3.使用非最新版本的boot2docker.iso\n```\n断开网络，双击\"Docker Quickstart Terminal\"\n```\n#docker-ce\n<a href=\"https://oomake.com/download/docker-windows\" target=\"_blank\">码客|docker镜像</a>\n<a href=\"https://www.jianshu.com/p/3a339072ca7d\" target=\"_blank\">windows 10 安装docker</a>\n<a href=\"https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe\" target=\"_blank\">Docker for Windows Installer.exe</a>\n\n<a href=\"http://www.runoob.com/docker/windows-docker-install.html\" target=\"_blank\">菜鸟教程Windows Docker</a>\n<a href=\"https://blog.csdn.net/hunan961/article/details/79484098\" target=\"_blank\">WIN10中DOCKER的安装与使用</a>\n<a href=\"https://blog.csdn.net/fxbin123/article/details/78474174\" target=\"_blank\">error during connect: Get http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.32/info: open //./pipe/docker_eng</a>\n<a href=\"https://blog.csdn.net/cyuanxin/article/details/66479919\" target=\"_blank\">This error may also indicate that the docker daemon is not running</a>\n```\ndocker-machine env --shell cmd default\n#或\n#docker-machine env default\n@FOR /f \"tokens=*\" %i IN ('docker-machine env default') DO @%i\ndocker info\ndocker-machine ls\n```\n<a href=\"http://www.runoob.com/docker/docker-container-usage.html\" target=\"_blank\">菜鸟教程|docker容器使用</a>\n\nwin10原生有docker\n开启Hyper-V\n```\n打开控制面板\nwin+r 输入 control 并回车，\n点击 程序 -> 启用或关闭 Windows 功能\n```\n\n<a href=\"https://www.cnblogs.com/fengzheng/p/4958571.html\" target=\"_blank\">1.docker镜像操作</a>\n<a href=\"https://www.cnblogs.com/liuyongsheng/p/6724749.html\" target=\"_blank\">2.docker镜像操作</a>\n```\ndocker tag 镜像ID name/tag:版本\n#删除所有镜像\ndocker rmi $(docker images -q)\n```\n<a href=\"https://www.jianshu.com/c/fe5f5bed05c0\" target=\"_blank\">Docker容器</a>\n<a href=\"https://www.jianshu.com/c/aa0b21cceb92\" target=\"_blank\">Python 运维</a>\n\n<a href=\"https://www.jianshu.com/p/fb7b31a25358\" target=\"_blank\">docker决战到底(五)制作自己的Jenkins镜像</a>\n<a href=\"https://www.cnblogs.com/ityouknow/p/8599093.html\" target=\"_blank\">Spring Boot 2.0(四)：使用 Docker 部署 Spring Boot</a>\n<a href=\"https://blog.csdn.net/forezp/article/details/70198649\" target=\"_blank\">方志朋|史上最简单的SpringCloud教程 | 第十一篇: docker部署spring cloud项目</a>\n<a href=\"https://blog.csdn.net/qq_24084925/article/details/78869421\" target=\"_blank\">史上最简单的SpringCloud教程 第十一篇: docker部署spring cloud项目</a>\n\n<a href=\"https://blog.csdn.net/qwssd/article/details/79259786\" target=\"_blank\">Spring Cloud Learning | 第十二篇：Docker部署Spring Cloud项目</a>\n<a href=\"https://github.com/lingd3/SpringCloudLearning/tree/master/chapter12\" target=\"_blank\">github|源码</a>\n\n<a href=\"https://www.docker-cn.com/registry-mirror\" target=\"_blank\">docker中国官方镜像</a>\n\n\nDockerfile\n<a href=\"https://blog.csdn.net/jlnu_wanglei/article/details/78265365\" target=\"_blank\">使用Dockerfile搭建各种环境</a>\n<a href=\"https://www.jianshu.com/p/10ed530766af\" target=\"_blank\">学习Docker之Dockerfile的命令</a>\n<a href=\"https://github.com/vector4wang\" target=\"_blank\">github|vector4wang</a>\n\ndocker-compose\n<a href=\"https://blog.csdn.net/chinrui/article/details/79155688\" target=\"_blank\">Docker-Compose入门</a>\n<a href=\"https://www.cnblogs.com/neptunemoon/p/6512121.html\" target=\"_blank\">使用docker-compose 大杀器来部署服务 上</a>\n<a href=\"https://blog.csdn.net/u011781521/article/details/80464826\" target=\"_blank\">Docker(四) - Docker-Compose 详解</a>\n\n<a href=\"https://blog.csdn.net/qq_36148847/article/details/79427878\" target=\"_blank\">windows docker-compose.yml</a>\n<a href=\"https://www.jianshu.com/p/2217cfed29d7\" target=\"_blank\">windows docker-compose.yml</a>\n```\ndocker-machine env --shell cmd default\n@FOR /f \"tokens=*\" %i IN ('docker-machine env default') DO @%i\ndocker info\ndocker-machine ls\ndocker-compose up --build\n#后台运行\ndocker-compose up -d\n#来查看当前运行的应用\ndocker-compose ps\n#允许为应用程序运行一次性命令\ndocker-compose run\n#查看哪些环境变量可以用于 web 服务\ndocker-compose run web env\n#停止服务\ndocker-compose stop\n#停止镜像\ndocker-compose down\n#down 命令完全移除容器,传递 --volumes 还可以删除 Redis 容器中所使用的数据卷\ndocker-compose down --volumes\n```\ndocker-compose.yml\n```\nversion: \"3\"\nservices:\n \n  redis:\n    image: redis:alpine\n    ports:\n      - \"6379\"\n    networks:\n      - frontend\n    deploy:\n      replicas: 2\n      update_config:\n        parallelism: 2\n        delay: 10s\n      restart_policy:\n        condition: on-failure\n \n  db:\n    image: postgres:9.4\n    volumes:\n      - db-data:/var/lib/postgresql/data\n    networks:\n      - backend\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n \n  vote:\n    image: dockersamples/examplevotingapp_vote:before\n    ports:\n      - 5000:80\n    networks:\n      - frontend\n    depends_on:\n      - redis\n    deploy:\n      replicas: 2\n      update_config:\n        parallelism: 2\n      restart_policy:\n        condition: on-failure\n \n  result:\n    image: dockersamples/examplevotingapp_result:before\n    ports:\n      - 5001:80\n    networks:\n      - backend\n    depends_on:\n      - db\n    deploy:\n      replicas: 1\n      update_config:\n        parallelism: 2\n        delay: 10s\n      restart_policy:\n        condition: on-failure\n \n  worker:\n    image: dockersamples/examplevotingapp_worker\n    networks:\n      - frontend\n      - backend\n    deploy:\n      mode: replicated\n      replicas: 1\n      labels: [APP=VOTING]\n      restart_policy:\n        condition: on-failure\n        delay: 10s\n        max_attempts: 3\n        window: 120s\n      placement:\n        constraints: [node.role == manager]\n \n  visualizer:\n    image: dockersamples/visualizer:stable\n    ports:\n      - \"8080:8080\"\n    stop_grace_period: 1m30s\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n \nnetworks:\n  frontend:\n  backend:\n \nvolumes:\n  db-data:\n```\n<a href=\"https://blog.csdn.net/crper/article/details/81291034\" target=\"_blank\">Docker折腾记: (3)Docker Compose构建Gitlab,从配置(https,邮箱验证)到基本可用</a>\n<a href=\"https://blog.csdn.net/q85795362/article/details/82770670\" target=\"_blank\">docker-compose常用命令</a>\n\n<a href=\"https://blog.csdn.net/bbwangj/article/details/81170010\" target=\"_blank\">docker-compose部署django+nginx+mysql</a>\n项目结构\n```\n# tree\n`-- dokcer-feiyu\n     |-- docker-compose.yml\n     |-- nginx\n     |   |-- Dockerfile\n     |   `-- nginx.conf\n     |-- User\n   |-- Dockerfile\n   |-- manage.py\n   |-- requirements.txt\n   |-- static\n   |-- users\n   |-- db.sqlite3\n   |-- gunicorn.conf\n   |-- media\n   |-- start.sh\n   |-- templates\n   `-- User\n```\nDockerfile\n```\nFROM nginx\n#对外暴露端口\nEXPOSE 80 8000\n#RUN rm /etc/nginx/conf.d/default.conf\nADD nginx.conf  /etc/nginx/conf.d/\nRUN mkdir -p /usr/share/nginx/html/static\nRUN mkdir -p /usr/share/nginx/html/media\n```\nnginx.conf\n```\nserver {\n     listen      80;\n     server_name localhost;\n     charset     utf-8;\n     error_log /tmp/nginx_error.log;\n     access_log /tmp/nginx_access.log;\n     location /media {\n         alias /usr/share/nginx/html/media;\n     }\n     location /static {\n         alias /usr/share/nginx/html/static;\n         }\n     location / {\n         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n         proxy_set_header Host $http_host;\n         proxy_redirect off;\n         proxy_pass http://web:8000;\n     }\n}\n```\nDockerfile\n```\nFROM python:3.5\n#MySQL-Python必须得先安装这个库\nRUN mkdir /User\n#设置工作目录\nWORKDIR /User\n#将当前目录加入到工作目录中\nADD . /User\n#install any needed pacakges in requirements.txt，你要把所有需要安装的Python模块加到这文\n件中。\nRUN pip install -r requirements.txt\n#对外暴露端口\nEXPOSE 80 8000\n#设置环境变量\nENV SPIDER=/User\n```\nrequirements.txt\n```\nDjango==1.18\nPillow\nPyMySQL\n```\nsettings.py\n```\nALLOWED_HOSTS = ['*', ]\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'dataname',\n        'USER': 'root',//docker-compose.yml文件中的MYSQL_DATABASE\n        'PASSWORD': '123456',//docker-compose.yml文件中的MYSQL_ROOT_PASSWORD\n        'HOST': 'db',//docker-compose.yml文件中的MYSQL_DATABASE\n    }\n}\n```\nstart.py\n```\n#!/bin/bash\npython manage.py collectstatic --noinput &&\npython manage.py migrate &&\ngunicorn User.wsgi:application -c gunicorn.conf\n```\ngunicorn.conf\n```\nworkers=4\nbind=['0.0.0.0:8000']\nproc_name='blog'\npidfile='/tmp/blog.pid'\nworker_class='gevent'\nmax_requests=\n```\ndocker-compose.yml\n```\nversion: \"3\"\nservices:\n    db:\n       image: mysql\n       environment:\n          MYSQL_DATABASE: dataname\n          MYSQL_ROOT_PASSWORD: 123456\n       volumes:\n         - /srv/db:/var/lib/mysql\n       restart: always\n    web:\n       build: ./User\n       ports:\n       - \"8001:8001\"\n       volumes:\n       - ./User:/User\n       - /tmp/logs:/tmp\n       command: python3 manage.py runserver 0.0.0.0:8001\n   nginx:\n     build: ./nginx\n     ports:\n     - \"81:80\"\n     volumes:\n     - ./User/static:/usr/share/nginx/html/static\n     - ./User/media:/usr/share/nginx/html/media\n     links:\n     - web\n     depends_on:\n     - web\n     restart: always\n```\n启动和编译\n```\ndocker-compose build\ndocker-compose up\ndocker-compose up -d\n```\n","tags":["docker"]},{"title":"[php] sublime+php格式化","url":"/2019/02/15//articles/2019/02/15/1550229508000.html/","content":"注： \n1.PHP版本必须是7.0或7.0以上\n```\ncd \"%USERPROFILE%\\AppData\\Roaming\\Sublime Text 3\\Packages\"\ngit clone https://github.com/nanch/phpfmt_stable phpfmt\nnotepad phpfmt.sublime-settings\n#保存时，格式化代码\n{\n \"version\": 4,\n \"php_bin\":\"E:/phpStudy/PHPTutorial/php/php-7.0.12-nts/php.exe\",\n \"format_on_save\":true,\n \"option\": \"value\"\n}\n#或\n#手动格式化，Ctrl + F11\n{\n    \"format_on_save\": false,\n    \"php_bin\": \"E:/phpStudy/PHPTutorial/php/php-7.0.12-nts/php.exe\",\n    \"psr1\": true,\n    \"psr1_naming\": true,\n    \"psr2\": true,\n    \"version\": 1\n}\n```","tags":["php"]},{"title":"[C] demos","url":"/2019/02/10//articles/2019/02/05/1549771841000.html/","content":"<a href=\"https://brightereyer.xyz/2019/02/05/articles/2019/02/05/1549344289000.html\" target=\"_blank\">C环境搭建</a>\n<a href=\"https://github.com/BrighterEyer/C100\" target=\"_blank\">github|C语言经典例程100例</a>\n<a href=\"https://www.jb51.net/article/137027.htm\" target=\"_blank\">脚本之家|C语言经典例程100例(经典c程序100例)</a>\n<a href=\"https://www.jb51.net/books/604923.html\" target=\"_blank\">脚本之家|c语言编程经典实例100+答案.docx</a>\n<a href=\"https://blog.csdn.net/qq_41289254/article/details/82388446\" target=\"_blank\">csdn|菜鸟教程|C 语言经典100例后50例目录</a>\n<a href=\"https://github.com/Mzzopublic/C\" target=\"_blank\">Mzzopublic/C</a>\n<a href=\"https://github.com/LeechanX/Data-Structures-and-Algorithms-in-C\" target=\"_blank\">所有基础数据结构和算法的纯C语言实现，如各自排序、链表、栈、队列、各种树以及应用、图算法、字符串匹配算法、回溯、并查集等，献丑了</a>\n<a href=\"https://github.com/imhuay/Algorithm_Interview_Notes-Chinese\" target=\"_blank\">2018/2019/校招/春招/秋招/算法/机器学习(Machine Learning)/深度学习(Deep Learning)/自然语言处理(NLP)/C/C++/Python/面试笔记</a>\n","tags":["C"]},{"title":"[thinkphp] thinkphp","url":"/2019/02/09//articles/2019/02/09/1549693548000.html/","content":"按顺序查看\n<a href=\"https://www.cnblogs.com/baiyygynui/p/8463715.html\" target=\"_blank\">1.在phpstudy中安装并使用ThinkPHP 5</a>\n<a href=\"https://www.cnblogs.com/baiyygynui/p/6746535.html\" target=\"_blank\">2.phpstudy上运行ThinkPHP</a>\n\n开发环境\n<a href=\"http://phpstudy.php.cn/\" target=\"_blank\">phpstudy</a>\n<a href=\"http://www.jetbrains.com/phpstorm/\" target=\"_blank\">phpstorm</a>\n```\nC:\\Windows\\System32\\drivers\\etc\\hosts\n127.0.0.1 www.demo.com\n#访问以下网址，检测是否配置成功\nhttp://www.demo.com/public/\n```\n<a href=\"https://github.com/top-think/framework/releases\" target=\"_blank\">github|thinkphp</a>\n<a href=\"http://175.6.244.211:88/code/201812web/thinkphp_full.zip\" target=\"_blank\">thinkphp_full.zip</a>\n<a href=\"http://zjdx.down.chinaz.com/201901/ThinkPHP_full_v5.0.24.zip\" target=\"_blank\">ThinkPHP_full_v5.0.24.zip</a>\n<a href=\"http://www.itmop.com/downinfo/4625.html\" target=\"_blank\">ThinkPHP v5.0.10 官方完整版</a>\n<a href=\"http://a.xiazai163.com/down/thinkphp5.0_itmop.com.zip\" target=\"_blank\">ThinkPHP v5.0.10 官方完整版zip包</a>\n<a href=\"http://js.downcc.com/down1/ThinkPHP_downcc.zip\" target=\"_blank\">ThinkPHP v5.0.9 官方完整版zip包</a>\n<a href=\"http://www.thinkphp.cn/down.html\" target=\"_blank\">ThinkPHP5</a>\n手册\n<a href=\"https://www.kancloud.cn/manual/thinkphp5/118003\" target=\"_blank\">ThinkPHP5.0完全开发手册</a>\n\n<a href=\"http://chromecj.com/Handler/Download/980\" target=\"_blank\">Xdebug Helper.crx</a>\n<a href=\"https://www.cnblogs.com/baocheng/p/5775938.html\" target=\"_blank\">phpStorm+XDebug+chrome配置</a>\nphp.ini\n```\n[XDebug]\n;指定Xdebug扩展文件的绝对路径\nzend_extension=\"/path/to/php_xdebug.dll\"\n;启用代码自动跟踪\nxdebug.auto_trace=on\n;允许收集传递给函数的参数变量\nxdebug.collect_params=on\n;允许收集函数调用的返回值\nxdebug.collect_return=on\n;指定堆栈跟踪文件的存放目录\nxdebug.trace_output_dir=\"/path/to/xdebug\"\n;是否启用Xdebug的性能分析，并创建性能信息文件\nxdebug.profiler_enable=on\n;指定性能分析信息文件的输出目录\nxdebug.profiler_output_dir=\"/path/to/xdebug\"\n;是否开启远程调试\nxdebug.remote_enable = on\n;指定远程调试的处理协议\nxdebug.remote_handler = dbgp\n;指定远程调试的主机名\nxdebug.remote_host= www.demo.com\n;指定远程调试的端口号\nxdebug.remote_port = 9000\n;指定传递给DBGp调试器处理程序的IDE Key\nxdebug.idekey = PHPSTORM\n```\n\n<a href=\"https://sourceforge.net/projects/wincachegrind/files/latest/download\" target=\"_blank\">wincachegrind</a>\n```\n#读取cachegrind.out.×××文件的内容，查看效能监测文件的信息\n运行后，点击Tools->options，设定你的working folder(php.ini里xdebug.profiler_output_dir的值)\n```\n\n验证\n```\n#Settings > Languages & Frameworks > PHP > Debug > Pre-configuration > Validate > Validate按钮\n#或\nCtrl + Alt + s > settings 搜索 xdebug > Esc > Pre-configuration > Validate > Validate按钮\n```\n\n报错\n```\nCall to undefined function M()\n```\n<a href=\"https://xdebug.org/download.php\" target=\"_blank\">php_xdebug.dll</a>\n<a href=\"https://confluence.jetbrains.com/display/PhpStorm/Xdebug+Installation+Guide\" target=\"_blank\">Xdebug导航</a>\n<a href=\"https://www.jetbrains.com/help/phpstorm/configuring-xdebug.html\" target=\"_blank\">官网配置Xdebug</a>\n\n<a href=\"https://www.jianshu.com/p/24ab78f619b6\" target=\"_blank\">简书|快速上手ThinkPHP 5.0</a>\n<a href=\"https://github.com/SperkJJ/ThinkPHP5\" target=\"_blank\">基于ThinkPHP5实现微信自动登录、微信支付、支付宝支付、Web推送、阿里云短信、极光推送、二维码生成</a>\nqrcode\n```\nhttps://github.com/SperkJJ/ThinkPHP5/tree/master/TP5-QRcode/controller\nhttps://github.com/endroid/QrCode\n```\n<a href=\"http://www.hotxf.com/27\" target=\"_blank\">小风博客|ThinkPHP框架里后台加sql在线备份功能</a>\n","tags":["thinkphp"]},{"title":"[pygame] 打包游戏","url":"/2019/02/08//articles/2019/02/08/1549611678000.html/","content":"1.py2exe\n<a href=\"http://www.cnblogs.com/msxh/p/4886628.html\" target=\"_blank\">将python程序打包成exe</a>\n<a href=\"https://sourceforge.net/projects/py2exe/files/py2exe/0.6.9/\" target=\"_blank\">sourceforge|py2exe</a>\n<a href=\"https://sourceforge.net/projects/py2exe/files/py2exe/0.6.9/py2exe-0.6.9.win32-py2.7.exe/download\" target=\"_blank\">py2exe-0.6.9.win32-py2.7.exe</a>\n<a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/#py2exe\" target=\"_blank\">py2exe.whl</a>\n2.PyInstaller\n<a href=\"https://blog.csdn.net/qq_26877377/article/details/80357349\" target=\"_blank\">PyInstaller的安装和使用</a>\n<a href=\"https://www.pyinstaller.org/downloads.html\" target=\"_blank\">PyInstaller官网</a>\n<a href=\"https://github.com/pyinstaller/pyinstaller/releases\" target=\"_blank\">PyInstaller|releases包</a>\n```\n#成功，windows注意下载zip版\npython setup.py install\npyinstaller -F /path/to/file.py\n```\n<a href=\"https://download.lfd.uci.edu/pythonlibs/r5uhg2lo/PyInstaller-3.4-py2.py3-none-any.whl\" target=\"_blank\">PyInstaller-3.4-py2.py3-none-any.whl</a>\n```\npip install PyInstaller-3.4-py2.py3-none-any.whl\n```\n```\n#失败\npip install PyInstaller\n```\n3.pywin32\n<a href=\"https://www.cnblogs.com/gopythoner/p/6337543.html\" target=\"_blank\">安装pywin32</a>\n```\npip install pywin32\n```\n4.pyqt4\n<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4\" target=\"_blank\">pyqt4.whl</a>\n<a href=\"https://download.lfd.uci.edu/pythonlibs/r5uhg2lo/PyQt4-4.11.4-cp27-cp27m-win_amd64.whl\" target=\"_blank\">PyQt4-4.11.4-cp27-cp27m-win_amd64.whl</a>\n```\npip install PyQt4-4.11.4-cp27-cp27m-win_amd64.whl\n```\n\n","tags":["pygame"]},{"title":"[python3] 网络爬虫","url":"/2019/02/07//articles/2019/02/07/1549541296000.html/","content":"<a href=\"https://blog.csdn.net/c406495762/column/info/15321\" target=\"_blank\">Python3网络爬虫入门</a>\n<a href=\"https://github.com/Jack-Cherish/python-spider\" target=\"_blank\">github|python-spider</a>\n<a href=\"http://cuijiahua.com/blog/spider/\" target=\"_blank\">进阶教程</a>\n","tags":["python3"]},{"title":"[hexo] 添加打赏功能","url":"/2019/02/07//articles/2019/02/07/1549541295000.html/","content":"<a href=\"https://blog.csdn.net/u010820857/article/details/82323096\" target=\"_blank\">hexo 给博客添加版权、共享按钮、打赏</a>\n1.版权信息\n```\npost_copyright:\n  enable: true \n  author: hiekay \n  copyright_text: 作者拥有版权，请注明出处转载。\n```\n2.添加共享按钮\n```\nnpm install --save hexo-helper-qrcode\n#编辑_config.yml\nshareto: true\n```\n3.添加打赏二维码\n```\n(1)准备好支付宝、微信收款二维码\n(2)放到img/ 目录下\n(3)在配置文件中配置\ndonate:\n  enable: true \n  alipay_qr:  /img/AliPayQR.png\n  wechat_qr:  /img/WeChatQR.png \n  paypal_url:\n```","tags":["hexo"]},{"title":"[pygame] 《Python游戏编程入门》","url":"/2019/02/07//articles/2019/02/07/1549533064000.html/","content":"<a href=\"https://pan.baidu.com/s/1p612sAfMT9vDqzI9cFyRpw\" target=\"_blank\">hmdu</a>\n<a href=\"https://blog.csdn.net/qq_23091331/article/category/6909171\" target=\"_blank\">《Python游戏编程入门》</a>\n<a href=\"https://www.cnblogs.com/tsxh/p/8855715.html\" target=\"_blank\">铁树小寒|Python游戏编程入门</a>\n<a href=\"https://blog.csdn.net/lonely_gfwolf/article/category/7605598\" target=\"_blank\">lonely_gfolf|python游戏编程</a>\n<a href=\"https://www.cnblogs.com/yunlongaimeng/p/8719335.html\" target=\"_blank\">迷宫游戏（基础版）</a>\n<a href=\"https://www.cnblogs.com/msxh/p/4990435.html\" target=\"_blank\">【python游戏编程之旅】第四篇 - pygame中加载位图与常用的数学函数</a>\n<a href=\"https://github.com/search?l=Python&q=Python%E6%B8%B8%E6%88%8F%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8&type=Repositories\" target=\"_blank\">github|Python游戏编程入门</a>\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=python%E6%B8%B8%E6%88%8F&ref=simplesearch\" target=\"_blank\">github|python游戏</a>","tags":["pygame"]},{"title":"[java] Jenkins","url":"/2019/02/07//articles/2019/02/07/1549530753000.html/","content":"<a href=\"https://www.yiibai.com/jenkins/jenkins_continuous_deployment.html\" target=\"_blank\">Jenkins持续部署</a>","tags":["java"]},{"title":"[springboot] springboot面试题","url":"/2019/02/07//articles/2019/02/07/1549529485000.html/","content":"<a href=\"https://www.cnblogs.com/3xmq/p/springboot.html\" target=\"_blank\">Spring Boot面试题</a>\n<a href=\"https://www.jianshu.com/p/63ad69c480fe\" target=\"_blank\">吐血整理 20 道 Spring Boot 面试题，我经常拿来面试别人！</a>\n<a href=\"https://www.cnblogs.com/3xmq/p/springboot.html\" target=\"_blank\">Spring Boot面试题</a>","tags":["springboot"]},{"title":"[java] 单点登录","url":"/2019/02/07//articles/2019/02/07/1549528570000.html/","content":"<a href=\"https://blog.csdn.net/zhangjingao/article/details/81735041\" target=\"_blank\">java实现完全跨域SSO单点登录</a>\n<a href=\"https://github.com/zhangjingao/sso\" target=\"_blank\">sso</a>\n<a href=\"https://www.cnblogs.com/libinhyq/p/9561582.html\" target=\"_blank\">java之单点登录（SSO）</a>\n<a href=\"https://blog.csdn.net/a466350665/article/details/54140411\" target=\"_blank\">Java单点登录权限系统</a>\n","tags":["java"]},{"title":"[嵌入式] 硬件&嵌入式","url":"/2019/02/07//articles/2019/02/07/1549522201000.html/","content":"<a href=\"https://www.jianshu.com/c/15c669459c5b\" target=\"_blank\">硬件&嵌入式</a>\n","tags":["嵌入式"]},{"title":"[java] qrcode","url":"/2019/02/07//articles/2019/02/07/1549522200000.html/","content":"<a href=\"https://github.com/qinggee/qrcode-utils\" target=\"_blank\">qrcode-utils</a>","tags":["java"]},{"title":"[机器学习] 机器学习","url":"/2019/02/07//articles/2019/02/07/1549513422000.html/","content":"<a href=\"http://www.kineticjs.com/\" target=\"_blank\">机器学习</a>\n\n","tags":["机器学习"]},{"title":"[docker] docker集群","url":"/2019/02/07//articles/2018/02/07/1549513201000.html/","content":"<a href=\"https://blog.csdn.net/bskfnvjtlyzmv867/article/category/7802879\" target=\"_blank\">docker集群</a>\n<a href=\"https://www.kubernetes.org.cn\" target=\"_blank\">kubernetes中文社区</a>\n<a href=\"https://blog.csdn.net/Real_Myth/article/details/78719244\" target=\"_blank\">k8s docker集群搭建</a>\n","tags":["docker"]},{"title":"[C#] C#实战","url":"/2019/02/07//articles/2019/02/07/1549503414000.html/","content":"<a href=\"https://blog.csdn.net/qwm8777411/article/details/49249791\" target=\"_blank\">C#项目实战-实现一个多线程端口扫描器</a>","tags":["C#"]},{"title":"[java] 省市区级联下拉菜单","url":"/2019/02/07//articles/2019/02/07/1549503413000.html/","content":"<a href=\"https://github.com/BrighterEyer/JavaEEDemos/tree/master/WebAdvanced\" target=\"_blank\">Web开发进阶之路一书的源代码</a>\n<a href=\"https://blog.csdn.net/qing_gee/article/details/50983189\" target=\"_blank\">jsp+bootstrap级联下拉菜单</a>\n","tags":["java"]},{"title":"[树莓派] 树莓派","url":"/2019/02/07//articles/2019/02/07/1549503411000.html/","content":"<a href=\"https://www.jianshu.com/c/304eb5418139\" target=\"_blank\">简书|树莓派</a>\n<a href=\"http://shumeipai.nxez.com\" target=\"_blank\">树莓派实验室</a>\n<a href=\"https://blog.csdn.net/u011781521/article/details/54807866\" target=\"_blank\">csdn|树莓派开发</a>\n","tags":["树莓派"]},{"title":"[office] 实用技巧","url":"/2019/02/06//articles/2019/02/06/1549465254000.html/","content":"<a href=\"https://www.jianshu.com/c/cafa56897525\" target=\"_blank\">Office实用小技能get</a>\n<a href=\"https://www.jianshu.com/c/9ba7a859dda1\" target=\"_blank\">职场Office技巧</a>\n\n<a href=\"https://www.jianshu.com/c/9df5862d2a58\" target=\"_blank\">PPT</a>\n","tags":["office"]},{"title":"[maven插件] jetty","url":"/2019/02/06//articles/2019/02/06/1549463061000.html/","content":"<a href=\"https://blog.csdn.net/ethan__xu/article/details/80741535\" target=\"_blank\">maven配置jetty9插件</a>\n<a href=\"https://blog.csdn.net/wu6660563/article/details/69666566\" target=\"_blank\">Maven-Jetty的插件集成快速启动</a>","tags":["maven插件"]},{"title":"[java] slf4j","url":"/2019/02/06//articles/2019/02/06/1549426719000.html/","content":"<a href=\"https://blog.csdn.net/u013870094/article/details/79518028\" target=\"_blank\">最详细的Log4J使用教程</a>\n为方便系统日志管理规范，统一使用slf4j日志\n1.概念\n```\nSLF4J，即简单日志门面（Simple Logging Facade for Java），不是具体的日志解决方案，它只服务于各种各样的日志系统。\n按照官方的说法，SLF4J是一个用于日志系统的简单Facade，允许最终用户在部署其应用时使用其所希望的日志系统\n```\n2.使用步骤(如果是maven项目)\n```\n<dependencies>\n    <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-api</artifactId>\n        <version>1.7.6</version>\n    </dependency>\n    <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-log4j12</artifactId>\n        <version>1.7.6</version>\n    </dependency>\n</dependencies>\n```\n3.此目录下建立此文件\n/src/main/resources/log4j.properties\n```\nlog4j.rootLogger=INFO,Console,File\nlog4j.appender.Console=org.apache.log4j.ConsoleAppender\nlog4j.appender.Console.Target=System.out\nlog4j.appender.Console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.Console.layout.ConversionPattern=[%p][%t][%d{yyyy-MM-dd HH\\:mm\\:ss}][%C] - %m%n\n\nlog4j.appender.File=org.apache.log4j.RollingFileAppender\nlog4j.appender.File.File=logs/ssm.log\nlog4j.appender.File.MaxFileSize=10MB\nlog4j.appender.File.Threshold=ALL\nlog4j.appender.File.layout=org.apache.log4j.PatternLayout\nlog4j.appender.File.layout.ConversionPattern=[%p][%t][%d{yyyy-MM-dd HH\\:mm\\:ss}][%C] - %m%n\n\n#sql\nlog4j.logger.com.mybatis=DEBUG\nlog4j.logger.com.mybatis.common.jdbc.SimpleDataSource=DEBUG\nlog4j.logger.com.mybatis.common.jdbc.ScriptRunner=DEBUG\nlog4j.logger.com.mybatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG\nlog4j.logger.java.sql.Connection=DEBUG\nlog4j.logger.java.sql.Statement=DEBUG\nlog4j.logger.java.sql.PreparedStatement=DEBUG\n```\n4.类内部使用\n```\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n \nprivate static final Logger logger = LoggerFactory.getLogger(AuthzController.class);  \nlogger.info(\"oauthRequest.getRedirectURI() : \" + oauthRequest.getRedirectURI()\n```\n<a href=\"https://blog.csdn.net/cslucifer/article/details/80953400\" target=\"_blank\">idea+lombok+@Slf4j</a>\n<a href=\"https://plugins.jetbrains.com/plugin/6317-lombok-plugin\" target=\"_blank\">lombok插件</a>\n```\n<dependencies>\n    <dependency>\n        <groupId>org.projectlombok</groupId>\n        <artifactId>lombok</artifactId>\n        <version>1.18.0</version>\n    </dependency>\n    <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-api</artifactId>\n        <version>1.7.25</version>\n    </dependency>\n    <dependency>\n        <groupId>ch.qos.logback</groupId>\n        <artifactId>logback-classic</artifactId>\n        <version>1.2.3</version>\n    </dependency>\n    <dependency>\n        <groupId>org.junit.jupiter</groupId>\n        <artifactId>junit-jupiter-api</artifactId>\n        <version>5.2.0</version>\n        <scope>test</scope>\n    </dependency>\n</dependencies>\n```\nLogTest.java\n```\n@Slf4j\nclass LogTest {\n\n    @Test\n    void testLog() {\n        String testInfo = \"Free flying flowers are like dreams\";\n        log.info(\"The test info is :{}\", testInfo);\n    }\n}\n```\n<a href=\"http://www.importnew.com/28494.html\" target=\"_blank\">Java日志框架：slf4j作用及其实现原理</a>\n<a href=\"https://blog.csdn.net/HarderXin/article/details/80422903\" target=\"_blank\">slf4j与log4j、log4j2</a>\n<a href=\"http://www.importnew.com/28541.html\" target=\"_blank\">Java日志框架：logback详解</a>\n<a href=\"https://www.cnblogs.com/warking/p/5710303.html\" target=\"_blank\">logback的使用和logback.xml详解</a>\n<a href=\"https://www.cnblogs.com/lixuwu/p/5804793.html\" target=\"_blank\">springboot - logback基础使用篇</a>\n","tags":["java"]},{"title":"[java] log4j","url":"/2019/02/06//articles/2019/02/06/1549426719000.html/","content":"<a href=\"https://blog.csdn.net/u013870094/article/details/79518028\" target=\"_blank\">最详细的Log4J使用教程</a>\n```\nlog4j.rootLogger=info, stdout, info_log, error_log\n\n#------------------------------------------------------------------------------------\n# 输出到控制台\n#------------------------------------------------------------------------------------\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss:SSS} %p [%M] %c %L %m%n\n\n#------------------------------------------------------------------------------------\n# info_log\n#------------------------------------------------------------------------------------\nlog4j.appender.info_log=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.info_log.File=logs/info.log\nlog4j.appender.info_log.Append=true\nlog4j.appender.info_log.Threshold=INFO\nlog4j.appender.info_log.layout=org.apache.log4j.PatternLayout\nlog4j.appender.info_log.DatePattern='.'yyyy-MM-dd\nlog4j.appender.info_log.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss:SSS} %p [%M] %c %L %m%n\n\n#------------------------------------------------------------------------------------\n# error_log\n#------------------------------------------------------------------------------------\nlog4j.appender.error_log=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.error_log.File=logs/error.log\nlog4j.appender.error_log.Append=true\nlog4j.appender.error_log.Threshold=ERROR\nlog4j.appender.error_log.layout=org.apache.log4j.PatternLayout\nlog4j.appender.error_log.DatePattern='.'yyyy-MM-dd\nlog4j.appender.error_log.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss:SSS} %p [%M] %c %L %m%n\n```","tags":["java"]},{"title":"[maven插件] tomcat","url":"/2019/02/06//articles/2019/02/06/1549426718000.html/","content":"<a href=\"https://blog.csdn.net/qq_26917447/article/details/81188366\" target=\"_blank\">maven pom集成tomcat8插件</a>\n<a href=\"https://blog.csdn.net/u011781521/article/details/75194071\" target=\"_blank\">Maven使用tomcat8-maven-plugin插件</a>\npom.xml\n```\n    <properties>\n        <javax.servlet.version>3.1.0</javax.servlet.version>\n        <spring.version>4.3.8.RELEASE</spring.version>\n        <jdk.version>1.8</jdk.version>\n    </properties>\n\n    <repositories>\n        <repository>\n            <id>spring-milestones</id>\n            <name>Spring Milestones</name>\n            <url>https://repo.spring.io/libs-milestone</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n    <pluginRepositories>\n        <pluginRepository>\n            <id>alfresco-public</id>\n            <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>\n        </pluginRepository>\n        <pluginRepository>\n            <id>alfresco-public-snapshots</id>\n            <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>daily</updatePolicy>\n            </snapshots>\n        </pluginRepository>\n        <!--<pluginRepository>-->\n            <!--<id>beardedgeeks-releases</id>-->\n            <!--<url>http://beardedgeeks.googlecode.com/svn/repository/releases</url>-->\n        <!--</pluginRepository>-->\n    </pluginRepositories>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-core</artifactId>\n            <version>${spring.version}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>commons-logging</groupId>\n                    <artifactId>commons-logging</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>commons-logging</groupId>\n            <artifactId>commons-logging</artifactId>\n            <version>1.2</version>\n        </dependency>\n        <dependency>\n          <groupId>javax.servlet</groupId>\n          <artifactId>javax.servlet-api</artifactId>\n          <version>${javax.servlet.version}</version>\n          <scope>provided</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.5.1</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                    <uriEncoding>UTF-8</uriEncoding>\n                    <compilerArguments>\n                        <verbose />\n                        <bootclasspath>${java.home}/lib/rt.jar;${java.home}/lib/jce.jar</bootclasspath>\n                    </compilerArguments>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.tomcat.maven</groupId>\n                <artifactId>tomcat8-maven-plugin</artifactId>\n                <version>3.0-r1655215</version>\n                <configuration>\n                    <!-- <path>/</path> -->\n                    <server>tomcat8</server>\n                    <port>8080</port>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>run</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n```\nmaven 打包 致命错误：在类路径或引导类路径中找不到软件包 java.lang\n<a href=\"https://blog.csdn.net/skate6/article/details/70597104\" target=\"_blank\">参考1</a>\n<a href=\"https://blog.csdn.net/u012759397/article/details/52099291\" target=\"_blank\">参考2</a>\n```\norg.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.\n\n编辑文件\napache-tomcat-8.x.x\\conf\\logging.properties\n在最后一行加入\norg.apache.jasper.servlet.TldScanner.level = FINE\norg.apache.el.parser.SKIP_IDENTIFIER_CHECK = true\n```\n执行\n```\n#把maven中重复的servlet-api删除\nmvn dependency:tree\n<exclusions>\n    <exclusion>\n        <groupId>javax.servlet</groupId>\n        <artifactId>servlet-api</artifactId>\n    </exclusion>\n</exclusions>\n\nmvn idea:idea\nmvn clean install package -Dmaven.test.skip=true -X tomcat8:run-war\nmvn clean install -Dmaven.test.skip=true -X tomcat8:redeploy\n```","tags":["maven插件"]},{"title":"[Android] Android开发","url":"/2019/02/06//articles/2019/02/06/1549425507000.html/","content":"<a href=\"https://blog.csdn.net/qq_32666413/article/details/80534457\" target=\"_blank\">最全android Demo</a>\n<a href=\"https://blog.csdn.net/zhaoxiaojian1213/article/details/77479417\" target=\"_blank\">Android 手机震动功能的实现</a>\n<a href=\"https://github.com/shaochen2015821426/Music-Player.git\" target=\"_blank\">音乐播放器</a>\n<a href=\"https://blog.csdn.net/huangliniqng/column/info/23962\" target=\"_blank\">csdn|huanglinqing</a>\n<a href=\"https://blog.csdn.net/huangliniqng/article/details/82221283\" target=\"_blank\">csdn|Android 开发之 QQ变声功能实现</a>\n<a href=\"https://github.com/huanglinqing123/ChangeVoice/tree/master\" target=\"_blank\">github|Android 开发之 QQ变声功能实现</a>\n\n<a href=\"https://www.jianshu.com/p/cae606f45c0b\" target=\"_blank\">Lottie - 让Android动画实现更简单</a>\n<a href=\"https://github.com/panacena/LottieTest/\" target=\"_blank\">github|LottieTest</a>\n\n<a href=\"https://www.jianshu.com/p/d6cc8d218900\" target=\"_blank\">简书|Android高级动画（1）...（4）</a>\n\n<a href=\"https://blog.csdn.net/miaozhenzhong/article/details/52750386\" target=\"_blank\">9个完整android开源app项目</a>\n<a href=\"https://github.com/chrisbanes/photup\" target=\"_blank\">相册类app photoup</a>\n<a href=\"http://git.oschina.net/oschina/android-app \" target=\"_blank\">oschina开源安卓客户端</a>\n<a href=\"https://github.com/MiCode/FileExplorer\" target=\"_blank\">FileExplorer小米文件管理器</a>\n<a href=\"https://github.com/tigerguixh/QuickNews\" target=\"_blank\">QuickNews新闻客户端</a>\n<a href=\"https://github.com/romannurik/muzei\" target=\"_blank\">android壁纸应用 Muzei Live Wallpaper</a>\n<a href=\"https://github.com/cundong/ZhihuPaper\" target=\"_blank\">一个「知乎日报」Android 客户端</a>\n<a href=\"https://github.com/tigerguixh/ele_demo\" target=\"_blank\">仿饿了么订餐</a>\n<a href=\"https://github.com/kyze8439690/v2ex-daily-android\" target=\"_blank\">v2ex开源android客户端</a>\n\n<a href=\"https://github.com/twjitm/afhq\" target=\"_blank\">手机安全卫士</a>\n<a href=\"https://github.com/xwdoor/MobileSafe\" target=\"_blank\">手机安全卫士</a>\n<a href=\"https://github.com/edifangyi/Mobile-Security-Guards\" target=\"_blank\">基于黑马课程的手机安全卫士</a>\n<a href=\"http://175.6.244.211:88/code/201406/mobilesafewzb_a5.zip\" target=\"_blank\">手机安全卫士.zip</a>\n\n\n<a href=\"https://www.yiibai.com/android/android_bluetooth.html\" target=\"_blank\">易百教程android示例含源码</a>\n\n<a href=\"https://blog.csdn.net/qq_25827845/article/details/52997523\" target=\"_blank\">Android 蓝牙开发之搜索、配对、连接、通信大全</a>\n<a href=\"https://github.com/chaohuangtianjie994/BlueTooth-AutoPair\" target=\"_blank\">github|android蓝牙</a>\n<a href=\"https://github.com/Jasonchenlijian/FastBle/wiki\" target=\"_blank\">github|FastBle</a>\n\n<a href=\"https://www.jianshu.com/u/70c12759d4fe\" target=\"_blank\">设计模式</a>\n<a href=\"https://blog.csdn.net/guolin_blog/\" target=\"_blank\">郭霖</a>\n<a href=\"https://blog.csdn.net/qwm8777411\" target=\"_blank\">Debug的猫</a>\n<a href=\"http://www.atguigu.com/android_video.shtml\" target=\"_blank\">尚硅谷android视频</a>\n<a href=\"http://www.atguigu.com/opensource.shtml\" target=\"_blank\">尚硅谷android资料</a>\n<a href=\"http://www.jianshu.com/p/06490b5f1e2e\" target=\"_blank\">《Android 源码分析之旅，消息机制源码分析》</a>\n<a href=\"http://www.jianshu.com/p/06490b5f1e2e\" target=\"_blank\">《Android 源码分析之旅，onConfigurationChanged》</a>\n<a href=\"http://www.jianshu.com/p/7e2fe2e3c4a2\" target=\"_blank\">《一碗鸡汤与学习方法——鱼与熊掌都可兼得》</a>\n<a href=\"http://www.jianshu.com/p/b5ba11275a6d\" target=\"_blank\">《Android笔试面试指南》</a>\n\n<a href=\"http://www.xiufm.com/forum-40-1.html\" target=\"_blank\">秀源码|Android</a>\n<a href=\"http://www.androidchina.net/category/dev\" target=\"_blank\">Android开发</a>\n<a href=\"http://yun.java1234.com/search?q=android\" target=\"_blank\">云盘android</a>","tags":["Android"]},{"title":"[cocos2d] quick-cocos2dx sublime快捷键","url":"/2019/02/06//articles/2019/02/06/1549425507000.html/","content":"1.sublime定位quick-cocos2dx代码定义\n```\nctrl+shift+g\n```\n2.常用的插件\n```\nPackage Control\nSublimeLinter\nBracketHighlighter\nFunction Name Display\nIndentGuides\n```\n3.常用快捷键\n```\n#跳转到相应的行\nctrl+g\n#打开命令行\nctrl+~\n#快速列出/跳转到某个函数\nctrl+r\n#快速换行\nctrl+Enter\n#当前窗口中的标签页切换\nctrl+tab\n```","tags":["cocos2d"]},{"title":"[UE4] UE4游戏开发","url":"/2019/02/06//articles/2019/02/06/1549416287000.html/","content":"<a href=\"https://github.com/BGgame2499\" target=\"_blank\">github|BGgame2499</a>\n<a href=\"https://www.unrealengine.com/zh-CN/what-is-unreal-engine-4\" target=\"_blank\">UE4官网</a>\n<a href=\"https://www.cnblogs.com/timy/category/1183557.html\" target=\"_blank\">一次一粒沙|UE4</a>\n<a href=\"http://www.52vr.com/forum/ue4projects\" target=\"_blank\">ue4projects</a>\n","tags":["UE4"]},{"title":"[flash] ActionScript3","url":"/2019/02/05//articles/2019/02/05/1549344292000.html/","content":"<a href=\"http://download.adobe.com/pub/adobe/flex/win/FlashBuilder_4_6_LS10.exe\" target=\"_blank\">FlashBuilder_4_6_LS10.exe</a>\n<a href=\"https://blog.csdn.net/xxxxx_xing/article/details/80109264\" target=\"_blank\">Flash Builder 4.6安装</a>\n<a href=\"https://blog.csdn.net/BoRenLiang/article/category/5022869\" target=\"_blank\">ActionScript 3.0 学习(一) ~ (十八) </a>\n<a href=\"https://www.cnblogs.com/artwl/p/3396330.html\" target=\"_blank\">ActionScript 3.0入门：Hello World、文件读写、数据存储(SharedObject)、与JS互调</a>\n\n源码\n<a href=\"http://www.ddooo.com/softdown/11722.htm\" target=\"_blank\">adobe flash cs6</a>\n<a href=\"https://gitee.com/KingSleyF/ActionScript3.0-Programs\" target=\"_blank\">gitee|ActionScript</a>\n<a href=\"https://github.com/search?l=ActionScript&q=ActionScript&type=Repositories\" target=\"_blank\">github|ActionScript</a>\n<a href=\"https://github.com/renaun/ActionScriptExamples\" target=\"_blank\">github|ActionScriptExamples</a>\n<a href=\"https://github.com/minimalcomps/minimalcomps\" target=\"_blank\">github|ActionScript组件</a>\n\n<a href=\"http://www.ferryhalim.com/orisinal/\" target=\"_blank\">在线flash游戏</a>\n<a href=\"http://sc.chinaz.com/tag_donghua/flashYuanMa.html\" target=\"_blank\">站长素材|flash源码</a>\n<a href=\"http://www.xwcms.net/js/list/flashxyx/flashxyx_1.html\" target=\"_blank\">xwcms|flash小游戏</a>\n<a href=\"http://www.xwcms.net/tag/list/flashsc/flashxyx/flashxyx_1.html\" target=\"_blank\">xwcms|flash小游戏列表</a>\n<a href=\"http://www.16sucai.com/fla/\" target=\"_blank\">16sucai|flash素材</a>\n<a href=\"http://www.16sucai.com/2015/04/58306.html\" target=\"_blank\">16sucai|漂亮的游戏关卡界面矢量素材</a>\n<a href=\"http://www.5iflash.com/\" target=\"_blank\">5iflash|flash演示中心</a>\n","tags":["flash"]},{"title":"[硬件] arduino","url":"/2019/02/05//articles/2019/02/05/1549344291000.html/","content":"<a href=\"https://www.arduino.cn\" target=\"_blank\">arduino中文社区</a>\n<a href=\"https://www.jianshu.com/p/53d5ad86195a\" target=\"_blank\">arduino教程/资料汇总</a>\n<a href=\"https://www.jianshu.com/c/285a8928581a\" target=\"_blank\">玩转Arduino</a>\n<a href=\"https://www.jianshu.com/c/5a527638b0f8\" target=\"_blank\">简书专题|Arduino</a>\n<a href=\"https://www.arduino.cn/thread-5838-1-1.html\" target=\"_blank\">Arduino IDE下载</a>\n<a href=\"https://dev.tencent.com/u/coloz/p/arduino-installer/git/raw/master/1.8.8/arduino-1.8.8-windows.exe\" target=\"_blank\">arduino-1.8.8-windows.exe</a>\n<a href=\"https://arduino-wiki.clz.me\" target=\"_blank\">Arduino 常用函数参考</a>\n<a href=\"http://pan.baidu.com/s/1gfL1m87\">蓝牙遥控小车实战源码 uruk</a>\n<a href=\"https://github.com/caoqi95/Arduino_Learning\">github|Arduino_Learning</a>\n\n仿真\n<a href=\"https://blog.csdn.net/y511374875/article/details/77844944\" target=\"_blank\">Arduino Proteus仿真</a>\n<a href=\"https://blog.csdn.net/youshenmebutuo/article/details/76692332\" target=\"_blank\">使用Protues进行Arduino仿真 - Blink</a>\n\n视频类\n<a href=\"https://www.bilibili.com/video/av13904952\" target=\"_blank\">肖生克科技|Arduino基础教程（1）</a>\n<a href=\"https://www.bilibili.com/video/av13904222\" target=\"_blank\">肖生克科技|Arduino基础教程（2）</a>\n<a href=\"https://www.bilibili.com/video/av13906282\" target=\"_blank\">肖生克科技|智能小车学习教程</a>\n<a href=\"https://pan.baidu.com/s/1jKeRBuQ\" target=\"_blank\">肖生克科技|Arduino学习资料</a>\n\n<a href=\"https://www.bilibili.com/video/av31147843\" target=\"_blank\">野生技术协会|《别再找了！这是有史以来最棒的Arduino教程系列》</a>\n<a href=\"https://www.bilibili.com/video/av10007630\" target=\"_blank\">科技传播坊|Arduino 入门课程</a>\n\n<img src=\"https://img-blog.csdn.net/20180610170258857?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dvc2hpX3ppeXU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"/>\n硬件购买\n<a href=\"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.6.2ba110c1l2niu4&id=523957302031&skuId=3999321123028&user_id=1829684076&cat_id=2&is_b=1&rn=6133b9064ba232f3498b14a4aed9f179\" target=\"\">arduinouno uno r3入门套件</a>\n<a href=\"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.11.2ba110c1l2niu4&id=574319078687&user_id=1829684076&cat_id=2&is_b=1&rn=6133b9064ba232f3498b14a4aed9f179\" target=\"\">Arduino 大套件</a>","tags":["硬件"]},{"title":"[前端] svg","url":"/2019/02/05//articles/2019/02/05/1549344290000.html/","content":"<a href=\"https://blog.csdn.net/chy555chy/article/details/53333422\">SVG 形状元素（rect、circle、ellipse、line、polyline、polygon、path）</a>\n\n","tags":["前端"]},{"title":"[C] 环境搭建","url":"/2019/02/05//articles/2019/02/05/1549344289000.html/","content":"1.工具\n<a href=\"https://blog.csdn.net/wm45857721/article/details/77978637\" target=\"_blank\">C语言开发环境配置(win10)</a>\nsublime text3 + tcc + cmder\n<a href=\"http://www.sublimetext.com/3\" target=\"_blank\">sublime text3</a>\n<a href=\"https://bellard.org/tcc/\" target=\"_blank\">tcc</a>\n<a href=\"http://cmder.net/\" target=\"_blank\">非必选|cmder</a>\n2.tcc.bat\n```\n#文件路径:\n#C:\\\\Program Files\\\\tcc\\\\tcc.bat\nstart cmd /k %2 -run %1\n```\n3.tcc.sublime-build\n```\n#sublime tex3中菜单Tools -> Bulid System -> New Bulid System..., 另存为tcc.sublime-build\n{\n    \"cmd\": [\"C:\\\\Program Files\\\\tcc\\\\tcc.bat\", \"$file\", \"C:\\\\Program Files\\\\tcc\\\\tcc.exe\"],\n    \"file_regex\": \"^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\",\n    \"selector\": \"source.c\"\n}\n```\n4.tcc编译\n```\n#选tcc\nctrl+b\n#或\n菜单Tools -> Bulid System -> tcc\n```\n5.程序\n```\n#编译成hello.obj\ntcc -Iinclude hello\n#编译并连接成hello.exe\ntcc -Iinclude -Llib hello\n#生成hello.asm\ntcc -Iinclude -S hello\n```\n6.<a href=\"https://blog.csdn.net/zhyh1435589631/article/details/51303756\" target=\"_blank\">乱码处理</a>\n```\n#chcp命令\n#UTF-8\nchcp 65001\n#默认的GBK\nchcp 936\n#美国英语  \nchcp 437\n```\n7.代码格式化\n<a href=\"https://www.jianshu.com/p/595975a2a5f3\" target=\"_blank\">Sublime插件|C语言代码格式化</a>\n<a href=\"https://www.cnblogs.com/zwfymqz/p/9717368.html\" target=\"_blank\">sublime实现一键代码格式化</a>\n```\nhttps://packagecontrol.io/packages/SublimeAStyleFormatter\nhttps://github.com/timonwong/SublimeAStyleFormatter/releases\n按下ctrl + Alt + F是默认格式化整个文件\n按下ctrl + K + F即可格式化选中区域\n#安装插件\n（1）直接下载好想要的插件，然后打开菜单栏里的 Preferences -> Browse Packages，打开包的位置\n（2）然后将下载的好插件直接放置到Packages目录，重启Sublime Text3 插件就会安装成功了\n（3）安装是否成功可以在 Preferences -> Package Settings 里面查看 \n```\n8.graphics.h\n<a href=\"https://www.cnblogs.com/geore/p/5914664.html\" target=\"_blank\">EasyX|使用graphics.h来绘制图形</a>\n<a href=\"https://www.fixdown.com/soft/1259.html\" target=\"_blank\">graphics.h下载</a>\n\nC语言库安装（mingw选装）\n<a href=\"http://www.mingw-w64.org/doku.php/download\" target=\"_blank\">mingw-w64</a>\n<a href=\"http://www.cygwin.com/setup-x86_64.exe\" target=\"_blank\">cygwin</a>\n<a href=\"https://sourceforge.net/projects/mingw/files/latest/download\" target=\"_blank\">mingw</a>\n<a href=\"https://nchc.dl.sourceforge.net/project/mingw/Installer/mingw-get-setup.exe\" target=\"_blank\">mingw-get-setup.exe</a>\n<a href=\"https://www.jianshu.com/p/e9ff7b654c4a\" target=\"_blank\">mingw配置</a>\n<a href=\"https://blog.csdn.net/u013171283/article/details/80898442\" target=\"_blank\">mingw各个Package的作用</a>\n<a href=\"http://pan.baidu.com/s/1FubYD\" target=\"_blank\">MinGW.rar</a>\n```\n#Path追加\nC:\\MinGW\\bin\n```\n选择安装组件\n```\nMark for Installation -> Installation -> Apply Changes\n-> MinGW Base System -> 右边找到mingw-gcc，选择bin、dev、lic\n-> Installation -> Mark for removal\n```\nmingw必选Package\n```\n#mingw32\nmingw32-binutils\nmingw32-gcc\nmingw32-mingwrt\nmingw32-w32api\nmingw32-mingwrt\nmingw32-w32api\n#一般必选\nmingw32-libobjc\nmingw32-libstdc++\n\n#msys\nmsys-bash\nmsys-core\nmsys-coreutils\n```\n可选\n```\n#如选择了 Fortran 编译器，则必选，Fortran 运行库\nmingw32-libgfortran\n#如选择了 Ada 编译器，则必选，Ada 运行库\nmingw32-libgnat\n#如选择了 Objective-C 编译器，则必选，Objective-C 运行库\nmingw32-libobjc\n#如选择了 C++ 编译器，则必选，C++ 运行库\nmingw32-libstdc++\n```\n","tags":["C"]},{"title":"[前端] 插件","url":"/2019/02/05//articles/2019/02/05/1549344288000.html/","content":"<a href=\"https://www.jq22.com\">jq22</a>\n","tags":["前端"]},{"title":"[css3] css3动画库animate.css","url":"/2019/02/05//articles/2019/02/05/1549344287000.html/","content":"<a href=\"https://daneden.github.io/animate.css/\" target=\"_blank\">animate.css官网</a>\n<a href=\"https://blog.csdn.net/qq_27682041/article/details/77568787\" target=\"_blank\">参考</a>\n预设了抖动（shake）、闪烁（flash）、弹跳（bounce）、翻转（flip）、旋转（rotateIn/rotateOut）、淡入淡出（fadeIn/fadeOut）等多达 60 多种动画效果\n<a href=\"https://github.com/BrighterEyer/cssDemos/blob/master/css3animate.html\" target=\"_blank\">github|animate.css示例</a>\n\n<a href=\"https://www.cnblogs.com/2050/p/3409129.html\" target=\"_blank\">css3动画简介以及动画库animate.css的使用</a>\n```\n过渡动画\n关键帧动画\n```","tags":["css3"]},{"title":"[qt] Qt windows开发环境搭建","url":"/2019/02/04//articles/2019/02/04/1549259160000.html/","content":"<a href=\"http://www.qter.org/\" target=\"_blank\">Qt开源社区</a>\n<a href=\"https://blog.csdn.net/liang19890820/article/details/50277095\" target=\"_blank\">2015年12月12日|《Qt 实战一二三》</a>\n<a href=\"https://blog.csdn.net/vincent95/article/details/79100173\" target=\"_blank\">Qt windows开发环境搭建</a>\n<a href=\"https://www.jb51.net/books/327831.html\" target=\"_blank\">Qt5开发及实例 PDF扫描版[135MB]</a>","tags":["qt"]},{"title":"[kotlin] Android快速转战Kotlin教程","url":"/2019/02/04//articles/2019/02/04/1549259159000.html/","content":"<a href=\"https://blog.csdn.net/github_33304260/article/details/80343514\" target=\"_blank\">Android快速转战Kotlin教程</a>\n1.书籍《Kotlin-for-Android-Developers》配套代码\n<a href=\"https://github.com/antoniolg/Kotlin-for-Android-Developers\" target=\"_blank\">天气例子</a>\n2.Bandhook-Kotlin(★1494)\n<a href=\"https://github.com/antoniolg/Bandhook-Kotlin\" target=\"_blank\">Kotlin版本的音乐播放器，数据来源于LastFm</a>\n3.GankClient-Kotlin(★1216)\n<a href=\"https://github.com/githubwing/GankClient-Kotlin\" target=\"_blank\">gank.io kotlin实现的干货集中营Android客户端，风格采用了Material Design</a>\n4.PoiShuhui-Kotlin(★897)\n<a href=\"https://github.com/wuapnjie/PoiShuhui-Kotlin\" target=\"_blank\">一个用Kotlin写的简单漫画APP</a>\n5.Eyepetizer-in-Kotlin(★1167)\n<a href=\"https://github.com/LRH1993/Eyepetizer-in-Kotlin\" target=\"_blank\">Kotlin版本的Eyepetizer客户端</a>\n6.Tucao(★792)\n<a href=\"https://github.com/blackbbc/Tucao\" target=\"_blank\">Kotlin版本的吐槽客户端</a>\n\n","tags":["kotlin"]},{"title":"[python] 二维码","url":"/2019/02/04//articles/2019/02/04/1549259158000.html/","content":"```\nPath追加环境变量\nD:\\Python27;D:\\Python27\\Scripts\n```\n<a href=\"https://brightereyer.xyz/2019/01/10/articles/2019/01/10/1547085457000.html\" target=\"_blank\">安装pip</a>\n<a href=\"https://github.com/sylnsfar/qrcode/blob/master/README-cn.md\" target=\"_blank\">qrcode使用</a>\n```\npip install Pillow\npip install myqr\n#普通二维码\nmyqr https://github.com\n#黑白图片\nmyqr https://github.com -p github.jpg\n#由黑白变彩色\nmyqr https://github.com -p github.jpg -c\n```\n<a href=\"https://pypi.org/project/MyQR/#files\" target=\"_blank\">MyQR下载</a>\n","tags":["python"]},{"title":"[react-native] 条形码扫描","url":"/2019/02/04//articles/2019/02/04/1549251001000.html/","content":"<a href=\"https://www.jianshu.com/p/8e8bc89bfe2c\" target=\"_blank\">react-native-smart-barcode（react-native二维码扫描）</a>\n<a href=\"https://github.com/react-native-component/react-native-smart-barcode\" target=\"_blank\">github|react-native-smart-barcode</a>\n<a href=\"https://www.jianshu.com/p/8bef243bc35d\" target=\"_blank\">react-native-smart-barcode目前最好用的二维码扫描组件（IOS、android）</a>\n```\nhttps://javascript.ctolib.com/article/wiki/101267\nnpm install react-native-smart-barcode --save\nnpm install react-native-smart-timer-enhance --save\nreact-native link\n```\nandroid/settings.gradle\n```\ninclude ':react-native-smart-barcode'\nproject(':react-native-smart-barcode').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-smart-barcode/android')\n```\n\\node_modules\\react-native-smart-barcode\\ios\\RCTBarcode\n在MainApplication.java文件中（这里官方上面有错误，在这里修改一下）：\n```\n    //将原来的代码注释掉，换成这句\n    private ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n    //  private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n    @Override\n    protected boolean getUseDeveloperSupport() {\n      return BuildConfig.DEBUG;\n    }\n \n    @Override\n    protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n              new MainReactPackage(),\n              //直接在这里添加\n              new RCTCapturePackage()\n      );\n    }\n  };\n  //添加\n  public void setReactNativeHost(ReactNativeHost reactNativeHost) {\n    mReactNativeHost = reactNativeHost;\n  }\n \n  @Override\n  public ReactNativeHost getReactNativeHost() {\n    return mReactNativeHost;\n  }\n```\n4.在AndroidManifest.xml文件中添加相机权限:\n```\n<uses-permission android:name=\"android.permission.CAMERA\"/>\n<uses-permission android:name=\"android.permission.VIBRATE\"/>\n<uses-feature android:name=\"android.hardware.camera\"/>\n<uses-feature android:name=\"android.hardware.camera.autofocus\"/>\n```","tags":["react-native"]},{"title":"[linux] linux环境配置","url":"/2019/02/04//articles/2019/02/04/1549250900000.html/","content":"<a href=\"https://help.aliyun.com/document_detail/51376.html?spm=a2c4g.11186623.6.893.7ed32e7atqCUOT\" target=\"_blank\">阿里云文档</a>","tags":["linux"]},{"title":"[前端] 获取地理位置","url":"/2019/01/26//articles/2019/01/26/1548511043000.html/","content":"```\n<script src=\"http://pv.sohu.com/cityjson?ie=utf-8\"></script>\n<script type=\"text/javascript\">\ndocument.write(returnCitySN[\"cip\"]+','+returnCitySN[\"cname\"])\n</script>\n```","tags":["前端"]},{"title":"[java] 跨域","url":"/2019/01/23//articles/2019/01/23/1548206934000.html/","content":"<a href=\"https://segmentfault.com/a/1190000012364985\" target=\"_blank\">springboot设置cors跨域请求的两种方式</a>\n```\n@Configuration\npublic class CorsConfig {\n    @Bean\n    public FilterRegistrationBean corsFilter() {\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        CorsConfiguration config = new CorsConfiguration();\n        config.setAllowCredentials(true);\n        // 设置你要允许的网站域名，如果全允许则设为 *\n//        config.addAllowedOrigin(\"http://localhost:8080\");\n        config.addAllowedOrigin(\"*\");\n        // 如果要限制 HEADER 或 METHOD 请自行更改\n        config.addAllowedHeader(\"*\");\n        config.addAllowedMethod(\"*\");\n        source.registerCorsConfiguration(\"/**\", config);\n        FilterRegistrationBean bean = new FilterRegistrationBean(new CorsFilter(source));\n        // 这个顺序很重要哦，为避免麻烦请设置在最前\n        bean.setOrder(0);\n        return bean;\n    }\n}\n```\n\n<a href=\"https://blog.csdn.net/idomyway/article/details/79572973\" target=\"_blank\">解决js ajax跨域访问报\"No 'Access-Control-Allow-Origin' header is present on the requested resource.\"错误</a>\n<a href=\"https://www.cnblogs.com/mmzs/p/9167743.html\" target=\"_blank\">@CrossOrigin</a>\n```\n@Configuration\n@EnableWebMvc\npublic class WebConfig extends WebMvcConfigurerAdapter {\n\t@Override\n\tpublic void addCorsMappings(CorsRegistry registry) {\n\t\tregistry.addMapping(\"/api/**\")\n\t\t\t.allowedOrigins(\"http://domain2.com\")\n\t\t\t.allowedMethods(\"PUT\", \"DELETE\")\n\t\t\t.allowedHeaders(\"header1\", \"header2\", \"header3\")\n\t\t\t.exposedHeaders(\"header1\", \"header2\")\n\t\t\t.allowCredentials(false).maxAge(3600);\n\t}\n}\n```\n\nspringboot filter跨域\n```\n\nimport org.springframework.boot.web.servlet.ServletComponentScan;\nimport org.springframework.stereotype.Component;\n\nimport javax.servlet.*;\nimport javax.servlet.annotation.WebFilter;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n@Component\n@ServletComponentScan\n@WebFilter(urlPatterns = \"/*\",filterName = \"corsFilter\")\n@Order(1)\npublic class CorsFilter implements Filter {\n\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n    }\n\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        HttpServletResponse response = (HttpServletResponse) servletResponse;\n        HttpServletRequest request = (HttpServletRequest)servletRequest;\n\n        String origin = request.getHeader(\"Origin\");\n        response.setHeader(\"Access-Control-Allow-Origin\", origin);\n        response.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, DELETE\");\n        response.setHeader(\"Access-Control-Max-Age\", \"3600\");\n        response.setHeader(\"Access-Control-Allow-Headers\", \"x-requested-with,Authorization\");\n        response.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n        String method = request.getMethod();\n        if(method.equalsIgnoreCase(\"OPTIONS\")){\n            servletResponse.getOutputStream().write(\"Success\".getBytes(\"utf-8\"));\n        }else{\n            filterChain.doFilter(servletRequest, servletResponse);\n        }\n    }\n\n    @Override\n    public void destroy() {\n\n    }\n}\n```\nbean注册|不注册会报错\n```\n    @Bean\n    public FilterRegistrationBean filterRegistrationBean() {  \n        FilterRegistrationBean registrationBean = new FilterRegistrationBean();  \n        CorsFilter corsFilter = new CorsFilter();  \n        registrationBean.setFilter(corsFilter);  \n        List<String> urlPatterns = new ArrayList<String>();  \n        urlPatterns.add(\"/*\");\n        registrationBean.setUrlPatterns(urlPatterns);  \n        return registrationBean;  \n    }\n```\n```\nmvn package -Dmaven.test.skip=true spring-boot:repackage\n```\n\n<a href=\"https://blog.csdn.net/m_jack/article/details/80497617\" target=\"_blank\">No 'Access-Control-Allow-Origin' header is present on the requested resource.'Ajax跨域访问解决方案</a>\njsonp\n```\n    $.ajax({\n            type:\"GET\",\n            url:\"http://www.deardull.com:9090/getMySeat\", //访问的链接\n            dataType:\"jsonp\",  //数据格式设置为jsonp\n            jsonp:\"callback\",  //Jquery生成验证参数的名称\n            success:function(data){  //成功的回调函数\n                alert(data);\n            },\n            error: function (e) {\n                alert(\"error\");\n            }\n        });\n后端\n    @ResponseBody\n    @RequestMapping(\"/getMySeat\")\n    public String getMySeatSuccess(@RequestParam(\"callback\") String callback){\n        Gson gson=new Gson();\n        Map<String,String> map=new HashMap<>();\n        map.put(\"seat\",\"1_2_06_12\");\n        logger.info(callback);\n        return callback+\"(\"+gson.toJson(map)+\")\";\n    }\n```\n\n<a href=\"https://www.jianshu.com/p/db0d8d45c242\" target=\"_blank\">spring-boot 允许接口跨域并实现拦截（CORS）</a>\n```\n@Configuration\npublic class CorsConfig extends WebMvcConfigurerAdapter {\n    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n                .allowedOrigins(\"*\")\n                .allowCredentials(true)\n                .allowedMethods(\"GET\", \"POST\", \"DELETE\", \"PUT\")\n                .maxAge(3600);\n    }\n    private CorsConfiguration buildConfig() {\n        CorsConfiguration corsConfiguration = new CorsConfiguration();\n        List<String> list = new ArrayList<>();\n        list.add(\"*\");\n        corsConfiguration.setAllowedOrigins(list);\n        /*\n        // 请求常用的三种配置，*代表允许所有，当时你也可以自定义属性（比如header只能带什么，只能是post方式等等）\n        */\n        corsConfiguration.addAllowedOrigin(\"*\");  \n        corsConfiguration.addAllowedHeader(\"*\"); \n        corsConfiguration.addAllowedMethod(\"*\");  \n        return corsConfiguration;\n    }\n    @Bean\n    public CorsFilter corsFilter() {\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration(\"/**\", buildConfig());\n        return new CorsFilter(source);\n    }\n}\n```","tags":["java"]},{"title":"[java] Multipartfile与File类型相互转换","url":"/2019/01/23//articles/2019/01/23/1548206933000.html/","content":"<a href=\"https://www.cnblogs.com/zxg-blog/p/8952255.html\" target=\"_blank\">Multipartfile与File类型相互转换</a>","tags":["java"]},{"title":"[react-native] react-native-qq","url":"/2019/01/20//articles/2019/01/20/1547972027000.html/","content":"<a href=\"https://www.jianshu.com/p/910eec152abb\" target=\"_blank\">React Native封装微信\\QQ分享组件</a>\n<a href=\"https://github.com/guangqiang-liu/react-native-shareLogin.git\" target=\"_blank\">[可用]项目Demo</a>\n\n<a href=\"https://www.jianshu.com/p/a493f6f92b34\" target=\"_blank\">react-native代码编辑|react-native实现QQ的登录和分享（图文消息分享和纯图片分享）</a>\n\n给gradle配置阿里云maven\n<a href=\"http://faceplus.top/2017/04/22/react-native%E8%BF%9B%E5%85%A5%E5%A7%BF%E5%8A%BF/init.gradle\" target=\"_blank\">init.gradle</a>\n```\nnotepad %USERPROFILE%\\.gradle\\init.gradle\n```\n\n<a href=\"https://github.com/reactnativecn/react-native-qq\" target=\"_blank\">react-native-qq</a>\n<a href=\"http://wiki.open.qq.com/wiki/mobile/get_simple_userinfo\" target=\"_blank\">qq腾讯开放平台获取获取用户信息文档链接</a>\n\n<a href=\"https://www.jianshu.com/p/46a9919636be\" target=\"_blank\">react native qq登录，微信登录实现(android端)</a>\n```\n#使用特定版本\nreact-native init demo --version 0.55.4\ncd demo\nyarn add react-native-qq\nreact-native link react-native-qq\n\n#android/app/build.gradle\n#defaultConfig 添加\n        manifestPlaceholders = [\n            QQ_APPID: \"平台申请的APPID\"\n        ]\n\n#<manifest>添加\nxmlns:tools=\"http://schemas.android.com/tools\"\n#<application>添加\ntools:replace=\"android:allowBackup\"\n\nreact-native run-android\n```\n\n<a href=\"https://blog.csdn.net/xietansheng/article/details/85092056\" target=\"_blank\">sdkmanager的使用</a>\n```\n#配置环境变量\nE:\\Android\\Sdk\\tools\\bin\nE:\\Android\\Sdk\\tools\nE:\\Android\\Sdk\\platform-tools\n#新建文件\nnotepad %USERPROFILE%\\.android\\repositories.cfg\nsdkmanager --list\nsdkmanager --uninstall \"build-tools;23.0.1\"\nsdkmanager \"build-tools;23.0.1\"\nsdkmanager \"build-tools;27.0.3\"\nsdkmanager \"system-images;android-24;default;x86_64\"\nsdkmanager \"platform-tools\" \"platforms;android-26\"\n```\n\n<a href=\"https://blog.csdn.net/deeplies/article/details/71194121\" target=\"_blank\">[办法]react-native 编译构建时出错，提示 Build Tools版本过低提示</a>\n```\nandroid list sdk -a\nandroid update sdk --use-sdk-wrapper\nandroid update sdk -a -u -t 13\n```","tags":["react-native"]},{"title":"[css] css技巧","url":"/2019/01/19//articles/2019/01/19/1547901857000.html/","content":"截取图片特定部分作为背景\n```\ndiv{\n    background-image: url(/path/to/filename.png);\n    background-repeat: no-repeat;\n    width: 50px;\n    height: 50px;\n    position: absolute;\n    background-position: -50px -50px;\n}\n```\n<a href=\"https://www.cnblogs.com/starof/p/4424347.html\" target=\"_blank\">cnblogs|box-shadow讲解与示例</a>\n```\nbox-shadow属性向box添加一个或多个阴影。\n语法：\nbox-shadow: offset-x offset-y blur spread color inset/outset;\nbox-shadow: X轴偏移量 Y轴偏移量 [阴影模糊半径] [阴影扩展] [阴影颜色] [投影方式];\n```\n上下左右阴影分开\n```\nCSS 只让上部边有阴影\ndiv{\t\n       -moz-box-shadow:0px -15px 10px -15px #07a8fe;\n    -webkit-box-shadow:0px -15px 10px -15px #07a8fe;\n            box-shadow:0px -15px 10px -15px #07a8fe;\n}\n\nCSS 只让底部边有阴影\ndiv{\t\n       -moz-box-shadow:0px 15px 10px -15px #07a8fe;\n    -webkit-box-shadow:0px 15px 10px -15px #07a8fe;\n            box-shadow:0px 15px 10px -15px #07a8fe;\n}\n\nCSS 只让左边有阴影\ndiv{\t\n       -moz-box-shadow:-15px 0px 10px -15px #07a8fe;\n    -webkit-box-shadow:-15px 0px 10px -15px #07a8fe;\n            box-shadow:-15px 0px 10px -15px #07a8fe;\n}\nCSS 只让右边有阴影\ndiv{\t\n       -moz-box-shadow:15px 0px 10px -15px #07a8fe;\n    -webkit-box-shadow:15px 0px 10px -15px #07a8fe;\n            box-shadow:15px 0px 10px -15px #07a8fe;\n}\n左右阴影\ndiv:hover {\n       -moz-box-shadow:-15px 0px 10px -15px #07a8fe,\n                        15px 0px 10px -15px #07a8fe;\n    -webkit-box-shadow:-15px 0px 10px -15px #07a8fe,\n                        15px 0px 10px -15px #07a8fe;\n            box-shadow:-15px 0px 10px -15px #07a8fe,\n                        15px 0px 10px -15px #07a8fe;\n}\n```\n<a href=\"https://www.cnblogs.com/sapho/p/5481257.html\" target=\"_blank\">常用阴影的实现代码</a>\n<a href=\"https://www.cnblogs.com/wuchuanlong/p/5980766.html\" target=\"_blank\">css3 box-shadow阴影(外阴影与外发光)讲解</a>\n<a href=\"https://www.sioe.cn/yingyong/yanse-rgb-16/\" target=\"_blank\">RGB颜色值转换成十六进制颜色码</a>\n","tags":["css"]},{"title":"[cocos2d] cocos2d-js","url":"/2019/01/19//articles/2019/01/19/1547901856000.html/","content":"<a href=\"https://www.cnblogs.com/kenkofox/p/4153848.html\" target=\"_blank\">cocos2d-js 入门 （主要是HTML5）</a>\n<a href=\"https://blog.csdn.net/qq951127336/article/details/79860040\" target=\"_blank\">csdn|森林海的棕熊</a>\n<a href=\"https://github.com/QQ951127336/Game_byJavaScript\" target=\"_blank\">github|森林海的棕熊|cocos2d-js 游戏源码</a>\n```\n10秒内吃萝卜\n拼图游戏\n连水管游戏\n跳一跳游戏\n```\n<a href=\"https://blog.csdn.net/tonny_guan/article/details/44462165\" target=\"_blank\">第一个Cocos2d-JS游戏</a>\n<a href=\"https://www.cnblogs.com/zsychanpin/p/6978294.html\" target=\"_blank\">搭建Cocos2d-JS开发环境</a>\n<a href=\"https://www.cnblogs.com/tinyphp/p/5112188.html\" target=\"_blank\">Windows搭建Cocos2d-JS环境(Webstorm)</a>\n<a href=\"https://github.com/kenkozheng/cocos2d-js/tree/master/hungry_hero\" target=\"_blank\">hungry_hero</a>\n<a href=\"https://www.jianshu.com/p/67feb63c5b3a\" target=\"_blank\">cocos2d-js环境搭建</a>\n```\nhttps://github.com/cocos2d/cocos2d-js/releases\nhttps://cocos2d-x.org/filedown/cocos2d-js-v3.0.zip\nhttps://cocos2d-x.org/filedown/cocos2d-js-v3.6.zip\n```\n<a href=\"http://www.cocos2d-x.org/filedown/cocos2d-x-3.7.zip\" target=\"_blank\">cocos2d-js v3.7及以后的版本，js lua c++引擎都在一起了</a>\n<a href=\"https://docs.cocos2d-x.org/api-ref/js/v3x/\" target=\"_blank\">cocos-js api</a>\n\n报错解决\n```\n问题：webstorm开发时忽然遇到Cannot read property 'style' of null错误\n解决：去掉js文件中的注释\n```\n<a href=\"http://cocostudio.download.appget.cn/CocosStudio/v1.6.0.0/CocosStudio_v1.6.0.0.exe\" target=\"_blank\">Cocostudio 1.6</a>\n<a href=\"https://www.cnblogs.com/luorende/p/6464181.html\" target=\"_blank\">Cocos Code IDE</a>\n<a href=\"http://www.cocos2d-x.org/filedown/cocos-code-ide-win32-1.2.0.exe\" target=\"_blank\">Cocos Code IDE 1.2.0 Win32</a>\n<a href=\"http://www.cocos2d-x.org/filedown/cocos-code-ide-win64-1.2.0.exe\" target=\"_blank\">Cocos Code IDE 1.2.0 Win64</a>\n<a href=\"http://www.cocos2d-x.org/filedown/cocos-code-ide-mac64-1.2.0.dmg\" target=\"_blank\">Cocos Code IDE 1.2.0 Mac</a>\n","tags":["cocos2d"]},{"title":"[java] ueditor百度富文本编辑器","url":"/2019/01/18//articles/2019/01/10/1547817724000.html/","content":"<a href=\"https://blog.csdn.net/qq_33745799/article/details/70031641\" target=\"_blank\">很详细的SpringBoot整合UEditor教程</a>\n<a href=\"https://github.com/llldddbbb/ueditor-test\" target=\"_blank\">github|ueditor-test</a>\n<a href=\"http://fex.baidu.com/ueditor/#start-start\" target=\"_blank\">UEditor文档</a>\n<a href=\"https://ueditor.baidu.com/website/download.html\" target=\"_blank\">UEditor下载</a>\n<a href=\"https://www.jianshu.com/p/231e83c13610\" target=\"_blank\">springboot集成ueditor富文本编辑器（需要修改ueditor源码）</a>\n<a href=\"https://www.jianshu.com/p/006e65711de0\" target=\"_blank\">springboot集成ueditor富文本编辑器（不需修改ueditor源码）</a>","tags":["java"]},{"title":"[springboot] PageHelper","url":"/2019/01/18//articles/2019/01/18/1547774454000.html/","content":"<a href=\"http://www.cnblogs.com/1315925303zxz/p/7364552.html\" target=\"_blank\">SpringBoot集成MyBatis的分页插件PageHelper</a>\n\n<a href=\"https://www.cnblogs.com/V1haoge/p/9971036.html\" target=\"_blank\">SpringBoot整合Mybatis</a>\n```\nh2\n<dependency>\n    <groupId>com.h2database</groupId>\n    <artifactId>h2</artifactId>\n    <version>1.4.196</version>\n</dependency>\nswagger2\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger2</artifactId>\n    <version>2.8.0</version>\n</dependency>\nLombok\n<dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n    <version>1.16.20</version>\n    <scope>provided</scope>\n</dependency>\n\n```\n<a href=\"https://www.cnblogs.com/V1haoge/p/9971043.html\" target=\"_blank\">SpringBoot整合系列-PageHelper分页插件</a>","tags":["springboot"]},{"title":"[java] 极光推送","url":"/2019/01/18//articles/2019/01/18/1547774453000.html/","content":"<a href=\"http://www.cnblogs.com/V1haoge/p/6439313.html\" target=\"_blank\">极光推送经验之谈-Java后台服务器实现极光推送的两种实现方式</a>\n<a href=\"https://www.cnblogs.com/shena/p/6594091.html\" target=\"_blank\">JPush极光推送Java服务器端实例</a>\n<a href=\"https://blog.csdn.net/qq_38689769/article/details/79869902\" target=\"_blank\">java+maven集成极光推送服务</a>\n<a href=\"https://www.cnblogs.com/lingyejun/p/7220621.html\" target=\"_blank\">翎野|极光推送的代码实现</a>\n<a href=\"https://github.com/66668/ZOERP\" target=\"_blank\">github|含极光推送，基于MVC框架的中欧ERP商业项目移动端项目</a>\n<a href=\"https://github.com/good-life/pushtalk\" target=\"_blank\">推聊是一个基于极光推送 (JPush) 的手机聊天系统</a>\n","tags":["java"]},{"title":"[springboot] springboot+jpa+sqlite","url":"/2019/01/17//articles/2019/01/17/1547724476000.html/","content":"<a href=\"https://blog.csdn.net/tianyaleixiaowu/article/details/79445561\" target=\"_blank\">springboot+jpa+sqlite</a>\n<a href=\"http://www.cnblogs.com/hwding/p/7356382.html\" target=\"_blank\">使用Spring Boot快速构建基于SQLite数据源的应用</a>\n<a href=\"https://www.cnblogs.com/niuzhifa/p/9279543.html\" target=\"_blank\">springboot2.0.3使用jpa和hibernate的方式配置多数据源(sqlite和mysql)</a>\n<a href=\"https://github.com/restart1025/Spring-Boot-SQLite\" target=\"_blank\">github|Spring-Boot-SQLite</a>\n","tags":["springboot"]},{"title":"[springboot] springboot+sqlite","url":"/2019/01/17//articles/2019/01/17/1547724475000.html/","content":"<a href=\"https://segmentfault.com/a/1190000016176354\" target=\"_blank\">Spring Boot操作Sqlite数据库 从入门到跑路</a>\n<a href=\"https://github.com/yodfz/springboot-sqlite\" target=\"_blank\">github</a>\n<a href=\"http://www.runoob.com/sqlite/sqlite-commands.html\" target=\"_blank\">sqlite命令</a>\n```\n.help\n.databases\n.tables\n.schema <表名>\n#建表\nCREATE TABLE COMPANY(\n   ID INT PRIMARY KEY     NOT NULL,\n   NAME           TEXT    NOT NULL,\n   AGE            INT     NOT NULL,\n   ADDRESS        CHAR(50),\n   SALARY         REAL\n);\n#增\nINSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY)\nVALUES (1, 'Paul', 32, 'California', 20000.00 );\nINSERT INTO COMPANY VALUES\n(2, 'Allen', 25, 'Texas', 15000.00 ),\n(3, 'Teddy', 23, 'Norway', 20000.00 ),\n(4, 'Mark', 25, 'Rich-Mond ', 65000.00 );\n#删\nDELETE FROM COMPANY;\n#改\nUPDATE COMPANY SET ADDRESS = 'Texas' WHERE ID = 6;\n#查\nSELECT * FROM COMPANY;\n```\npom.xml\n```\n<dependency>\n    <groupId>org.xerial</groupId>\n    <artifactId>sqlite-jdbc</artifactId>\n    <version>3.21.0.1</version>\n</dependency>\n```","tags":["springboot"]},{"title":"[springboot] springboot集成elastic-search","url":"/2019/01/17//articles/2019/01/17/1547686805000.html/","content":"<a href=\"https://www.elastic.co/downloads/past-releases\" target=\"_blank\">elasticsearch</a>\n<a href=\"https://www.elastic.co/downloads/past-releases/elasticsearch-2-4-4\" target=\"_blank\">elasticsearch-2-4-4</a>\n","tags":["springboot"]},{"title":"[flutter] flutter教程","url":"/2019/01/16//articles/2019/01/16/1547630020000.html/","content":"<a href=\"https://flutterchina.club/setup-windows/\" target=\"_blank\">flutter中文网</a>\n<a href=\"https://flutter.io/setup-windows/\" target=\"_blank\">flutter英文官网</a>\n<a href=\"http://www.devio.org/2018/09/09/awesome-flutter/\" target=\"_blank\">一个很棒的Flutter学习资源列表</a>\n\n1.安装<a href=\"https://github.com/PowerShell/PowerShell/releases/download/v6.0.0-alpha.7/PowerShell_6.0.0.7.msi\" target=\"_blank\">PowerShell_6.0.0.7.msi</a>\n```\n#原位置\n#C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\\n#访问\n#https://github.com/PowerShell/PowerShell\n#追加环境变量\nC:\\Program Files\\PowerShell\\6.0.0.7\n```\n2.flutter\n```\n#访问\n#https://flutter.io/docs/development/tools/sdk/archive#windows\n下载fluter zip包，解压至E:\\dev\\flutter\n#加入Path环境变量\nE:\\dev\\flutter\\bin\n#自动安装所需依赖\nflutter doctor\n```\n3.<a href=\"http://www.gekorm.com/dart-windows/\" target=\"_blank\">Dart SDK</a>\n4.<a href=\"http://www.android-studio.org/\" target=\"_blank\">Android Studio</a>\n5.AndroidStudio插件\n```\nDart和Flutter\n```\n7.Android Studio设置Dart sdk\n```\nFile -> Settings -> Languages & Frameworks -> Dart -> SDK -> Dart SDK Path:\n```\n<img src=\"https://img-blog.csdn.net/2018071123152788?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTk5MTA1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\"/>\n\n6.Android Studio设置Flutter sdk\n```\nFile -> Settings -> Languages & Frameworks -> Flutter -> SDK -> Flutter SDK Path:\n```\n<img src=\"https://img-blog.csdn.net/20180711231450926?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTk5MTA1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\"/>\n\n\n<a href=\"https://book.flutterchina.club/\" target=\"_blank\">《Flutter实战》</a>\n<a href=\"https://www.jianshu.com/p/c02249c5232e\" target=\"_blank\">flutter创建应用白屏问题</a>\n```\n#1、进入工程后执行\nflutter run --enable-software-rendering\n#2、Android Studio配置：选择run/Edit Configurations... 菜单\nAddtional arguments:--enable-software-rendering\n```\n<a href=\"https://github.com/alibaba/flutter-go\" target=\"_blank\">阿里巴巴flutter go示例</a>\n<a href=\"https://github.com/Solido/awesome-flutter\" target=\"_blank\">漂亮的flutter</a>\n<a href=\"https://blog.csdn.net/hekaiyou/column/info/13593\" target=\"_blank\">何小有|Flutter教程</a>\n\n一些无用的折腾\n```\n1.Windows Powershell 介绍和安装\nhttps://www.jb51.net/article/54182.htm\n\n2.安装%systemroot%\\System32\\wusa.exe\nhttp://d.wenjian.net/exe/wusa.rar\nwusa \"C:\\Users\\Administrator\\Downloads\\Win7AndW2K8R2-KB3191566-x64\\Win7AndW2K8R2-KB3191566-x64.msu\" /quiet /norestart\n$PSVersionTable\n\n3.安装powershell\n#powershell5.5\n#https://www.microsoft.com/en-us/download/details.aspx?id=54616\n```\n","tags":["flutter"]},{"title":"[office] word目录自动生成","url":"/2019/01/16//articles/2019/01/16/1547622789000.html/","content":"<a href=\"https://baijiahao.baidu.com/s?id=1589194974284858425&wfr=spider&for=pc\" target=\"_blank\">ForestBlog博客</a>\n","tags":["office"]},{"title":"[github] 优秀github","url":"/2019/01/16//articles/2019/01/16/1547622788000.html/","content":"<a href=\"https://github.com/lenve\" target=\"_blank\">JavaEETest</a>\n<a href=\"https://github.com/saysky\" target=\"_blank\">ForestBlog博客</a>","tags":["github"]},{"title":"[优秀毕业设计] 优秀毕业设计","url":"/2019/01/16//articles/2019/01/16/1547621426000.html/","content":"<a href=\"https://blog.csdn.net/chen364567628/article/details/74586994\" target=\"_blank\">安卓毕业设计</a>\n<a href=\"https://wenku.baidu.com/view/9045e56ae55c3b3567ec102de2bd960590c6d91b.html\" target=\"_blank\">游戏毕业设计</a>\n\njava毕业设计\n<a href=\"https://github.com/saysky/ForestBlog\" target=\"_blank\">github|一个简单漂亮的Java博客系统</a>\n<a href=\"https://blog.csdn.net/LIU_YANZHAO/article/details/78503800\" target=\"_blank\">csdn|一个简单漂亮的Java博客系统</a>\n<a href=\"https://blog.csdn.net/Shuphen/article/details/78129174\" target=\"_blank\">个人博客系统</a>\n<a href=\"https://blog.csdn.net/suwu150/article/details/51596584\" target=\"_blank\">基于jsp的新闻发布系统</a>\n<a href=\"https://blog.csdn.net/u012702547\" target=\"_blank\">java大神|江南一点雨</a>\n<a href=\"https://github.com/lenve/JavaEETest/tree/master/MyBlog\" target=\"_blank\">java开源博客</a>\n<a href=\"http://www.zuidaima.com/\" target=\"_blank\">最代码</a>\n","tags":["优秀毕业设计"]},{"title":"[requirejs] requirejs概念到实战","url":"/2019/01/16//articles/2019/01/16/1547621425000.html/","content":"<a href=\"https://www.bootcdn.cn\" target=\"_blank\">BootCDN|CDN 加速服务|js库</a>\n<a href=\"https://www.cnblogs.com/HCJJ/p/6611669.html\" target=\"_blank\">requireJS 从概念到实战</a>\n<a href=\"https://blog.csdn.net/yubo_725/article/details/52955604\" target=\"_blank\">requireJS实战 使用RequireJS开发简易绘图程序</a>\n<a href=\"https://github.com/yubo725/DrawingBoard\" target=\"_blank\">github|RequireJS简易绘图程序</a>\n\n<a href=\"https://www.bootcdn.cn/require.js\" target=\"_blank\">require.js</a>\n<a href=\"https://www.bootcdn.cn/jquery\" target=\"_blank\">jquery</a>\n简易绘图程序\n```\n#目录\njs\njs/app\n\n#文件\njs/app/point.js\njs/app/line.js\njs/app/rect.js\njs/app/arc.js\n\njs/require.min.js\njs/main.js\njs/utils.js\n\nindex.html\n```\njs/main.js\n```\nrequire.config({\n    baseUrl: 'js/lib',\n    paths: {\n        app: '../app'\n    }\n})\n```\nindex.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>简易绘图程序</title>\n    <style type=\"text/css\">\n        canvas {\n            background-color: #ECECEC;\n            cursor: default; /** 鼠标设置成默认的指针 */\n        }\n        .tool-bar {\n            margin-bottom: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"tool-bar\">\n        <button id=\"btn-line\">画直线</button>\n        <button id=\"btn-rect\">画矩形</button>\n        <button id=\"btn-oval\">画圆形</button>\n        <button id=\"btn-clear\">清空画布</button>\n        <span id=\"hint\" style=\"color: red;\">当前操作：画直线</span>\n    </div>\n    <canvas id=\"canvas\" width=\"800\" height=\"600\"></canvas>\n    <script type=\"text/javascript\" src=\"js/require.min.js\" data-main=\"js/main\"></script>\n    <script type=\"text/javascript\">\n        require(['app/point', 'app/line', 'app/rect', 'app/arc', 'app/utils'], \n            function(Point, Line, Rect, Arc, Utils) {\n\n            var canvas = document.getElementById(\"canvas\");\n            var context = canvas.getContext('2d');\n            var canvasRect = canvas.getBoundingClientRect(); //得到canvas所在的矩形\n            canvas.addEventListener('mousedown', handleMouseDown);\n            canvas.addEventListener('mousemove', handleMouseMove);\n            canvas.addEventListener('mouseup', handleMouseUp);\n            bindClick('btn-clear', menuBtnClicked);\n            bindClick('btn-line', menuBtnClicked);\n            bindClick('btn-rect', menuBtnClicked);\n            bindClick('btn-oval', menuBtnClicked);\n\n            var mouseDown = false; \n            var selection = 1; // 0, 1, 2分别代表画直线、画矩形、画圆\n\n            var downPoint = new Point(0, 0),  \n                movePoint = new Point(0, 0), \n                upPoint = new Point(0, 0);\n            var line;\n            var rect;\n            var arc;\n\n            /** 处理鼠标按下的事件 */\n            function handleMouseDown(event) {\n                downPoint.x = event.clientX - canvasRect.left;\n                downPoint.y = event.clientY - canvasRect.top;\n                if(selection === 0) {  \n                    line = new Line(downPoint, downPoint);\n                    line.startPoint = downPoint;\n                } else if(selection === 1) {\n                    rect = new Rect(new Point(downPoint.x, downPoint.y), 0, 0);\n                } else if(selection === 2) {\n                    arc = new Arc(new Point(downPoint.x, downPoint.y), 0);\n                }\n                mouseDown = true;\n            }\n\n            /** 处理鼠标移动的事件 */\n            function handleMouseMove(event) {\n                movePoint.x = event.clientX - canvasRect.left;\n                movePoint.y = event.clientY - canvasRect.top;\n                if(movePoint.x == downPoint.x && movePoint.y == downPoint.y) {\n                    return ;\n                }\n                if(movePoint.x == upPoint.x && movePoint.y == upPoint.y) {\n                    return ;\n                }\n                if(mouseDown) {\n                    clearCanvas();\n                    if(selection == 0) {\n                        line.endPoint = movePoint;  \n                        Utils.drawLine(context, line);\n                    } else if(selection == 1) {\n                        rect.width = movePoint.x - downPoint.x;\n                        rect.height = movePoint.y - downPoint.y;\n                        Utils.drawRect(context, rect);\n                    } else if(selection == 2) {\n                        var x = movePoint.x - downPoint.x;\n                        var y = movePoint.y - downPoint.y;\n                        arc.radius = x > y ? (y / 2) : (x / 2);\n                        if(arc.radius < 0) { \n                            arc.radius = -arc.radius;\n                        }\n                        arc.startPoint.x = downPoint.x + arc.radius;\n                        arc.startPoint.y = downPoint.y + arc.radius;\n                        Utils.drawArc(context, arc);\n                    }\n                    Utils.drawHistory(context);\n                }\n            }\n\n            /** 处理鼠标抬起的事件 */\n            function handleMouseUp(event) {\n                upPoint.x = event.clientX - canvasRect.left;\n                upPoint.y = event.clientY - canvasRect.top;\n\n                if(mouseDown) {\n                    mouseDown = false;\n                    if(selection == 0) {\n                        line.endPoint = upPoint;    \n                        if(!downPoint.equals(upPoint)) {\n                            Utils.addHistory(new Line(new Point(downPoint.x, downPoint.y), \n                                new Point(upPoint.x, upPoint.y)));  \n                        }   \n                    } else if(selection == 1) {\n                        rect.width = upPoint.x - downPoint.x;\n                        rect.height = upPoint.y - downPoint.y;\n                        Utils.addHistory(new Rect(new Point(downPoint.x, downPoint.y), rect.width, rect.height));\n                    } else if(selection == 2) {\n                        Utils.addHistory(new Arc(new Point(arc.startPoint.x, arc.startPoint.y), arc.radius));\n                    }\n                    clearCanvas();\n                    Utils.drawHistory(context);\n                }\n            }\n\n            /** 清空画布 */\n            function clearCanvas() {\n                context.clearRect(0, 0, canvas.width, canvas.height);\n            }\n\n            /** 菜单按钮的点击事件处理 */\n            function menuBtnClicked(event) {\n                var domID = event.srcElement.id;\n                if(domID === 'btn-clear') {\n                    clearCanvas();\n                    Utils.clearHistory();\n                } else if(domID == 'btn-line') {\n                    selection = 0;\n                    showHint('当前操作：画直线');\n                } else if(domID == 'btn-rect') {\n                    selection = 1;\n                    showHint('当前操作：画矩形');\n                } else if(domID == 'btn-oval') {\n                    selection = 2;\n                    showHint('当前操作：画圆形');\n                }\n            }\n\n            function showHint(msg) {\n                document.getElementById('hint').innerHTML = msg;\n            }\n\n            /** 给对应id的dom元素绑定点击事件 */\n            function bindClick(domID, handler) {\n                document.getElementById(domID).addEventListener('click', handler);\n            }\n        });\n    </script>\n</body>\n</html>\n```\n","tags":["requirejs"]},{"title":"[docker] docker mysql5.6","url":"/2019/01/16//articles/2019/01/16/1547605243000.html/","content":"<a href=\"https://blog.csdn.net/qq_27565769/article/details/80731271\" target=\"_blank\">Docker 中 MySQL 数据的导入导出</a>\n<a href=\"https://www.cnblogs.com/yuwensong/p/3955834.html\" target=\"_blank\">mysql导入导出sql文件</a>\n<a href=\"https://www.cnblogs.com/gaogaoxingxing/p/6066533.html\" target=\"_blank\">mysql source命令超大文件导入方法总结</a>\n```\n1.拉取镜像并设置密码\ndocker run -p 3306:3306 --name mymysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql5.6\ndocker ps\n2.导入docker数据库\n(1)容器创建备份路径\ndocker exec mymysql mkdir /opt/sql_bak/\n(2)主机复制到容器\ndocker cp  <sql文件绝对路径> mymysql:/opt/sql_bak/test.sql\n(3)进入容器的mysql\ndocker exec -it mymysql mysql -uroot -p123456\n#mysql命令行\ncreate database test;\nuse test;\nsource /opt/sql_bak/test.sql\n```","tags":["docker"]},{"title":"[cocos2d] quick-cocos2d-x demos","url":"/2019/01/13//articles/2019/01/13/1547346253000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/doctording/cocos2dx_lua_snake\" target=\"_blank\">cocos2d-x lua 贪吃蛇完整项目</a>\n<a href=\"https://gitee.com/mcyHome/Snake\" target=\"_blank\">贪吃蛇1</a>\n<a href=\"https://github.com/ls9527/tsc\" target=\"_blank\">贪吃蛇2</a>\n<a href=\"https://gitee.com/linuxing3/cars01\" target=\"_blank\">贪吃蛇-场景</a>\n<a href=\"https://gitee.com/linuxing3/cars05\" target=\"_blank\">贪吃蛇-运动</a>\n\n<a href=\"http://xianwx.xyz/2018/08/29/quick-cocos-shader-share/\" target=\"_blank\">blog|quick_cocos_shader_demo</a>\n<a href=\"https://gitee.com/xianwx/quick_cocos_shader_demo\" target=\"_blank\">github|quick_cocos_shader_demo</a>\n<a href=\"https://gitee.com/blackcushion/baozi.git\" target=\"_blank\">quick-cocos2d-x 模仿愤怒的包子</a>\n<a href=\"https://github.com/hanxi/quick-cocos2d-x-2048\" target=\"_blank\">2048</a>\n<a href=\"https://github.com/booirror/MoonWarriors-Quick\" target=\"_blank\">月球战士</a>\n<a href=\"https://gitee.com/roll1987/cocos2dx-lua-simple-plane-game.git\" target=\"_blank\">飞机战斗|开发环境：Cocos2d-x 3.2, Lua 5.1, Cocos Code IDE 1.0</a>\n\n<a href=\"https://gitee.com/yuanwu123/mario/blob/master/Mario\" target=\"_blank\">马里奥</a>\n<a href=\"https://gitee.com/qink1564/MummyMaze\" target=\"_blank\">复刻PopCap的游戏MummyMaze，用于学习quick-Cocos2d</a>\n<a href=\"https://gitee.com/362484032/mj_client\" target=\"_blank\">麻将</a>\n<a href=\"https://gitee.com/fuatnow/hexlink\" target=\"_blank\">使用cocos2d-lua编写六边形连线游戏</a>\n<a href=\"https://gitee.com/caohongtao/digger\" target=\"_blank\">基于Quick-Cocos2d-x的鼹鼠挖地游戏，包含玩法介绍</a>\n<a href=\"https://gitee.com/uhziel/ccz_csdn\" target=\"_blank\">曹操传 quick-cocos2dx-lua 3.3 复刻</a>\n<a href=\"https://gitee.com/linjinxin_scau/PlantsVsZombies\" target=\"_blank\">植物大战僵尸</a>\n<a href=\"https://github.com/ls9527/ddz\" target=\"_blank\">斗地主</a>\n<a href=\"https://github.com/philianbit/QuickCocos-maze\" target=\"_blank\">走迷宫</a>","tags":["cocos2d"]},{"title":"[electronjs] electronjs桌面应用开发","url":"/2019/01/13//articles/2019/01/13/1547346252000.html/","content":"<a href=\"http://electronjs.org/\" target=\"_blank\">官网</a>\n<a href=\"https://segmentfault.com/a/1190000014209821\" target=\"_blank\">【Electron实战开发】HelloWorld入门实战</a>\n<a href=\"https://www.cnblogs.com/GoodHelper/p/8527523.html\" target=\"_blank\">spring boot + vue + element-ui全栈开发入门——基于Electron桌面应用开发</a>\n<a href=\"https://www.jianshu.com/p/3b295544c78e\" target=\"_blank\">简书|用Electron创建跨平台应用</a>\n<a href=\"https://blog.csdn.net/qq_33203555/article/details/82898458\" target=\"_blank\">electron快速上手</a>\n```\ngit clone https://github.com/electron/electron-quick-start.git\ncd electron-quick-start\nnpm install\nnpm install electron-winstaller --save-dev\nnpm install electron-packager -g\n\npackage.json\n\"scripts\": {\n    \"start\": \"electron .\",\n    \"build\": \"electron-packager . bobo --out ../electron --ignore=node_modules\"\n}\nnpm run build\nvim build.js\n```\n```\nvar electronInstaller = require('electron-winstaller');\nvar path = require(\"path\");\n\nresultPromise = electronInstaller.createWindowsInstaller({\nappDirectory: path.join('../electron/bobo-win32-x64'), //刚才生成打包文件的路径\noutputDirectory: path.join('./tmp/build/installer64'), //输出路径\nauthors: 'My App Inc.',\nexe: 'bobo.exe', //在appDirectory寻找exe的名字\nsetupMsi:'bobo.msi',\nnoMsi:true\n});\nresultPromise.then(() => console.log(\"It worked!\"), (e) => console.log(`No dice: ${e.message}`));\n```\n\n```\nnode build.js\n#桌面快捷方式\nnpm i electron-squirrel-startup --save\n#在main.js添加如下代码 \nif(require('electron-squirrel-startup')) return; \nnpm run packager\nnode build.js\n```\n","tags":["electronjs"]},{"title":"[springboot] springboot+vue","url":"/2019/01/13//articles/2019/01/13/1547346251000.html/","content":"<a href=\"https://www.cnblogs.com/wlovet/p/8317282.html\" target=\"_blank\">Vue+SpringBoot+Mybatis的简单员工管理项目</a>\n<a href=\"https://github.com/boylegu/SpringBoot-vue\" target=\"_blank\">github</a>\n<a href=\"https://blog.csdn.net/u014098584/article/details/78912378/\" target=\"_blank\">spring boot整合vue项目</a>\n\n<a href=\"https://www.jianshu.com/p/e1c0cbbfb599\" target=\"_blank\">Vue相关开源项目库汇总(史上最全)</a>\n<a href=\"https://code.visualstudio.com/\" target=\"_blank\">visual studio code</a>\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\ncnpm install -g vue-cli\nvue init webpack javalsj-vue\ncd javalsj-vue\ncnpm install\nnpm run dev\n```\n","tags":["springboot"]},{"title":"[vue] vue专栏","url":"/2019/01/13//articles/2019/01/13/1547346250000.html/","content":"<a href=\"https://blog.csdn.net/qq_42221334/column/info/27230\" target=\"_blank\">vue专栏</a>\n<a href=\"https://blog.csdn.net/aaronzzq/article/details/80936708\" target=\"_blank\">Vue相关开源项目库汇总(史上最全)</a>\n\n","tags":["vue"]},{"title":"[docker] docker专栏","url":"/2019/01/13//articles/2019/01/13/1547346249000.html/","content":"<a href=\"http://www.runoob.com/docker/windows-docker-install.html\" target=\"_blank\">windows安装docker</a>\n<a href=\"https://blog.csdn.net/Gamer_gyt/column/info/13159\" target=\"_blank\">Docker专栏</a>\n","tags":["docker"]},{"title":"[hexo] black-blue主题","url":"/2019/01/13//articles/2019/01/13/1547346248000.html/","content":"<a href=\"https://geeksblog.cc/hexo-theme.html\" target=\"_blank\">业余文艺架构师|Hexo自用黑色主题</a>\n","tags":["hexo"]},{"title":"[微信小游戏] 300多套微信小游戏集合","url":"/2019/01/13//articles/2019/01/13/1547346247000.html/","content":"<a href=\"https://pan.baidu.com/s/1nwhUgid#list/path=%2F\" target=\"_blank\">度娘</a>","tags":["微信小游戏"]},{"title":"[egret] Egret白鹭H5小游戏开发入门","url":"/2019/01/13//articles/2019/01/13/1547340797000.html/","content":"<a href=\"https://www.cnblogs.com/chengguanhui/p/5800240.html\" target=\"_blank\">Egret白鹭H5小游戏开发入门</a>","tags":["egret"]},{"title":"[h5game] h5游戏开发","url":"/2019/01/13//articles/2019/01/13/1547340797000.html/","content":"<a href=\"https://aotu.io/index.html\" target=\"_blank\">凹凸实验室</a>\n<a href=\"https://blog.csdn.net/yorhomwang/article/category/1192215\" target=\"_blank\">Yorhom's Game Box的游戏开发</a>\n<a href=\"https://fwon.github.io/escape\" target=\"_blank\">基于canvas的粒子逃脱小游戏</a>\n<a href=\"https://github.com/fwon/Sinuous\" target=\"_blank\">源码</a>\n<a href=\"https://cloud.tencent.com/developer/information/h5%E6%B8%B8%E6%88%8Fjs%E6%BA%90%E7%A0%81\" target=\"_blank\">腾讯云社区|h5游戏js源码</a>\n<a href=\"https://cloud.tencent.com/developer/article/1074023\" target=\"_blank\">JS+canvas实现人机大战之五子棋</a>\n\n<a href=\"http://www.phaser.io/download/stable\" target=\"_blank\">phaser</a>\n<a href=\"http://phaser.io/examples\" target=\"_blank\">phaser|examples</a>\n<a href=\"https://github.com/zhangrj/Snake_Game\" target=\"_blank\">phaser|Snake_Game</a>\n<a href=\"https://blog.csdn.net/jessicaiu/article/details/83057619\" target=\"_blank\">使用Phaser开发你的第一个H5游戏</a>\n<a href=\"https://gitee.com/xwintop/wxGameRank\" target=\"_blank\">微信小游戏子域排行榜系统cocos示例程序</a>\n\n完整的上线版微信小游戏（大鸟撞小鸟）示例程序源码\n<a href=\"https://gitee.com/xwintop/watchout\" target=\"_blank\">gitee地址</a>\n<a href=\"https://github.com/864381832/watchout\" target=\"_blank\">GitHub地址</a>\n\n<a href=\"http://programmer.ischoolbar.com/index.php/article/article/id/124.html\" target=\"_blank\">收费|450多款H5小游戏源码之微信H5小游戏源码大集合持续更新中</a>\n","tags":["h5game"]},{"title":"[h5] h5视频播放","url":"/2019/01/13//articles/2019/01/13/1547340796000.html/","content":"<a href=\"https://segmentfault.com/a/1190000010377156\" target=\"_blank\">H5 视频播放解决方案</a>\n<a href=\"https://segmentfault.com/a/1190000006461476\" target=\"_blank\">H5打造属于自己的视频播放器（HTML篇）</a>","tags":["h5"]},{"title":"[shell] shell","url":"/2019/01/13//articles/2019/01/13/1547340795000.html/","content":"<a href=\"http://www.runoob.com/linux/linux-shell-process-control.html\" target=\"_blank\">Shell 流程控制</a>\n","tags":["shell"]},{"title":"[ubuntu] ubuntu18.04配置及美化","url":"/2019/01/13//articles/2019/01/13/1547340794000.html/","content":"<a href=\"https://blog.csdn.net/ice__snow/article/details/80152068\" target=\"_blank\">Ubuntu 18.04配置及美化</a>","tags":["ubuntu"]},{"title":"[springboot] springboot热部署+启动","url":"/2019/01/10//articles/2019/01/10/1547128210000.html/","content":"<a href=\"https://www.cnblogs.com/lspz/p/6832358.html\" target=\"_blank\">参考</a>\nspringboot热部署\n```\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-devtools</artifactId>\n        <optional>true</optional>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>springloaded</artifactId>\n        <version>1.2.5.RELEASE</version>\n    </dependency>\n</dependencies>\nmvn spring-boot:run\n```\n<a href=\"https://blog.csdn.net/qq_32923745/article/details/78270835\" target=\"_blank\">将springboot web应用打包为war</a>\n```\n#(1)方式一\n<packaging>war</packaging>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n        <exclusions>\n            <exclusion>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-starter-tomcat</artifactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n    <!-- 移除之后会报错，加入下面的依赖 -->\n    <dependency>\n        <groupId>javax.servlet</groupId>\n        <artifactId>javax.servlet-api</artifactId>\n        <scope>provided</scope>\n    </dependency>\n</dependencies>\n\n#(2)方式二\n<packaging>war</packaging>\n<dependencies>\n    <dependency>\n    \t<groupId>org.springframework.boot</groupId>\n    \t<artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n    \t<groupId>org.springframework.boot</groupId>\n    \t<artifactId>spring-boot-starter-tomcat</artifactId>\n    \t<scope>provided</scope>\n    </dependency>\n</dependencies>\n\n#启动类\n@SpringBootApplication\npublic class Application extends SpringBootServletInitializer{\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\n        return builder.sources(this.getClass());\n    }\n}\nmvn clean package -Dmaven.test.skip=true\n```\n<a href=\"https://www.cnblogs.com/honger/p/6886017.html\" target=\"_blank\">将springboot web应用打包为jar</a>\n```\n#application.properties配置\nserver.servlet.context-path=/\n<build>\n    <!-- (实际上设置properties美用)理论上为properties文件中server.servlet.context-path的值 -->\n    <!-- <finalName>jar包名</finalName> -->\n\t<plugins>\n\t\t<plugin>\n\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t<configuration>\n\t\t\t\t<source>1.8</source>\n\t\t\t\t<target>1.8</target>\n\t\t\t</configuration>\n\t\t</plugin>\n\t\t<plugin>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t<configuration>\n\t\t\t\t<mainClass>启动类全称</mainClass>\n\t\t\t</configuration>\n\t\t\t<executions>\n\t\t\t\t<execution>\n\t\t\t\t\t<goals>\n\t\t\t\t\t\t<goal>repackage</goal>\n\t\t\t\t\t</goals>\n\t\t\t\t</execution>\n\t\t\t</executions>\n\t\t</plugin>\n\t</plugins>\n</build>\nclean package -Dmaven.test.skip=true\n\n<!--如果父项目不是spring-boot-starter-parent，需要显示指定execution-->\n<build>\n    <!-- 默认为properties文件中server.servlet.context-path的值 -->\n    <!-- <finalName>定制</finalName> -->\n\t<plugins>\n\t\t<plugin>\n\t\t    <groupId>org.springframework.boot</groupId>\n\t\t    <artifactId>spring-boot-maven-plugin</artifactId>\n\t\t    <executions>\n\t\t        <execution>\n\t\t            <goals>\n\t\t                <goal>repackage</goal>\n\t\t            </goals>\n\t\t        </execution>\n\t\t    </executions>\n\t\t</plugin>\n\t</plugins>\n</build>\n```\n启动jar包命令\n```\njava -jar web.jar\n```\n","tags":["springboot"]},{"title":"[spring] springjpa技巧","url":"/2019/01/10//articles/2019/01/10/1547085461000.html/","content":"<a href=\"https://blog.csdn.net/qq_34197553/article/details/77718925\" target=\"_blank\">idea下自动生成Hibernate映射文件以及实体类</a>\nhibernate.cfg.xml\n```\n<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE hibernate-configuration PUBLIC\n        \"-//Hibernate/Hibernate Configuration DTD//EN\"\n        \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\">\n<hibernate-configuration>\n  <session-factory>\n    <!--数据库连接url配置-->\n    <property name=\"connection.url\">jdbc:mysql://127.0.0.1:3306/db?autoReconnect=true&zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=utf-8&useSSL=false</property>\n    <!--数据库驱动配置-->\n    <property name=\"connection.driver_class\">com.mysql.jdbc.Driver</property>\n    <!--数据库用户名配置-->\n    <property name=\"connection.username\">root</property>\n    <!--数据库密码配置-->\n    <property name=\"connection.password\">root</property>\n  </session-factory>\n</hibernate-configuration>\n```","tags":["spring"]},{"title":"[pygame] pygame","url":"/2019/01/10//articles/2019/01/10/1547085460000.html/","content":"<a href=\"https://blog.csdn.net/u010665216/article/details/79086160\" target=\"_blank\">csdn|手把手教你用python写游戏</a>\n<a href=\"https://github.com/shawshany/Python_game\" target=\"_blank\">github|手把手教你用python写游戏</a>\n\n<a href=\"https://www.cnblogs.com/SRL-Southern/tag/pygame/\" target=\"_blank\">Python写游戏，pygame入门(1) ~ (8)</a>\n<a href=\"https://www.cnblogs.com/SRL-Southern/p/4945090.html\" target=\"_blank\">pygame入门(7)：碰撞检测</a>\n```\npygame入门(1)：pygame的安装\npygame入门(2)：游戏中的事件和显示\npygame入门(3)：字体模块、事件显示和错误处理\npygame入门(4)：获取鼠标的位置及运动\npygame入门(5)：面向对象的游戏设计\npygame入门(6)：控制大量的对象\npygame入门(7)：碰撞检测\npygame入门(8)：按钮和游戏结束\n```\n","tags":["pygame"]},{"title":"[springboot] springboot下载excel","url":"/2019/01/10//articles/2019/01/10/1547085458000.html/","content":"<a href=\"https://blog.csdn.net/hcjsjqjssm/article/details/80468598\" target=\"_blank\">springboot下载excel</a>","tags":["springboot"]},{"title":"[python] pyton2.7安装whl","url":"/2019/01/10//articles/2019/01/10/1547085457000.html/","content":"pyton2.7安装whl\n```\n#1.安装setuptools\nhttps://pypi.org/project/setuptools/#files\n#2.安装pip\nhttps://pypi.org/project/pip/#files\n#3.使用pip安装whl\nhttps://www.lfd.uci.edu/~gohlke/pythonlibs/#pygame\n```\n安装命令\n```\npython -m pip install --upgrade pip\npython -m pip install --user pygame-1.9.4-cp27-cp27m-win_amd64.whl\n```","tags":["python"]},{"title":"[layui] layui技巧","url":"/2019/01/10//articles/2019/01/10/1547085456000.html/","content":"<a href=\"\" target=\"_blank\"></a>\nlayui table表格框溢出时不会自动关闭解决方法\n```\n<style>\n.layui-table-tips-main,.layui-table-tips-c{display:none}\n</style>\n```\nlayui 令模态框的选项溢出框体时，选项可见\n```\n<style>\n.layui-layer-page .layui-layer-content,#showLayui{overflow: visible;}\n</style>\n```\nlayui 令模态框的选项溢出框体时，横向固定，竖直方向可滚动\n```\n.layui-layer-page .layui-layer-content,#showLayui{\n  overflow-x: hidden;\n  overflow-y: scroll;\n}\n```\nlayui select动态拼接option\n```\n$(\"#selectedId\").empty();\n$(\"#selectedId\").append('<option value=\"\" selected=\"selected\">请选择</option>');\n$.ajax({\n    url: url,\n    dataType: 'json',\n    type: 'post',\n    async: false,\n    data: {},\n    complete: function (XHR, TS) {\n        var returnObj = eval('(' + XHR.responseText + ')');\n        $.each(returnObj, function (i, obj) {\n            $(\"#selectedId\").append('<option value=\"' + obj.id + '\">' + obj.value + '</option>');\n        });\n    }\n});\n```\nlayui select手动选中\n```\nvar data = {\n    id:1,\n    value:\"123\"\n};\n$(\"#targetId\").val(data.value);\n$(\"#targetId\").siblings(\"div.layui-form-select\").find('dl dd[lay-value=' + data.id + ']').click();\n```\n只读+灰色\n```\nvar data = {\n    id:1,\n    value:\"123\"\n};\n$(\"#targetId\").val(data.value);\n$(\"#targetId\").attr(\"readonly\",\"true\");\n$(\"#targetId\").css(\"color\",\"gray\");\n```\n<a href=\"https://blog.csdn.net/weixin_42457316/article/details/81298069\" target=\"_blank\">layui省市区联动</a>\nlayui input框校验\n```\n<input\nid=\"\"\nname=\"\"\nclass=\"layui-input\"\ntype=\"text\"\nplaceholder=\"\"\nonblur=\"check(this)\"\nonkeyup=\"this.value=this.value.replace(/[^0-9.]/g,'')\"\nonafterpaste=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'0')}else{this.value=this.value.replace(/\\D/g,'')}\"\noninput=\"if(value.length>5)value=value.slice(0,5)\"\nmaxlength=\"50\"\nstyle=\"text-transform:uppercase;\">\n<script>\nfunction check(e) {\n    var re = /^\\d+(?=\\.{0,1}\\d+$|$)/\n    if (e.value != \"\") {\n        if (!re.test(e.value)) {\n            alert(\"请输入正确的数字\");\n            e.value = \"\";\n            e.focus();\n        }\n    }\n}\n</script>\n```\njq监听属性变化\n```\n$(\"#divId\").bind(\"input propertychange\",function(){\n\tvar str = $(\"#divId\").val();\n});\n```\nlayui模态框形成和销毁\n```\nvar showContent = $(\"#modelContentId\");\nlayer.open({\n  content: '测试回调',\n  success: function(layero, index){\n    console.log(layero, index);\n  }\n  yes: function(index, layero){\n    //如果设定了yes回调，需进行手工关闭\n    layer.close(index);\n  },\n  end: function(){\n    $('#modelContentId').html(showContent);\n  }\n});\n```\n","tags":["layui"]},{"title":"[thymeleaf] thymeleaf技巧","url":"/2019/01/10//articles/2019/01/10/1547085455000.html/","content":"<a href=\"https://blog.csdn.net/skyupward/article/details/55003150\" target=\"_blank\">thymeleaf技巧</a>\n<a href=\"https://www.cnblogs.com/vinphy/p/4674247.html\" target=\"_blank\">thymeleaf 学习笔记-基础篇(中文教程)</a>\n","tags":["thymeleaf"]},{"title":"[api] 天气接口","url":"/2019/01/10//articles/2019/01/10/1547085454000.html/","content":"<a href=\"https://www.cnblogs.com/danyueweb/p/3521973.html\" target=\"_blank\">天气预报接口api(中国天气网)</a>\n<a href=\"http://www.nohacks.cn/post/8.html\" target=\"_blank\">天气API接口大全（nohacks.cn 收集整理）</a>\n<a href=\"https://www.cnblogs.com/dwb91/p/6429434.html\">java 客户端发起http请求</a>\n<a href=\"https://www.cnblogs.com/wangshuo1/p/5583229.html\">中国天气网-天气预报接口api</a>\n```\n#只能获取当天天气，返回json格式\nhttp://www.weather.com.cn/data/sk/101110101.html\n{\n    \"weatherinfo\": {\n        \"city\": \"西安\",\n        \"cityid\": \"101110101\",\n        \"temp\": \"23.3\",\n        \"WD\": \"西南风\",\n        \"WS\": \"小于3级\",\n        \"SD\": \"52%\",\n        \"AP\": \"962.7hPa\",\n        \"njd\": \"暂无实况\",\n        \"WSE\": \"<3\",\n        \"time\": \"18:00\",\n        \"sm\": \"1.2\",\n        \"isRadar\": \"1\",\n        \"Radar\": \"JC_RADAR_AZ9290_JB\"\n    }\n}\n```\n<a href=\"https://www.cnblogs.com/kellen451/p/7130841.html\" target=\"_blank\">[转]真正的中国天气api接口xml，json</a>\n<a href=\"http://flash.weather.com.cn/wmaps/xml/zhuhai.xml\" target=\"_blank\">xml天气接口</a>\n<a href=\"https://blog.csdn.net/w690333243/article/details/83447564\" target=\"_blank\"></a>\n<a href=\"http://www.heweather.com/documents/api/s6/weather-now\" target=\"_blank\">综合考虑，小编使用的是和风天气的api接口，免费，天气指标多，日免费次数1000次</a>\n\nsojson\n```\nsojson旧天气api\nhttps://www.sojson.com/api/weather.html\nsojson json+xml+java\nhttps://www.sojson.com/blog/234.html\n\nsojson 新接口\nhttps://www.sojson.com/blog/305.html\n#city.json文件\nhttp://cdn.sojson.com/_city.json\n#接口\n\"http://t.weather.sojson.com/api/weather/city/\"+city_code;\n```\niframe天气预报\n```\ntianqiapi.com\nhttp://www.tianqiapi.com/\n天气网\nhttp://www.tianqi.com/dingzhi/\n```\n<a href=\"http://www.kucoa.com/?t/10.html\" target=\"_blank\">js获取当前网络IP以及根据IP得到当前所在城市及天气</a>\n```\nip地址查询接口\n请求方式：GET/POST\n请求地址：https://bird.ioliu.cn/ip\n返回值类型：json/jsonp/xml\n\nweather天气查询接口\n请求方式：GET\n请求地址：https://bird.ioliu.cn/weather\n返回值类型：json/jsonp\n```\n<a href=\"https://blog.csdn.net/Cryhelyxx/article/details/40862101\" target=\"_blank\">java 根据IP地址获取地理位置</a>\n","tags":["api"]},{"title":"[python] python游戏开发","url":"/2019/01/10//articles/2019/01/10/1547085453000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/msxh/p/5044938.html\" target=\"_blank\">【python游戏编程之旅】第九篇---嗷大喵快跑小游戏开发实例</a>\n```\nhttps://github.com/XINCGer/catRunFast\n```\n<a href=\"https://www.jianshu.com/p/8ddeb797d1be\" target=\"_blank\">实验楼|用Python开发你的第一款游戏（开源项目合集）</a>\n<a href=\"https://github.com/tasdikrahman/spaceShooter\" target=\"_blank\">1、使用pygame制作太空射击游戏</a>\n<a href=\"https://www.shiyanlou.com/courses/1043\" target=\"_blank\">2、Python3 实现推理游戏Bagels</a>\n<a href=\"https://inventwithpython.com/dodger.zip?27f655\" target=\"_blank\">3、Dodger</a>\n<a href=\"https://inventwithpython.com/memorypuzzle.py\" target=\"_blank\">4、记忆迷宫</a>\n<a href=\"https://inventwithpython.com/slidepuzzle.py\" target=\"_blank\">5、滑动拼图</a>\n<a href=\"https://inventwithpython.com/wormy.py\" target=\"_blank\">6、贪吃蛇</a>\n<a href=\"https://inventwithpython.com/tetromino.py\" target=\"_blank\">7、俄罗斯方块</a>\n<a href=\"https://inventwithpython.com/starpusher.zip?27f655\" target=\"_blank\">8、推箱子</a>\n<a href=\"https://inventwithpython.com/gemgem.zip?27f655\" target=\"_blank\">9、消消乐</a>\n```\n2048\nhttp://git.shiyanlou.com/littlemonkey/shiyanlou_cs368/src/master/2048.py\nhttps://www.cnblogs.com/snail-up/p/4682370.html\nhttps://www.cnblogs.com/mrchige/p/6389971.html\nhttp://gabrielecirulli.github.io/2048\n```\nPygame - Python游戏编程入门(1)\n<a href=\"https://www.cnblogs.com/wuzhanpeng/p/4264267.html\" target=\"_blank\">战斗机</a>\n<a href=\"https://github.com/Ctipsy/free-python-games/tree/master/freegames\" target=\"_blank\">python游戏demos</a>\n<a href=\"https://blog.csdn.net/buptlrw/article/details/41924849\" target=\"_blank\">猜数字、猜词语、谁是卧底</a>\n\n","tags":["python"]},{"title":"[pygame] demos","url":"/2019/01/10//articles/2019/01/10/1547085453000.html/","content":"<a href=\"https://github.com/topics/pygame\" target=\"_blank\">github|pygame</a>\n<a href=\"https://www.pygame.org/tags/all\" target=\"_blank\">python游戏demos</a>\n<a href=\"https://github.com/Ctipsy/free-python-games/tree/master/freegames\" target=\"_blank\">免费python游戏</a>\n<a href=\"https://www.cnblogs.com/msxh/p/5044938.html\" target=\"_blank\">【python游戏编程之旅】第九篇---嗷大喵快跑小游戏开发实例</a>\n<a href=\"https://github.com/XINCGer/catRunFast\" target=\"_blank\">嗷大喵快跑</a>\n\n<a href=\"https://www.jianshu.com/p/8ddeb797d1be\" target=\"_blank\">实验楼|用Python开发你的第一款游戏（开源项目合集）</a>\n<a href=\"https://github.com/tasdikrahman/spaceShooter\" target=\"_blank\">1、使用pygame制作太空射击游戏</a>\n<a href=\"https://www.shiyanlou.com/courses/1043\" target=\"_blank\">2、Python3 实现推理游戏Bagels</a>\n<a href=\"https://inventwithpython.com/dodger.zip\" target=\"_blank\">3、Dodger</a>\n<a href=\"https://inventwithpython.com/memorypuzzle.py\" target=\"_blank\">4、记忆迷宫</a>\n<a href=\"https://inventwithpython.com/slidepuzzle.py\" target=\"_blank\">5、滑动拼图</a>\n<a href=\"https://inventwithpython.com/wormy.py\" target=\"_blank\">6、贪吃蛇</a>\n<a href=\"https://inventwithpython.com/tetromino.py\" target=\"_blank\">7、俄罗斯方块</a>\n<a href=\"https://inventwithpython.com/starpusher.zip\" target=\"_blank\">8、推箱子</a>\n<a href=\"https://inventwithpython.com/gemgem.zip\" target=\"_blank\">9、消消乐</a>\n\n2048\n<a href=\"http://git.shiyanlou.com/littlemonkey/shiyanlou_cs368/src/master/2048.py\" target=\"_blank\">(1)2048</a>\n<a href=\"https://www.cnblogs.com/snail-up/p/4682370.html\" target=\"_blank\">(2)2048</a>\n<a href=\"https://www.cnblogs.com/mrchige/p/6389971.html\" target=\"_blank\">(3)2048</a>\n<a href=\"http://gabrielecirulli.github.io/2048\" target=\"_blank\">(4)2048</a>\n\nPygame - Python游戏编程入门(1)\n<a href=\"https://www.cnblogs.com/wuzhanpeng/p/4264267.html\" target=\"_blank\">战斗机</a>\n<a href=\"https://blog.csdn.net/buptlrw/article/details/41924849\" target=\"_blank\">猜数字、猜词语、谁是卧底</a>\n<a href=\"https://github.com/triaquae/jerkoff\" target=\"_blank\">打飞机小游戏</a>\n<a href=\"https://www.cnblogs.com/wushank/p/5326160.html\" target=\"_blank\">python之在线PK游戏（第六天）</a>\n\n经典游戏\n<a href=\"https://www.cnblogs.com/gl1573/p/10319295.html\" target=\"_blank\">五子棋之人机对战</a>\n<a href=\"https://www.cnblogs.com/gl1573/p/9590370.html\" target=\"_blank\">贪吃蛇</a>\n<a href=\"https://www.cnblogs.com/gl1573/p/10213812.html\" target=\"_blank\">俄罗斯方块</a>\n<a href=\"https://www.cnblogs.com/gl1573/p/9616584.html\" target=\"_blank\">扫雷（附源码）</a>\n<a href=\"https://www.cnblogs.com/gl1573/p/9571560.html\" target=\"_blank\">测试打字速度</a>\n<a href=\"http://www.cnblogs.com/coderzh/archive/2008/07/28/1255061.html\" target=\"_blank\">CoderZh首款Python联机对战游戏</a>\n<a href=\"http://files.cnblogs.com/coderzh/NancyTetris.rar\" target=\"_blank\">CoderZh首款Python联机对战游戏|NancyTetris.rar</a>\n<a href=\"https://www.pygame.org/project/585/\" target=\"_blank\">地牢探索游戏</a>\n\nFlappy\n<a href=\"http://www.pygame.org/project/3436/5499\" target=\"_blank\">Flappy Block - 1.0</a>\n<a href=\"https://www.cnblogs.com/yan1314/p/8904935.html\" target=\"_blank\">Python3 FlappyBird</a>\n<a href=\"https://github.com/sourabhv/FlapPyBird\" target=\"_blank\">FlapPyBird</a>\n\n<a href=\"https://blog.csdn.net/yorhomwang/article/details/50879487\" target=\"_blank\">csdn|接水果小游戏</a>\n<a href=\"https://github.com/yuehaowang/pylash_engine/tree/master/examples/get_fruits\" target=\"_blank\">github|接水果小游戏</a>\n\n<a href=\"https://github.com/search?l=Python&q=%E6%B8%B8%E6%88%8F&type=Repositories\" target=\"_blank\">github|python游戏</a>\n<a href=\"https://github.com/mx0c/super-mario-python.git\" target=\"_blank\">python和pygame中的超级马里奥</a>\n<a href=\"https://github.com/jatinmandav/Gaming-in-Python\" target=\"_blank\">Gaming-in-Python</a>\n<a href=\"https://github.com/JnyJny/GameOfLife\" target=\"_blank\">Python模拟生命游戏</a>\n<a href=\"https://ppizarror.com/pygame-menu/\" target=\"_blank\">pygame菜单组件</a>\n<a href=\"https://github.com/Sigton/tims_adventure\" target=\"_blank\">角色扮演游戏</a>\n<a href=\"https://github.com/buntine/SwervinMervin\" target=\"_blank\">赛车游戏</a>\n","tags":["pygame"]},{"title":"[webservice] webservice","url":"/2019/01/10//articles/2019/01/10/1547085452000.html/","content":"<a href=\"https://blog.csdn.net/qazwsxpcm/article/details/70370490/\" target=\"_blank\">Java WebService接口生成和调用</a>\n<a href=\"https://github.com/xuwujing/webservice_project\" target=\"_blank\">github|webservice_project</a>\n","tags":["webservice"]},{"title":"[spring] JPAQueryFactory","url":"/2019/01/10//articles/2019/01/10/1547084028000.html/","content":"<a href=\"https://www.jianshu.com/p/2b68af9aa0f5\" target=\"_blank\">JPAQueryFactory</a>\n<a href=\"https://github.com/mrdear/JavaWEB\" target=\"_blank\">github|JavaWEB学习</a>\n","tags":["spring"]},{"title":"[java] java多线程","url":"/2019/01/10//articles/2019/01/10/1547084027000.html/","content":"<a href=\"https://blog.csdn.net/c10WTiybQ1Ye3/article/details/78212045\" target=\"_blank\">Java多线程</a>\n","tags":["java"]},{"title":"[spring] spring注解读取json文件","url":"/2019/01/10//articles/2019/01/10/1547084026000.html/","content":"```\nimport java.io.File;\nimport java.util.Scanner;\nimport java.util.concurrent.TimeUnit;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.core.io.Resource;\nimport org.springframework.stereotype.Service;\n@Service\npublic class JsonService {\n\n    @Value(value=\"classpath:static/json/filename.json\")\n    private Resource data;    \n    \n    public JSONArray getJsonArray(){\n        try {\n            File file = data.getFile();\n            String jsonData = this.jsonRead(file);\n            JSONArray array = JSONArray.fromObject(jsonData);\n            return array;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n\n    public JSONObject getJsonObject(){\n        try {\n            File file = data.getFile();\n            String jsonData = this.jsonRead(file);\n            JSONObject jsonObj = JSONObject.fromObject(jsonData);\n            return jsonObj;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n\n    public String getData(){\n        try {\n            File file = data.getFile();\n            long t0 = System.nanoTime();\n            String jsonData = this.jsonRead(file);\n            long t1 = System.nanoTime();\n            long millis = TimeUnit.NANOSECONDS.toMillis(t1-t0);\n            System.out.println(millis +\"ms\");\n            return jsonData;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n\n    /**\n     * 读取文件类容为字符串\n     * @param file\n     * @return\n     */\n    private String jsonRead(File file){\n          Scanner scanner = null;\n          StringBuilder buffer = new StringBuilder();\n          try {\n              scanner = new Scanner(file, \"utf-8\");\n              while (scanner.hasNextLine()) {\n                  buffer.append(scanner.nextLine());\n              }\n          } catch (Exception e) {\n              \n          } finally {\n              if (scanner != null) {\n                  scanner.close();\n              }\n          }\n          return buffer.toString();\n    }\n}\n```","tags":["spring"]},{"title":"[springboot] 百度文字识别","url":"/2019/01/02//articles/2019/01/02/1546384055000.html/","content":"<a href=\"https://blog.csdn.net/qq_37525899/article/details/82558625\" target=\"_blank\">springboot中使用百度ocr实现文字识别功能\n</a>\n<a href=\"https://blog.csdn.net/weixin_42074377/article/details/81135179\" target=\"_blank\">百度AI开放平台文字之身份证识别的实现</a>\n<a href=\"https://github.com/bian1234/studyNote/tree/master/APILearn\" target=\"_blank\">github|APILearn/baiduaidemo</a>\n```\n下载百度提供的工具类,这几个工具类都会用到，都需要下载\nFileUtil\nhttps://ai.baidu.com/file/658A35ABAB2D404FBF903F64D47C1F72\nBase64Util\nhttps://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2\nHttpUtil\nhttps://ai.baidu.com/file/544D677F5D4E4F17B4122FBD60DB82B3\nGsonUtils\nhttps://ai.baidu.com/file/470B3ACCA3FE43788B5A963BF0B625F3\n\n获取AccessTokenUtil\nimport java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.SocketTimeoutException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.HashMap;\nimport java.util.Map;\nimport net.sf.json.JSONArray;\nimport net.sf.json.JSONObject;\nimport org.springframework.stereotype.Component;\n/**\n * @Author: bian\n * @Date: 2018/7/16 15:47\n * @Todo:  百度API要求每个月换一次Token,因此专门写一个工具类用来更新token.\n */\npublic class AccessTokenUtil {\n \n    public static Map getToken(String clientId,String clientSecret){\n \n        Map token = new HashMap();\n        String str = \"https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=\"+clientId+\"&client_secret=\"+clientSecret;\n        try {\n            URL url = new URL(str);\n            URLConnection connectionData = url.openConnection();\n            connectionData.setConnectTimeout(2000);\n            BufferedReader br = new BufferedReader(new InputStreamReader(\n                    connectionData.getInputStream(), \"UTF-8\"));\n            StringBuilder sb = new StringBuilder();\n            String line = null;\n            while ((line = br.readLine()) != null){\n                sb.append(line);\n            }\n            String datas = sb.toString();\n            JSONObject jsonData = JSONObject.fromObject(datas);\n            token.put(\"access_token\", jsonData.getString(\"access_token\").toString());\n            token.put(\"session_key\", jsonData.getString(\"session_key\").toString());\n            token.put(\"scope\", jsonData.getString(\"scope\").toString());\n            token.put(\"refresh_token\", jsonData.getString(\"refresh_token\").toString());\n            token.put(\"session_secret\", jsonData.getString(\"session_secret\").toString());\n            token.put(\"expires_in\", jsonData.getString(\"expires_in\").toString());\n        }catch (SocketTimeoutException e) {\n            System.out.println(\"连接超时\");\n        } catch (FileNotFoundException e) {\n            System.out.println(\"加载文件出错\");\n        }catch (IOException e) {\n            System.out.println(\"IOException\");\n        }\n        return token;\n    }\n}\n```","tags":["springboot"]},{"title":"[java] json+net.sf.json+fastjson+gson使用","url":"/2019/01/02//articles/2019/01/02/1546384054000.html/","content":"<a href=\"\" target=\"_blank\"></a>\njson\n```\n<dependency>\n    <groupId>org.json</groupId>\n    <artifactId>json</artifactId>\n    <version>20160810</version>\n</dependency>\n```\n<a href=\"https://www.cnblogs.com/hitwtx/articles/2468633.html\" target=\"_blank\">net.sf.json使用</a>\n```\nObject obj = new Object();\nJSONObject jsonObject = JSONObject.fromObject(obj);\n\n<dependency>\n    <groupId>net.sf.json-lib</groupId>\n    <artifactId>json-lib</artifactId>\n    <version>2.4</version>\n    <classifier>jdk15</classifier>\n</dependency>\n<dependency>\n    <groupId>net.sf.ezmorph</groupId>\n    <artifactId>ezmorph</artifactId>\n    <version>1.0.6</version>\n</dependency>\n<!--\n<dependency>\n    <groupId>commons-lang</groupId>\n    <artifactId>commons-lang</artifactId>\n    <version>2.6</version>\n</dependency>\n-->\n<dependency>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-lang3</artifactId>\n    <version>3.4</version>\n</dependency>\n<dependency>\n    <groupId>commons-beanutils</groupId>\n    <artifactId>commons-beanutils</artifactId>\n    <version>1.9.3</version>\n</dependency>\n<dependency>\n    <groupId>commons-collections</groupId>\n    <artifactId>commons-collections</artifactId>\n    <version>3.2.2</version>\n</dependency>\n<dependency>\n    <groupId>commons-logging</groupId>\n    <artifactId>commons-logging</artifactId>\n    <version>1.1.1</version>\n</dependency>\n```\n<a href=\"https://www.cnblogs.com/pcheng/p/6875760.html\" target=\"_blank\">fastjson</a>\n```\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>fastjson</artifactId>\n    <version>1.2.32</version>\n</dependency>\n\nString text=\"\";\nObject obj = JSONObject.parse(text);\nJSONObject jsonObj = JSONObject.parseObject(text);\n```\n<a href=\"https://www.cnblogs.com/qinxu/p/9504412.html\" target=\"_blank\">gson基本用法</a>\n```\n<dependency>\n    <groupId>com.google.code.gson</groupId>\n    <artifactId>gson</artifactId>\n    <version>2.8.2</version>\n</dependency>\n\nGson gson = new Gson();\nint i = gson.fromJson(\"100\", int.class); //100\ndouble d = gson.fromJson(\"\\\"99.99\\\"\", double.class);  //99.99\nboolean b = gson.fromJson(\"true\", boolean.class);     // true\nString str = gson.fromJson(\"String\", String.class);   // String\n```","tags":["java"]},{"title":"[技术] 人脸识别","url":"/2019/01/02//articles/2019/01/02/1546384053000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_36538012/article/details/79852664\" target=\"_blank\">H5混合开发二维码扫描以及调用本地摄像头</a>\n<a href=\"https://blog.csdn.net/china_jeffery/column/info/18558\" target=\"_blank\">人脸识别系统开发|基于Qt Quick+OpenCV+Dlib的人脸识别系统</a>\n<a href=\"http://ai.baidu.com/forum/topic/show/864666\" target=\"_blank\">java人脸检测</a>\n<a href=\"https://gitee.com/xshuai/ai/blob/master/AIDemo/src/main/java/com/xs/face/FaceDetectV3Sample.java\" target=\"_blank\">java人脸检测Demo</a>\n<a href=\"https://pan.baidu.com/s/1ht3H9pq\" target=\"_blank\">FaceChapter.zip|uxxf</a>\n<a href=\"https://cloud.tencent.com/developer/article/1196116\" target=\"_blank\">JDK1.8、Tomcat8、SSM框架、HTTPS、JSON、jsp、百度云</a>\n<a href=\"https://gitee.com/xshuai/weixinxiaochengxu\" target=\"_blank\">微信小程序端人脸识别</a>","tags":["技术"]},{"title":"[springboot] 上传视频至mysql并返回","url":"/2019/01/02//articles/2019/01/02/1546384052000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_37164847/article/details/81668242\" target=\"_blank\">springboot2.0上传文件（视频，图片）到服务器硬盘，并保存路径至mysql,返回可直接访问的url</a>","tags":["springboot"]},{"title":"[springmvc] springmvc+jsp多文件上传","url":"/2019/01/02//articles/2019/01/02/1546384051000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/ThinkingInGIS/SpringmvcBootstrap\" target=\"_blank\">github</a>\n","tags":["springmvc"]},{"title":"[springboot] html转pdf","url":"/2019/01/02//articles/2019/01/02/1546384050000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/ThinkingInGIS/spring-boot-htmltopdf\" target=\"_blank\">github|spring-boot-htmltopdf</a>\n","tags":["springboot"]},{"title":"[springboot] springboot+thymeleaf+echarts三维地图展示","url":"/2019/01/02//articles/2019/01/02/1546384049000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/gisboygogogo/article/details/79840880\" target=\"_blank\">Spring Boot + Thymeleaf + Echarts 三维地图展示</a>\n<a href=\"https://github.com/ThinkingInGIS/spring-boot-echarts.git\" target=\"_blank\">github</a>\n\n","tags":["springboot"]},{"title":"[第三方接口] 收集","url":"/2019/01/02//articles/2019/01/02/1546384048000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_28268507/article/details/68941754\" target=\"_blank\">根据银行卡号码获取银行卡归属行以及logo图标</a>\n```\n接口\nhttps://ccdcapi.alipay.com/validateAndCacheCardInfo.json?_input_charset=utf-8&cardBinCheck=true&cardNo=<银行卡号>\n```","tags":["第三方接口"]},{"title":"[优秀程序媛] blog","url":"/2019/01/02//articles/2019/01/02/1546384045000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_36538012\" target=\"_blank\">csdn|祈澈菇凉</a>\n<a href=\"http://naotu.baidu.com/file/fd22d7c96fdd5ec5867ba9074e099a86\" target=\"_blank\">人脸识别应用场景</a>","tags":["优秀程序媛"]},{"title":"[jq] 动态加载css和js","url":"/2019/01/02//articles/2019/01/02/1546384044000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/yangxiong/p/6644966.html\" target=\"_blank\">JS & JQuery 动态添加 select option</a>\n```\njQuery获取Select选择的Text和Value:\n1. //为Select添加事件，当选择其中一项时触发\n$(\"#select_id\").change(function(){//code...}); \n2. //获取Select选择的Text\nvar checkText=$(\"#select_id\").find(\"option:selected\").text();\n3. //获取Select选择的Value\nvar checkValue=$(\"#select_id\").val();\n4. //获取Select选择的索引值\nvar checkIndex=$(\"#select_id \").get(0).selectedIndex;\n5. //获取Select最大的索引值\nvar maxIndex=$(\"#select_id option:last\").attr(\"index\");\n \n\njQuery添加/删除Select的Option项：\n1. //为Select追加一个Option(下拉项)\n$(\"#select_id\").append(\"<option value='Value'>Text</option>\");  \n2. //为Select插入一个Option(第一个位置)\n$(\"#select_id\").prepend(\"<option value='0'>请选择</option>\");  \n3. //删除Select中索引值最大Option(最后一个)\n$(\"#select_id option:last\").remove();  \n4. //删除Select中索引值为0的Option(第一个)\n$(\"#select_id option[index='0']\").remove();\n5. //删除Select中Value='3'的Option\n$(\"#select_id option[value='3']\").remove();\n\n内容清空：\n$(\"#charCity\").empty();\n```","tags":["jq"]},{"title":"[js] 动态加载css和js","url":"/2019/01/02//articles/2019/01/02/1546384043000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cnblogs.com/morang/p/dynamicloadjscssiframe.html\" target=\"_blank\">js实用方法记录-js动态加载css、js脚本文件</a>\n<a href=\"https://www.cnblogs.com/shsgl/p/4689541.html\" target=\"_blank\">JS动态加载JS与CSS文件</a>\n","tags":["js"]},{"title":"[react-native] 二维码","url":"/2019/01/02//articles/2019/01/02/1546384042000.html/","content":"<a href=\"https://blog.csdn.net/sinat_17775997/article/details/76697040\" target=\"_blank\">react-native-smart-barcode目前最好用的二维码扫描组件（IOS、android）\n</a>\n","tags":["react-native"]},{"title":"[react-native] 游戏开发","url":"/2019/01/02//articles/2019/01/02/1546384041000.html/","content":"<a href=\"https://blog.csdn.net/yubo_725/article/details/79467694\" target=\"_blank\">基于ReactNative的跨平台俄罗斯方块游戏的实现2——搭建游戏整体框架</a>\n<a href=\"https://blog.csdn.net/caroline_wendy/article/details/51275747\" target=\"_blank\">React Native 实例 - 网格游戏</a>\n\n","tags":["react-native"]},{"title":"[Android] gradle对应sdk","url":"/2018/12/18//articles/2018/12/18/1545145002000.html/","content":"\n**gradle plugin和 gradle之间的对应关系**\n\n| 插件版本号    | 需要的 Gradle 版本号 |\n| ------------- | -------------------- |\n| 1.0.0 - 1.1.3 | 2.2.1 - 2.3          |\n| 1.2.0 - 1.3.1 | 2.2.1 - 2.9          |\n| 1.5.0         | 2.2.1 - 2.13         |\n| 2.0.0 - 2.1.2 | 2.10 - 2.13          |\n| 2.1.3 - 2.2.3 | 2.14.1+              |\n| 2.3.0+        | 3.3+                 |\n| 3.0.0+        | 4.1+                 |\n| 3.1.0+        | 4.4+                 |\n\n| Version       | API          | CodeName           |\n| ------------- | ------------ | ------------------ |\n| 2.3.3 - 2.3.7\t| 10           | Gingerbread        |\n| 4.0.3 - 4.0.4\t| 15           | Ice Cream Sandwich |\n| 4.1.x\t        | 16           | Jelly Bean         |\n| 4.2.x\t        | 17           | Jelly Bean         |\n| 4.3\t        | 18           | Jelly Bean         |\n| 4.4\t        | 19           | KitKat             |\n| 5.0\t        | 21           | Lollipop           |\n| 5.1\t        | 22           | Lollipop           |\n| 6.0\t        | 23           | Marshmallow        |\n| 7.0\t        | 24           | Nougat             |\n| 7.1\t        | 25           | Nougat             |\n| 8.0\t        | 26           | Oreo               |\n| 8.1\t        | 27           | Oreo               |\n","tags":["Android"]},{"title":"[鬼畜视频制作] BiLiBiLi","url":"/2018/12/15//articles/2018/12/15/1544870268000.html/","content":"<a href=\"https://search.bilibili.com/all?keyword=%E9%AC%BC%E7%95%9C%E5%88%B6%E4%BD%9C\" target=\"_blank\">关键词搜索|鬼畜制作</a>\n<a href=\"https://www.bilibili.com/video/av6485321\" target=\"_blank\">少年想学鬼畜吗？零基础鬼畜入门教程，软件我都教你怎么安装了！还不赶紧去尝试？</a>\n<a href=\"https://www.bilibili.com/video/av19241621\" target=\"_blank\">【水蛭】教你制作一个简单的鬼畜！</a>\n<a href=\"https://space.bilibili.com/43976732\" target=\"_blank\">【水蛭】</a>\n<a href=\"https://www.bilibili.com/video/av5809298\" target=\"_blank\">【Vegas进阶教程】骚虹教你制作一个完整的鬼畜视频！</a>\n","tags":["鬼畜视频制作"]},{"title":"[ionic3] ionic3","url":"/2018/12/15//articles/2018/12/15/1544870267000.html/","content":"<a href=\"http://www.ionic.wang/css_doc-v3.html#overview\">Ionic3中文文档-Ionic3 Components</a>\n<a href=\"https://ionicframework.com/docs/components/#overview\">Ionic3英文官方</a>\n","tags":["ionic3"]},{"title":"[jq] jquery实用笔记","url":"/2018/12/15//articles/2018/12/15/1544843210000.html/","content":"<a href=\"https://www.cnblogs.com/junjieok/p/4107066.html\" target=\"_blank\">jQuery对checkbox的各种操作</a>","tags":["jq"]},{"title":"[spring] spring+layui图片上传","url":"/2018/12/15//articles/2018/12/15/1544843289000.html/","content":"<a href=\"http://www.cnblogs.com/wangxiayun/p/9265248.html\" target=\"_blank\">薛定谔的病态猫 - 博客园|layui+springmvc实现文件异步上传</a>","tags":["spring"]},{"title":"[spring] spring-data-jpa","url":"/2018/12/15//articles/2018/12/15/1544843288000.html/","content":"<a href=\"https://blog.csdn.net/moshowgame/article/details/80282813\" target=\"_blank\">SpingDataJPA之ExampleMatcher实例查询</a>\n<a href=\"https://www.cnblogs.com/rulian/p/6533109.html\" target=\"_blank\">Spring Data JPA 实例查询 - ExampleMatcher</a>\n\n","tags":["spring"]},{"title":"[springboot] SpringBoot2+Freemarker代码生成器","url":"/2018/12/15//articles/2018/12/15/1544843287000.html/","content":"<a href=\"https://github.com/moshowgame/SpringBootCodeGenerator\" target=\"_blank\">SpringBoot2+Freemarker代码生成器</a>","tags":["springboot"]},{"title":"[springcloud] springcloud源码","url":"/2018/12/15//articles/2018/12/15/1544843286000.html/","content":"<a href=\"https://github.com/moshowgame/spring-cloud-study\" target=\"_blank\">spring-cloud-study</a>\n<a href=\"https://gitee.com/didispace/SpringCloud-Learning\" target=\"_blank\">程序员DD|SpringCloud-Learning</a>\n开源项目推荐\n我的《Spring Cloud基础教程》：https://github.com/dyc87112/SpringCloud-Learning\n泥瓦匠Spring Boot学习案例：https://git.oschina.net/jeff1993/springboot-learning-example\n其他推荐\nSpring Boot Reference Guide：http://blog.didispace.com/books/spring-boot-reference/\n<a href=\"https://gitee.com/didispace\" target=\"_blank\">程序员DD</a>","tags":["springcloud"]},{"title":"[数据结构] 简书 易百教程","url":"/2018/12/15//articles/2018/12/15/1544843285000.html/","content":"<a href=\"https://www.jianshu.com/u/c04712676f23\" target=\"_blank\">简书|易百教程</a>\n","tags":["数据结构"]},{"title":"[java] API管理平台XXL","url":"/2018/12/15//articles/2018/12/15/1544841732000.html/","content":"<a href=\"http://www.xuxueli.com/xxl-api/#/?id=%E3%80%8Aapi%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0xxl-api%E3%80%8B\" target=\"_blank\">api管理</a>","tags":["java"]},{"title":"[python] 数据科学","url":"/2018/12/15//articles/2018/12/15/1544841394000.html/","content":"查看setuptools支持版本\n```\nhttps://pypi.org/project/setuptools/\n2.7|3.4|3.5|3.6|3.7\n```\n选择Python 3.6.3版本\n<a href=\"https://www.python.org/ftp/python/3.6.3/python-3.6.3-amd64.exe\" target=\"_blank\">python-3.6.3-amd64.exe</a>\n```\n#访问\nhttps://www.python.org/downloads/release/python-363/\n#因为zip版没有Scripts目录，所以不推荐\n#https://www.python.org/ftp/python/3.6.3/python-3.6.3-embed-amd64.zip\n```\n新建环境变量\n```\nPYTHON\n%USERPROFILE%/AppData/Local/Programs/Python/Python36\nPath追加\n%PYTHON%;%PYTHON%/Scripts;\n```\npip升级\n```\npython -m pip install --upgrade pip\n```\npython数学库\n```\nNumPy的访问地址：\nhttps://pypi.python.org/pypi/numpy\nMatplotlib的访问地址：\nhttps://pypi.python.org/pypi/matplotlib\n```\nnumpy、matplotlib、scipy的下载和安装|【注意】查找关键字cp36和amd64\n```\n----------------- 安装numpy start -----------------\n访问\nhttps://pypi.org/project/numpy/#files\n下载\nnumpy-1.15.4-cp36-none-win_amd64.whl\nhttps://files.pythonhosted.org/packages/51/70/7096a735b27359dbc0c380b23b9c9bd05fea62233f95849c43a6b02c5f40/numpy-1.15.4-cp36-none-win_amd64.whl\n\n使用python安装numpy\npip3.6 install numpy-1.15.4-cp36-none-win_amd64.whl\n----------------- 安装numpy end -----------------\n----------------- 安装matplotlib start -----------------\n访问\nhttps://pypi.org/project/matplotlib/#files\n点击\nhttps://files.pythonhosted.org/packages/b1/56/569c83515c10146fd0aa09e086816b12e301d0811048e3354a6e9b77ba9a/matplotlib-3.0.2-cp36-cp36m-win_amd64.whl\n使用python安装matplotlib\npip3.6 install matplotlib-3.0.2-cp36-cp36m-win_amd64.whl\n----------------- 安装matplotlib end -----------------\n----------------- 安装scipy start -----------------\n访问\nhttps://pypi.org/project/scipy/#files\n点击\nhttps://files.pythonhosted.org/packages/62/e2/364f0bcc641aeff79d743c732769d5dc31a1e78c27699229431412c4b425/scipy-1.1.0-cp36-none-win_amd64.whl\n使用python安装scipy\npip3.6 install scipy-1.1.0-cp36-none-win_amd64.whl\n----------------- 安装scipy end -----------------\n```\n\npython数据干货\n```\npython用最小二乘法分析数据趋势以及做数据预测\n数据预测\nhttps://blog.csdn.net/zwq912318834/article/details/78476842\npython数据分析入门学习笔记\nhttps://www.cnblogs.com/zzhzhao/p/5269217.html\n入门Python数据分析最好的实战项目（一）\nhttps://segmentfault.com/a/1190000015440560\n《利用Python进行数据分析·第2版》第1章 准备工作\nhttps://www.jianshu.com/p/04d180d90a3f\n预测数值型数据：回归\nhttps://blog.csdn.net/u010665216/article/details/77680227\n```\n<a href=\"https://www.cnblogs.com/purstar/p/5979540.html\" target=\"_blank\">数据科学的完整学习路径（Python版）</a>\n<a href=\"https://github.com/yangxudong/deeplearning\" target=\"_blank\">深度学习相关的模型训练、评估和预测相关代码</a>\n<a href=\"https://www.yiibai.com/python_data_science/python_data_science_environment_setup.html\" target=\"_blank\">Python数据科学开发环境</a>\n\n\n","tags":["python"]},{"title":"[react-native] 代码样例","url":"/2018/12/15//articles/2018/12/15/1544840774000.html/","content":"<a href=\"http://www.hangge.com/blog/cache/category_76_1.html\" target=\"_blank\">航歌|react-native</a>","tags":["react-native"]},{"title":"[java] Servlet面试题","url":"/2018/12/11//articles/2018/12/11/1544537379000.html/","content":"<a href=\"https://blog.csdn.net/caohaicheng/article/details/38116481\" target=\"_blank\">Servlet面试题归纳</a>\n\n","tags":["java"]},{"title":"[springboot] springboot+rabbitmq+websocket","url":"/2018/11/16//articles/2018/11/16/1542334533000.html/","content":"<a href=\"https://blog.csdn.net/qq_23250633/article/details/80235056\" target=\"_blank\">参考</a> springboot+rabbitmq+websocket广播模式进行消息实时推送\n<a href=\"http://www.rabbitmq.com/download.html\" target=\"_blank\">rabbitmq</a>\n\n## 注意\nproducer和consumer只要放在同一个工程即可\nmvn创建rabbitmq\n```\nmvn archetype:generate -DgroupId=com.code -DartifactId=rabbitmq -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeCatalog=internal\n```\n## 修改pom.xml\n```\n    <packaging>war</packaging>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>1.4.0.RELEASE</version>\n    </parent>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-amqp</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-websocket</artifactId>\n        </dependency>\n    </dependencies>\n    <build>\n        <resources>\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>false</filtering>\n            </resource>\n            <resource>\n                <directory>src/main/resources</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>false</filtering>\n            </resource>\n        </resources>\n        <!-- 支持 lambda 表达式 -->\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>8</source>\n                    <target>8</target>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n```\nJSONObject.toJSON\n```\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.1.31</version>\n        </dependency>\n```\n@Slf4j注解\n```\n<--\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>1.7.5</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n            <version>1.7.5</version>\n        </dependency>\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.17</version>\n        </dependency>\n-->\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <version>1.16.18</version>\n            <scope>provided</scope>\n        </dependency>\n```\nidea插件 lombok\n```\nhttp://plugins.jetbrains.com/plugin/6317-lombok-plugin\n```\napplication.properties\n```\n#rabbitmq配置\nspring.rabbitmq.host=127.0.0.1\nspring.rabbitmq.port=5672\nspring.rabbitmq.username=guest\nspring.rabbitmq.password=guest\n#开启消息发送确认\nspring.rabbitmq.publisher-confirms=true\nspring.rabbitmq.publisher-returns=true\n#返回无法插入队列的消息\nspring.rabbitmq.template.mandatory=true\n```\n新建package\n```\n新建目录 src/main/java -> 右键 Mark Directory as -> Sources Root -> java目录右键 New -> Package ->\ncom.code.rabbitmq\ncom.code.rabbitmq.config\ncom.code.rabbitmq.constant\ncom.code.rabbitmq.model\ncom.code.rabbitmq.web\ncom.code.rabbitmq.web.websocket\n```\ncom.code.rabbitmq.Application | 入口\n```\npackage com.code.rabbitmq;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) throws Exception {\n        SpringApplication.run(Application.class, args);\n    }\n}\n```\ncom.code.rabbitmq.model.MessageVo\n```\npackage com.code.rabbitmq.model;\n\npublic class MessageVo {\n\n    private String content;\n    private String routingKey;\n    private String receiveUserId;\n\n    public void setContent(String content) {\n        this.content = content;\n    }\n\n    public String getContent() {\n        return this.content;\n    }\n\n    public void setRoutingKey(String routingKey) {\n        this.routingKey = routingKey;\n    }\n\n    public String getRoutingKey() {\n        return this.routingKey;\n    }\n\n    public String getReceiveUserId() {\n        return receiveUserId;\n    }\n\n    public void setReceiveUserId(String receiveUserId) {\n        this.receiveUserId = receiveUserId;\n    }\n}\n```\ncom.code.rabbitmq.constant.RabbitConstant\n```\npackage com.code.rabbitmq.constant;\n\n//准备消息队列与路由key\npublic class RabbitConstant {\n    //交换机名称\n    public final static String EXCHANGE = \"exchange_test\";\n    //队列\n    public final static String QUEUE_TRANSACTION = \"queue_transaction\";\n    public final static String QUEUE_CONTRACT = \"queue_contract\";\n    public final static String QUEUE_QUALIFICATION = \"queue_qualification\";\n    //路由key\n    public final static String RK_TRANSACTION = \"transaction\";\n    public final static String RK_CONTRACT = \"contract\";\n    public final static String RK_QUALIFICATION = \"qualification\";\n}\n```\ncom.code.rabbitmq.config.RabbitMqConfig\n```\npackage com.code.rabbitmq.config;\n\nimport com.code.rabbitmq.constant.RabbitConstant;\nimport org.springframework.amqp.core.Binding;\nimport org.springframework.amqp.core.BindingBuilder;\nimport org.springframework.amqp.core.DirectExchange;\nimport org.springframework.amqp.core.Queue;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class RabbitMqConfig {\n    /**\n     * 声明队列\n     *\n     * @return\n     */\n    @Bean\n    public Queue queueTransaction() {\n        // true表示持久化该队列\n        return new Queue(RabbitConstant.QUEUE_TRANSACTION, true);\n    }\n\n    @Bean\n    public Queue queueContract() {\n        // true表示持久化该队列\n        return new Queue(RabbitConstant.QUEUE_CONTRACT, true);\n    }\n\n    @Bean\n    public Queue queueQualification() {\n        // true表示持久化该队列\n        return new Queue(RabbitConstant.QUEUE_QUALIFICATION, true);\n    }\n\n    /**\n     * 声明交互器\n     *\n     * @return\n     */\n    @Bean\n    DirectExchange directExchange() {\n        return new DirectExchange(RabbitConstant.EXCHANGE);\n    }\n\n    /**\n     * 绑定\n     *\n     * @return\n     */\n    @Bean\n    public Binding bindingTransaction() {\n        return BindingBuilder.bind(queueTransaction()).to(directExchange()).with(RabbitConstant.RK_TRANSACTION);\n    }\n\n    /**\n     * 绑定\n     *\n     * @return\n     */\n    @Bean\n    public Binding bindingContract() {\n        return BindingBuilder.bind(queueContract()).to(directExchange()).with(RabbitConstant.RK_CONTRACT);\n    }\n\n    /**\n     * 绑定\n     *\n     * @return\n     */\n    @Bean\n    public Binding bindingQualification() {\n        return BindingBuilder.bind(queueQualification()).to(directExchange()).with(RabbitConstant.RK_QUALIFICATION);\n    }\n}\n```\ncom.code.rabbitmq.web.Sender | 发布者实现接口\n```\npackage com.code.rabbitmq.web;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.code.rabbitmq.constant.RabbitConstant;\nimport com.code.rabbitmq.model.MessageVo;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.amqp.core.Message;\nimport org.springframework.amqp.rabbit.core.RabbitTemplate;\nimport org.springframework.amqp.rabbit.support.CorrelationData;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport javax.annotation.PostConstruct;\nimport java.util.UUID;\n\n@Component\n@Slf4j\npublic class Sender implements RabbitTemplate.ConfirmCallback, RabbitTemplate.ReturnCallback {\n\n    @Autowired\n    private RabbitTemplate rabbitTemplate;\n\n    @PostConstruct\n    public void init() {\n        rabbitTemplate.setConfirmCallback(this);\n        rabbitTemplate.setReturnCallback(this);\n    }\n\n    //消息发送确认回调方法\n    @Override\n    public void confirm(CorrelationData correlationData, boolean ack, String cause) {\n        log.info(\"消息发送成功:\" + correlationData);\n    }\n\n    //消息发送失败回调方法\n    public void returnedMessage(Message message, int replyCode, String replyText, String exchange, String routingKey) {\n        log.error(\"消息发送失败:\" + new String(message.getBody()));\n    }\n\n    /**\n     * 发送消息，不需要实现任何接口，供外部调用\n     *\n     * @param messageVo\n     */\n    //只要调用send方法就可一把消息发送到指定的队列中了，发送后会调用confirm或者returnedMessage方法来返回结果\n    public void send(MessageVo messageVo) {\n        CorrelationData correlationId = new CorrelationData(UUID.randomUUID().toString());\n        rabbitTemplate.convertAndSend(RabbitConstant.EXCHANGE, messageVo.getRoutingKey(), JSONObject.toJSON(messageVo).toString(), correlationId);\n    }\n\n}\n```\ncom.code.rabbitmq.web.websocket.WebSocketServerEndpoint | socket服务\n```\npackage com.code.rabbitmq.web.websocket;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.code.rabbitmq.model.MessageVo;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Component;\n\nimport javax.websocket.*;\nimport javax.websocket.server.PathParam;\nimport javax.websocket.server.ServerEndpoint;\nimport java.io.IOException;\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.function.BiConsumer;\n\n/**\n * ServerEndpoint\n * <p>\n * 使用springboot的唯一区别是要@Component声明下，而使用独立容器是由容器自己管理websocket的，但在springboot中连容器都是spring管理的。\n * <p>\n * 虽然@Component默认是单例模式的，但springboot还是会为每个websocket连接初始化一个bean，所以可以用一个静态set保存起来。\n */\n@ServerEndpoint(\"/ws/code/{userId}\") //WebSocket客户端建立连接的地址\n@Component\n@Slf4j\npublic class WebSocketServerEndpoint {\n\n    /**\n     * 存活的session集合（使用线程安全的map保存）\n     */\n    private static Map<String, Session> livingSessions = new ConcurrentHashMap<String, Session>();\n\n    /**\n     * 建立连接的回调方法\n     *\n     * @param session 与客户端的WebSocket连接会话\n     * @param userId  用户名，WebSocket支持路径参数\n     */\n    @OnOpen\n    public void onOpen(Session session, @PathParam(\"userId\") String userId) {\n        livingSessions.put(session.getId(), session);\n        log.info(userId + \"进入连接\");\n    }\n\n    @OnMessage\n    public void onMessage(String message, Session session, @PathParam(\"userId\") String userId) {\n        log.info(userId + \" : \" + message);\n        sendMessageToAll(userId + \" : \" + message);\n    }\n\n\n    @OnError\n    public void onError(Session session, Throwable error) {\n        log.info(\"发生错误\");\n        log.error(error.getStackTrace() + \"\");\n    }\n\n\n    @OnClose\n    public void onClose(Session session, @PathParam(\"userId\") String userId) {\n        livingSessions.remove(session.getId());\n        log.info(userId + \" 关闭连接\");\n    }\n\n    /**\n     * 单独发送消息\n     *\n     * @param session\n     * @param message\n     */\n    public void sendMessage(Session session, String message) {\n        try {\n            session.getBasicRemote().sendText(message);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * 群发消息\n     *\n     * @param message\n     */\n    public void sendMessageToAll(String message) {\n        MessageVo messageVo = JSONObject.parseObject(message, MessageVo.class);\n        livingSessions.forEach(new BiConsumer<String, Session>() {\n            @Override\n            public void accept(String sessionId, Session session) {\n                //发给指定的接收用户\n                if (sessionId.equals(messageVo.getReceiveUserId())) {\n                    sendMessage(session, message);\n                }\n            }\n        });\n    }\n\n}\n```\n\ncom.code.rabbitmq.config.ConsumerConfig | 消费者配置\n```\npackage com.code.rabbitmq.config;\n\nimport com.code.rabbitmq.web.websocket.WebSocketServerEndpoint;\nimport com.rabbitmq.client.Channel;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.amqp.core.AcknowledgeMode;\nimport org.springframework.amqp.core.Message;\nimport org.springframework.amqp.core.Queue;\nimport org.springframework.amqp.rabbit.annotation.EnableRabbit;\nimport org.springframework.amqp.rabbit.annotation.RabbitListenerConfigurer;\nimport org.springframework.amqp.rabbit.connection.ConnectionFactory;\nimport org.springframework.amqp.rabbit.core.ChannelAwareMessageListener;\nimport org.springframework.amqp.rabbit.listener.RabbitListenerEndpointRegistrar;\nimport org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.messaging.converter.MappingJackson2MessageConverter;\nimport org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory;\n\nimport java.io.IOException;\n\n@Configuration\n@EnableRabbit\n@Slf4j\npublic class ConsumerConfig implements RabbitListenerConfigurer {\n\n    @Autowired\n    private ConnectionFactory connectionFactory;\n\n    @Autowired\n    private WebSocketServerEndpoint webSocketServerEndpoint;\n\n    @Bean\n    public DefaultMessageHandlerMethodFactory handlerMethodFactory() {\n        DefaultMessageHandlerMethodFactory factory = new DefaultMessageHandlerMethodFactory();\n        factory.setMessageConverter(new MappingJackson2MessageConverter());\n        return factory;\n    }\n\n    @Bean\n    public SimpleMessageListenerContainer messageContainer(@Qualifier(\"queueTransaction\") Queue transaction, @Qualifier(\"queueContract\") Queue contract, @Qualifier(\"queueQualification\") Queue qualification) {\n        SimpleMessageListenerContainer container = new SimpleMessageListenerContainer(connectionFactory);\n        container.setQueues(transaction, contract, qualification);\n        container.setMaxConcurrentConsumers(1);\n        container.setConcurrentConsumers(1);\n        container.setAcknowledgeMode(AcknowledgeMode.MANUAL); //设置确认模式手工确认\n        container.setMessageListener(new ChannelAwareMessageListener() {\n            @Override\n            public void onMessage(Message message, Channel channel) throws Exception {\n                byte[] body = message.getBody();\n                log.info(\"receive msg : \" + new String(body));\n                try {\n                    webSocketServerEndpoint.sendMessageToAll(new String(body));\n                    channel.basicAck(message.getMessageProperties().getDeliveryTag(), false);//确认消息成功消费\n                } catch (IOException e) {\n                    log.error(\"消息推送前台出错：\" + e.getMessage() + \"/r/n重新发送\");\n                    channel.basicNack(message.getMessageProperties().getDeliveryTag(), false, true); //重新发送\n                }\n            }\n        });\n        return container;\n    }\n\n    @Override\n    public void configureRabbitListeners(RabbitListenerEndpointRegistrar rabbitListenerEndpointRegistrar) {\n        rabbitListenerEndpointRegistrar.setMessageHandlerMethodFactory(handlerMethodFactory());\n    }\n}\n```\nwebsocket 配置\n```\npackage com.code.rabbitmq.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.socket.server.standard.ServerEndpointExporter;\n\n@Configuration\npublic class WebSocketConfig {\n    @Bean\n    public ServerEndpointExporter serverEndpointExporter() {\n        return new ServerEndpointExporter();\n    }\n}\n```\n<a href=\"http://www.runoob.com/html/html5-websocket.html\" target=\"_blank\">index.html</a>\n\n```js\n<head>\n    <title>WebSocket</title>\n</head>\n<script src=\"http://cdn.sockjs.org/sockjs-0.3.min.js\"></script>\n<body>\n<div id=\"main\">\n    <div id=\"message\"></div>\n</div>\n</body>\n<script type=\"text/javascript\">\n    var path = 'localhost:8080';\n    var websocket = null;\n\n    //判断当前浏览器是否支持WebSocket\n    if ('WebSocket' in window) {\n        websocket = new WebSocket(\"ws://\" + path + \"/ws/code/\" + uid);\n    } else if ('MozWebSocket' in window) {\n        websocket = new MozWebSocket(\"ws://\" + path + \"/ws/code/\" + uid);\n    } else {\n        websocket = new SockJS(\"http://\" + path + \"/ws/sockjs/\" + uid);\n    }\n\n    //连接发生错误的回调方法\n    websocket.onerror = function () {\n        setMessageInnerHTML(\"连接发生错误\");\n    };\n\n    //连接成功建立的回调方法\n    websocket.onopen = function () {\n        setMessageInnerHTML(\"连接成功\");\n    }\n\n    //接收到消息的回调方法，此处添加处理接收消息方法，当前是将接收到的信息显示在网页上\n    websocket.onmessage = function (event) {\n        setMessageInnerHTML(event.data);\n    }\n\n    //连接关闭的回调方法\n    websocket.onclose = function () {\n        setMessageInnerHTML(\"连接关闭,如需登录请刷新页面。\");\n    }\n\n    //监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。\n    window.onbeforeunload = function () {\n        closeWebSocket();\n    }\n\n    //将消息显示在网页上，如果不需要显示在网页上，则不调用该方法\n    function setMessageInnerHTML(innerHTML) {\n        document.getElementById('message').innerHTML += innerHTML + '<br/>';\n    }\n</script>\n</html>\n```\n\n","tags":["springboot"]},{"title":"[cocos2d] quick-cocos2dx-community","url":"/2018/11/11//articles/2018/11/11/1541909573000.html/","content":"<a href=\"http://tairan.com/archives/11280/\" target=\"_blank\">官方开发环境说明</a>\n<a href=\"https://github.com/iTyran/quick-comminuty-dev/archive/master.zip\" target=\"_blank\">点击下载 sublime text插件 quick-comminuty-dev</a>\n<a href=\"http://www.tairan.com/archives/10542/\" target=\"_blank\">quick-community-dev插件安装教程</a>\n```\n#git clone https://github.com/iTyran/quick-comminuty-dev.git\n```\n<a href=\"http://www.cocos2d-lua.org/doc/index.md\" target=\"_blank\">开发文档</a>\n<a href=\"http://www.cocos2d-lua.org/api/index.md\" target=\"_blank\">API手册</a>\n<a href=\"https://github.com/u0u0/Lua-utils\" target=\"_blank\">Lua-utils（包含 ui控件 扩展）</a>\n<a href=\"https://github.com/u0u0/Lua-utils/blob/master/src/app/utils/TableView.lua\" target=\"_blank\">Lua-utils ~ TableView</a>\n<a href=\"http://www.cocos2d-lua.org/book/index.md\" target=\"_blank\">《Cocos2d-x 之 Lua 核心编程》第二版 源码</a>\ncocos2d-js 3.x API手册\n```\n#quick-cocos2d-community 3.7版的 ccui 跟 cocos2d-js 3.x 版的类、方法、属性相似\nhttp://docs.cocos2d-x.org/api-ref/js/v3x/\nhttp://docs.cocos2d-x.org/api-ref/\n```\n<a href=\"http://www.cocos2d-lua.org/\" target=\"_blank\">首页|Quick-Cocos2dx-Community - Cocos2d-Lua 社区版</a>\n<a href=\"http://www.tairan.com/engines-download\" target=\"_blank\">使用Quick初学者系列教程</a>\n\n","tags":["cocos2d"]},{"title":"[cocos2d] lua","url":"/2018/11/09//articles/2018/11/09/1541766655000.html/","content":"\n<a href=\"http://luadist.org/\" target=\"_blank\">lua官网</a>\n<a href=\"https://tieba.baidu.com/p/4029642660?red_tag=0674754917&traceid=\" target=\"_blank\">用Notepad++搭建lua开发环境</a>\n```\n#如果配置了lua环境变量（也就是把lua解析器的路径添加到系统环境变量Path），那么输入命令：\ncmd /k lua \"$(FULL_CURRENT_PATH)\"\n```\n<a href=\"https://www.imooc.com/video/9381\" target=\"_blank\">慕课网 Lua 开发环境搭建</a>\n<a href=\"https://www.byjth.com/lua/33.html\" target=\"_blank\">Windows7+VS2015搭建Lua开发环境</a>\n<a href=\"https://blog.csdn.net/column/details/cocos2dx1.html\" target=\"_blank\">cocos2dx游戏开发入门指南</a>\n<a href=\"https://blog.csdn.net/szm_cuit/article/details/53208932\" target=\"_blank\">cocos2d-x Lua安装配置</a>\n<a href=\"https://blog.csdn.net/zhouyongku/article/details/72891661\" target=\"_blank\">参考|Cocos2d Lua开发环境完全搭建</a>\n环境与工具\n<a href=\"https://github.com/cocos2d/cocos2d-x/releases\" target=\"_blank\">cocos2d-x源文件</a>\n<a href=\"https://github.com/cocos2d/cocos2d-x/archive/cocos2d-x-3.10.zip\" target=\"_blank\">cocos2d-x-3.10.zip</a>\n<a href=\"https://ant.apache.org/bindownload.cgi\" target=\"_blank\">ant</a>\n<a href=\"http://pan.baidu.com/s/1i5QMW1v\" target=\"_blank\">vs2013</a>\n<a href=\"http://pan.baidu.com/s/1nvoLf1B\" target=\"_blank\">vs2013 lua插件 babelua</a>\n```\n========= 设置环境变量 start =========\n#设置环境变量\nCOCOS_X_ROOT\nE:\\Cocos\\Cocos\\Cocos2d-x\\Cocos2d-x-3.10\nCOCOS_TEMPLATES_ROOT\nE:\\Cocos\\Cocos\\Cocos2d-x\\Cocos2d-x-3.10\\templates\nCOCOS_CONSOLE_ROOT\nE:\\Cocos\\Cocos\\Cocos2d-x\\Cocos2d-x-3.10\\tools\\cocos2d-console\\bin\n\nANDROID_HOME\nE:\\Android\\android-sdk\nANDROID_SDK_ROOT\nE:\\Android\\android-sdk\nANT_ROOT\nE:\\Android\\ant\nNDK_ROOT\nE:\\Android\\ndk\n========= 设置环境变量 end =========\n\n========= vs2013 lua插件 start =========\nhttps://blog.csdn.net/fjdmy001/article/details/52882779\n\nlua scripts folder：脚本目录\nlua exe path：运行的exe文件路径\nWorking path：工作目录\nCommand line：没用过，也用不到\nLua project name：lua项目名称\n\nlua scripts folder：<项目父目录路径>\\demo\\src\nlua exe path：<项目父目录路径>\\demo\\simulator\\win32\\demo.exe\nWorking path：<项目父目录路径>\\demo\\src\nLua project name：demo\n========= vs2013 lua插件 end =========\n\n\n========= vs2013编译启动项目 start =========\n#创建一个cocos-lua项目\n#cocos new <项目名> -p com.<项目名>.app -l lua -d G:\\workspaces\\cocos-lua\\\ncocos new demo -p com.demo.app -l lua -d G:\\workspaces\\cocos-lua\\\n\n#创建一个cocos-c++工程\n#cocos new demo -p com.demo.app -l cpp -d G:\\workspaces\\cocos2dx\\\n\n#打开\nframeworks\\runtime-src\\proj.win32\\<项目名>.sln\n#打开解决方案，并开始编译\nhttps://blog.csdn.net/yuan2053/article/category/6774853\n========= vs2013编译启动项目 end =========\n```\n\nQuick-Cocos2dx\n```\nQuick-Cocos2dx-Community 稳定版下载\nhttp://cocos2d-lua.org/download/index.md\nQuick初学者游戏教程1 ~ 12\nhttps://github.com/u0u0/Quick-Cocos2dx-Community/tree/3.6.1_Release\n```\n\n游戏素材资源与编辑\n```\n游戏素材\nhttp://www.aigei.com/\n\nplist生成\nTexturePacker|多多软件站|4.+版\nhttp://www.ddooo.com/softdown/112849.htm\nTexturePacker破解版 TexturePacker_3.0.9.rar\nhttps://blog.csdn.net/u013654125/article/details/80676715\nTexturePacker|使用教程\nhttps://www.jianshu.com/p/217d211cf3b1\nplist编辑器\nhttp://www.ddooo.com/softdown/14702.htm\n\nTiled Map Editor|地图编辑器|官网可以不收费\nhttps://www.mapeditor.org/\nhttps://thorbjorn.itch.io/tiled/download/eyJleHBpcmVzIjoxNTQxNTk5Mzc3LCJpZCI6Mjg3Njh9.iOPtAxMdCGKvNth8muFsGtXeFYQ%3d\n```\n\nCocosCreator\n```\n============ CocosCreator start ============\n官方安装配置原生开发环境\nhttps://docs.cocos.com/creator/manual/zh/publish/setup-native-development.html\n打包发布原生平台\nhttps://docs.cocos.com/creator/manual/zh/publish/publish-native.html\nVisual Studio Code\nhttps://docs.cocos.com/creator/manual/zh/getting-started/coding-setup.html\n============ CocosCreator end ============\n```\nCocos2d-JS\n```\n============ Cocos2d-JS start ============\nhttps://www.cocos.com/docs/js/\ncocos2d-js 入门 （主要是HTML5）\nhttps://www.cnblogs.com/kenkofox/p/4153848.html\nhttps://github.com/kenkozheng/cocos2d-js\n============ Cocos2d-JS end ============\n```","tags":["cocos2d"]},{"title":"[Go] Go实战","url":"/2018/11/03//articles/2018/11/03/1541215156000.html/","content":"<a href=\"https://blog.csdn.net/tennysonsky/article/details/77688679\" target=\"_blank\">Go环境搭建：windows+sublime3</a>\n<a href=\"https://www.golangtc.com/download\" target=\"_blank\">golang包下载</a>\n<a href=\"https://github.com/DisposaBoy/GoSublime\" target=\"_blank\">github|GoSublime插件</a>\n```\n#解压位置\nC:\\Users\\Administrator\\AppData\\Roaming\\Sublime Text 3\\Packages\n#sublime调出终端\nctrl+shift+t\n#底部命令行\nctrl+b\n#自动整理+对齐+保存\nctrl+s\n```\n<a href=\"https://blog.csdn.net/column/details/18460.html\" target=\"_blank\">go实战专栏</a>\n\n```\n注意事项：\n1.win7配置环境变量\nC:\\msys64\\mingw64\\bin要在C:\\msys64\\usr\\bin 前面\n2.编译出现如下报错信息：\ngo build github.com/mattn/go-gtk/gdk: invalid flag in pkg-config --libs: -Wl,-luuid\n解决办法:\nhttps://blog.csdn.net/dodod2012/article/details/81437245\n```\n\n<a href=\"http://www.msys2.org/\" target=\"_blank\">msys2官网</a>\n```\npacman -S mingw-w64-x86_64-gtk3\npacman -S mingw-w64-x86_64-gtk2\npacman -S mingw-w64-x86_64-devhelp\npacman -S mingw-w64-x86_64-toolchain base-devel\npacman -S mingw-w64-x86_64-glade\n\ngit clone https://github.com/mattn/go-gtk.git\ngo build github.com/mattn/go-gtk/gdk\n#Path追加\nE:\\msys64\\mingw64\\bin;E:\\msys64\\usr\\bin;E:\\msys64\\mingw64\\include\n#PKG_CONFIG_PATH\nE:\\msys64\\mingw64\\lib\\pkgconfig\n#测试\npkg-config --cflags gtk+-2.0\nmake -v\npkg-config --cflags glib-2.0 gobject-2.0\npkg-config --cflags pango\n```\n\n<a href=\"https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/preface.md\" target=\"_blank\">github|Go Web</a>\n<a href=\"https://studygolang.com/\" target=\"_blank\">Go语言中文网</a>\n<a href=\"https://blog.csdn.net/tennysonsky\" target=\"_blank\">博客|秋叶原 && Mike || 麦克</a>\n<a href=\"https://sourceforge.net/projects/liteide/files/latest/download\" target=\"_blank\">liteIDE</a>","tags":["golang"]},{"title":"[spring] spring+","url":"/2018/10/23//articles/2018/10/23/1540250495000.html/","content":"\nmvn命令创建webapp\n```\nmvn archetype:generate -DgroupId=com.code -DartifactId=learn -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeCatalog=internal\n```\n\n\npom+mybatis报错\n```\n#invalid bound statement (not found)解决办法\n#参考\n#https://blog.csdn.net/k469785635/article/details/77532512\n    <build>\n        <resources>\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>false</filtering>\n            </resource>\n            <resource>\n                <directory>src/main/resources</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>false</filtering>\n            </resource>\n        </resources>\n    </build>\n```\n<a href=\"https://blog.csdn.net/qq_31183297/article/details/79419222\" target=\"_blank\">spring+SSO单点登录</a>\n<a href=\"https://blog.csdn.net/qq_31183297/article/details/79161888\" target=\"_blank\">Sping+SpringMvc+Mybatis+OAuth2.0服务器与客户端实现</a>\n\nspring + rabbitmq + websocket实现实时通知\n```\nwebsocket+RabbitMq完成网页消息的即时推送\nhttps://blog.csdn.net/fsgsggd/article/details/81369625\n\n#spring + rabbitmq + websocket实现实时通知\n#https://blog.csdn.net/qq_28114645/article/details/79009588\n\n<a href=\"https://blog.csdn.net/qq_23250633/article/details/80235056\" target=\"_blank\">springboot+rabbitmq+websocket广播模式进行消息实时推送</a>\n```\n\nspring+struts+hibernate\n```\n<a href=\"https://www.cnblogs.com/yangming1996/p/7894538.html\" target=\"_blank\">Maven 整合 SSH 框架</a>\n```\n    <!--为了使用SpringMVC框架实现REST,需要配置HiddenHttpMethodFilter 实现将post请求转换为put和delete请求 -->\n    <filter>\n\t\t<filter-name>hiddenHttpMethodFilter</filter-name>\n\t\t<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>\n\t</filter>\n\t<filter-mapping>\n\t\t<filter-name>hiddenHttpMethodFilter</filter-name>\n\t\t<url-pattern>/*</url-pattern>\n\t</filter-mapping>\n```\n\n\n【JavaEE】介绍 \"JSF' 的 faces-config.xml\nhttps://blog.csdn.net/zzh920625/article/details/71046442\n\n@Scope(\"prototype\")\n当我们在一个ACTION类里面写很多个方法的时候（其实是一种按功能划分模块编程的思想），每个方法的返回状态可能不一样，如果ACTION中不@Scope(\"prototype\")，有可能报找不到XXXACTION的错误！写上这个就表示每次请求都重新创建一个ACTION，与SINGALON对应，俗称“多例”。\n\n\n```\n\nspring+aop+日志\n\n```\nhttps://www.cnblogs.com/zhanglei93/p/6240840.html\n```\n\n\nspring+solr+mongodb\n```\nspring集成solr并测试\nhttps://blog.csdn.net/fjkxyl/article/details/76492370\n\n\nmongodb菜鸟教程\nhttp://www.runoob.com/mongodb/mongodb-java.html\n\nmongodb下载\nhttp://dl.mongodb.org/dl/win32/x86_64\nhttp://downloads.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-v4.0-latest-signed.msi\n\nmongodb官网\nhttps://www.mongodb.com/download-center?jmp=nav#production\n\n\nsolr测试项目（上）-- 基于maven的springmvc环境搭建(包含log4j.properties)\nhttps://blog.csdn.net/frankcheng5143/article/details/52606380\nhttps://blog.csdn.net/frankcheng5143/article/details/52611127\nhttps://blog.csdn.net/frankcheng5143/article/details/52683112\n```","tags":["spring"]},{"title":"[java] ssm+","url":"/2018/10/16//articles/2018/10/16/1539679553000.html/","content":"<a href=\"https://github.com/judasn/Basic-Single-Module-SSM\" target=\"_blank\">github|精简ssm</a>\n<a href=\"https://blog.csdn.net/silencecarrot/article/details/52435555\" target=\"_blank\">ssm+velocity</a>\n<a href=\"https://blog.csdn.net/silencecarrot/article/details/52435555\" target=\"_blank\">ssm</a>\n\n<a href=\"https://www.cnblogs.com/zyw-205520/p/4771253.html\" target=\"_blank\">SSM框架——详细整合教程（Spring+SpringMVC+MyBatis）</a>\n\n<a href=\"https://pan.baidu.com/s/1dTClhO\" target=\"_blank\">ssm jar包</a>\n提取码\nn4mm\n\n```\n#《淘淘商城》视频教程链接：\nhttp://pan.baidu.com/s/1pLD5vUN\n#密码：\ng2xu\n\n#使用Generator自动生成代码\nhttps://blog.csdn.net/qq_26555463/article/details/77675598\nj8p0\n```","tags":["java"]},{"title":"[源码] 干货集中营","url":"/2018/10/14//articles/2018/10/14/1539510733000.html/","content":"<a href=\"http://www.demodashi.com/\" target=\"_blank\">demo大师</a>\n\n<a href=\"https://blog.csdn.net/pansanday/article/details/42466173\" target=\"_blank\">spring+quartz</a>\n<a href=\"https://github.com/nomico271/AsyncMailSend\" target=\"_blank\">亲测可用!基于Redis消息队列实现的邮件异步发送</a>\n\n<a href=\"https://tool.lu/timestamp/\" target=\"_blank\">时间戳工具</a>\n<a href=\"http://cron.qqe2.com/\" target=\"_blank\">cron在线生成</a>\n\n<a href=\"http://docs.cocos.com/cocos2d-x/manual/zh/\" target=\"_blank\">cocos2d-x官网</a>\n<a href=\"http://www.cocos2d-x.org/download\" target=\"_blank\">cocos2d-x官网下载</a> \n<a href=\"http://cocos2d-x.org/filedown/cocos2d-x-3.17.zip\" target=\"_blank\">cocos2d-x-3.17.zip</a>\n\n<a href=\"https://pay.weixin.qq.com/wiki/tools/signverify/\" target=\"_blank\">微信公众平台支付接口调试工具</a>\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/open.html#wxgetuserinfoobject\" target=\"_blank\">小程序官方授权登陆文档</a>\n<a href=\"https://blog.csdn.net/qq_34827048/article/details/77990510\" target=\"_blank\">授权登陆</a>\n\n<a href=\"https://www.jianshu.com/p/e8197d4d9880\" target=\"_blank\">前端，Java，产品经理，微信小程序，Python等200g资源合集大放送</a>\n```\n#干货集中营\nhttps://gank.io/\nhttps://www.jianshu.com/p/567924408af8\nhttps://blog.csdn.net/qq_36538012/article/details/79805591\nhttps://blog.csdn.net/qq_36538012/article/details/79805616\nhttp://www.php.cn/xiazai/code/xiaochengxu\nhttps://blog.csdn.net/weixin_36065510/article/details/68328844\n```\n","tags":["源码"]},{"title":"[cocos] cocos2d-x","url":"/2018/10/07//articles/2018/10/07/1538921243000.html/","content":"<a href=\"http://docs.cocos.com/cocos2d-x/manual/zh/\" target=\"_blank\">cocos2d-x官网</a>\n<a href=\"http://www.cocos2d-x.org/download\" target=\"_blank\">cocos2d-x官网下载</a> \n<a href=\"http://cocos2d-x.org/filedown/cocos2d-x-3.17.zip\" target=\"_blank\">cocos2d-x-3.17.zip</a>\n\n","tags":["cocos"]},{"title":"[快应用] 快应用","url":"/2018/10/04//articles/2018/10/04/1538665472000.html/","content":"<a href=\"https://doc.quickapp.cn/\" target=\"_blank\">快应用</a>\n<a href=\"http://quickapp.dcloud.io/#wxconvert\" target=\"_blank\">快应用转换工具 - 小程序转快应用</a>\n纯ui\n```\nhttps://github.com/wuxinzhe/QuixUI.git\n```\n快应用常用组件库\n```\nhttps://github.com/wuxinzhe/Quix.git\n```\n<a href=\"https://www.jianshu.com/p/05dcce08b1ab\" target=\"_blank\">简书|快应用开发资源汇总</a>\n<a href=\"https://www.w3cschool.cn/quickapp/\" target=\"_blank\">w3cschool|quickapp</a>\n<a href=\"https://cnpmjs.org/package/\" target=\"_blank\">cnpmjs包</a>\n<a href=\"https://blog.csdn.net/zhangteng22/article/details/76438776\" target=\"_blank\">检查package.json中dependencies的最新版本</a>\n```\nnpm install -g npm-check-updates\n\n#在快应用源码根目录执行:\n\t\tncu\n\t\t#更新dependencies到新版本:\n\t\tncu -u\n\t\t#更新全部dependencies到最新版本:\n\t\tncu -a\n```\n\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n#常用组件库\ngit clone https://github.com/wuxinzhe/Quix.git\ncd Quix\nnpm install\nnpm uninstall @showings_quix/common\nnpm uninstall @showings_quix/quix_ui\ncnpm install @showings_quix/common\ncnpm install @showings_quix/quix_ui\nnpm install\nnpm run build\n```\n\n","tags":["快应用"]},{"title":"[webpack] webpack搭建前端项目","url":"/2018/10/04//articles/2018/10/04/1538661790000.html/","content":"\n<a href=\"https://blog.csdn.net/lqx_sunhan/article/details/79662069\" target=\"_blank\">webpack搭建前端项目</a>\n```\nnpm install webpack --save -dev #-g #不建议使用全局\n#相关的依赖包\n#babel的包\nnpm install babel babel-loader babel-core babel-preset-es2015 babel-preset-stage-0 --save-dev\nnpm install babel-preset-react --save-dev\n#react的包\nnpm install react react-dom --save-dev\n#在项目根目录新建一个webpack.config.js\n#webpack.config.js\nconst  webpack = require('webpack');\nconst path = require('path');\nmodule.exports = {\n    mode: 'development',\n    // 这个配置是项目的入口文件的配置\n    entry: {\n        myBuild: './src/index.js' \n    },\n    output: {\n        // 这个是指定项目打包后的输出目录,__dirname就是webpack.config.js所在的目录,这里就是打包时打包到项目根目录下的build文件夹下(如没有webpack会自己创建)\n        path: path.resolve(__dirname, './build'),\n        // 这个是关系到我们项目发布后，一些资源的访问路径问题，后面会讲到，而且这个也跟我们开发时候的热部署有关，让他指向我们的打包后的路径就行。\n        publicPath:\"build/\",\n        // 这是打包后的js文件名字,这个[name]就是我们在上面的entry中指定的Key.也就是myBuild\n        filename: '[name].js' \n    },\n    // 这是跟服务相关的配置，具体可以去看官网\n   devServer: {\n       port:9090 //端口你可以自定义\n   },\n   module: {\n\t rules: [\n\t\t {\n\t\t\t test: /\\.js$/,\n\t\t\t exclude: /(node_modules|bower_components)/,\n\t\t\t use: {\n\t\t\t\t loader: 'babel-loader',\n\t\t\t\t options: {\n\t\t\t\t\t presets: [\"es2015\",\"react\",'stage-0']\n\t\t\t\t }\n\t\t\t }\n\t\t },\n\t\t {\n\t\t\t test: /\\.css$/,\n\t\t\t use: [ 'style-loader', 'css-loader' ]\n\t\t },\n\t\t {\n\t\t\t test: /\\.(png|jpg|gif)$/,\n\t\t\t use: [\n\t\t\t\t {\n\t\t\t\t\t loader: 'file-loader',\n\t\t\t\t\t options: {\n\t\t\t\t\t\t name: '[name]_[hash].[ext]',\n\t\t\t\t\t\t outputPath: './img',\n\t\t\t\t\t\t publicPath: 'build/img/'\n\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t ]\n\t\t },\n\t\t {test: /\\.json$/, loader: 'json-loader'},\n\t\t {test: /\\.(woff|woff2|svg|eot|ttf)$/, loader: 'url-loader?limit=50000&name=fonts/[name].[hash].[ext]'}\n        ]\n    }\n}\n\n#在根目录下新建一个index.html\n#index.html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n<meta name=\"renderer\" content=\"webkit\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>react</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n    <script type=\"text/javascript\" src=\"./build/myBuild.js\"></script>\n</body>\n</html>\n#id为app的入口 , build目录为:publicPath \n\n\n#新建一个index.js,这个文件就是我们webpack.config.js中的entry中的文件,若配置时有目录则我们建好相应的目录,我这里的index.js是在src下,所以我们建立一个src的文件夹\n此时的目录结构是这样的,在src下有index.js\n#在index中写入以下代码进行测试\nsetTimeout(() => { alert(\"author: sunh\")}, 1000);\n\nnpm install webpack-cli –-save-dev\n#打包命令\nwebpack\n```","tags":["webpack"]},{"title":"[react-native] 极光推送","url":"/2018/10/04//articles/2018/10/04/1538661785000.html/","content":"<a href=\"https://www.jianshu.com/p/a71512a8f921\" target=\"_blank\">React Native 集成极光推送 jpush-react-native</a>","tags":["react-native"]},{"title":"[react-native] react-native填坑","url":"/2018/10/04//articles/2018/10/04/1538661785000.html/","content":"Could not GET xxx, Received status code 400 from server Bad Request\n<a href=\"https://blog.csdn.net/lqx_sunhan/article/details/82633275\" target=\"_blank\">参考</a>\n```\n#build.gradle中的maven url去远程下载,这里的本地缓存目录\nstart %USERPROFILE%\\.gradle\\caches\\modules-2\\files-2.1\n```\n\n```\nnotepad %USERPROFILE%\\.gradle\\gradle.properties\n\nsystemProp.https.nonProxyHosts=dl.google.com\n#systemProp.https.proxyPort=80\n#systemProp.http.proxyHost=mirrors.neusoft.edu.cn\nsystemProp.http.nonProxyHosts=dl.google.com\n#systemProp.https.proxyHost=mirrors.neusoft.edu.cn\n#systemProp.http.proxyPort=80\n```\n\n<a href=\"https://blog.csdn.net/lqx_sunhan/article/details/82598600\" target=\"_blank\">参考</a>\n```\nhttps://services.gradle.org/distributions/\ndistributionUrl=file:///<...>/gradle-4.0-all.zip\n```\n\n<a href=\"https://www.jianshu.com/p/b0bb42ed69d0\" target=\"_blank\">react-native-video的坑</a>\n```\nyarn add react-native-video\nreact-native link react-native-video\n\nallprojects {\n    repositories {\n        mavenLocal()\n        jcenter()\n        maven {\n            url \"https://maven.google.com\"\n            // url \"$rootDir/../node_modules/react-native/android\"\n        }\n\t\t\n    }\n}\n```\n\n<a href=\"http://www.sunqizheng.com/blog/687.html\" target=\"_blank\">参考</a>\n```\nA problem occurred configuring project ':app'.\n> failed to find Build Tools revision 26.0.1\n#android/app/build.gradle文件中buildToolsVersion \"26.0.1\"改为\"23.0.1\"\n#下载sdk26.0.1\n\nreact-native工程android目录下新建:\nlocal.properties\nsdk.dir=<Sdk路径>\n```\n\n<a href=\"https://blog.csdn.net/f409031mn/article/details/79522129\" target=\"_blank\">react-native-vector-icons的集成</a>\n```\n#npm install --save react-native-vector-icons\n#或\nnpm install -g yarn\nyarn add react-native-vector-icons\n\n#Android平台上的配置\n#react-native link react-native-vector-icons\n#或\nnpm install -g rnpm\nrnpm link react-native-vector-icons\n```\n\nreact-devtools\n```\n#npm install -g react-devtools #--save-dev\nyarn add react-devtools\n\n#chrome插件\ngit clone https://github.com/facebook/react-devtools.git\ncd react-devtools\nnpm --registry https://registry.npm.taobao.org install\nnpm run build:extension:chrome\n\n#配置package.json中命令\n#编辑package.json文件,在scripts节点中增加devtools节点\n\"devtools\": \"react-devtools\"\n```\n\n<a href=\"https://blog.csdn.net/u012539700/article/details/79951605\" target=\"_blank\">Could not find method google() for arguments [] on repository container</a>\n```\n#替换gradle-wrapper.properties里面\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip\n```\n\n<a href=\"https://blog.csdn.net/sinat_31057219/article/details/78660905\" target=\"_blank\">failed to find build tools revision 26.0.1</a>\n```\n通过AS下载sdk tools 26.0.1\n```\n\n<a href=\"https://www.nativebase.io/\" target=\"_blank\">native-base官网</a>\n```\n#native-base是一个RN的基础组件集合\nnpm install native-base --save\nnpm install @expo/vector-icons --save\n```\n\nUnable to resolve module `@babel/runtime/helpers/interopRequireDefault\n```\nnpm uninstall -g @babel/runtime\nnpm install --save-dev @babel/runtime\n```","tags":["react-native"]},{"title":"[maven] nexus私有仓库搭建","url":"/2018/10/04//articles/2018/10/03/1538617315000.html/","content":"<a href=\"https://www.sonatype.com/download-sonatype-trial\" target=\"_blank\">nexus官网</a>\n<a href=\"https://www.sonatype.com/oss-thank-you-zip\" target=\"_blank\">nexus-2.14.1-01-bundle.zip</a>\n<a href=\"https://www.sonatype.com/oss-thank-you-win64.zip\" target=\"_blank\">nexus-3.13.0-01-win64.zip</a>\n```\n######## nexus-3.13 start ########\n#启动时间较长,请耐心等待\nnexus.exe /run\n#nexus.exe /install nexus3\n#nexus.exe /start\n#nexus.exe /stop\n#nexus.exe /status\n#nexus.exe /restart\n######## nexus-3.13 end ########\n\n访问\n127.0.0.1:8081/\n默认账号:\nadmin\n密码:\nadmin123\n```\n\nmaven仓库\n```\nhttps://repo1.maven.org/maven2/\nhttps://repo2.maven.org/maven2/\nhttp://maven.yonyoucloud.com/nexus/content/repositories/public/\nhttp://maven.aliyun.com/nexus/content/groups/public\n```\n\n<a href=\"https://blog.csdn.net/zouqingfang/article/details/48732481\" target=\"_blank\">使用nexus创建maven私有仓库</a>\n<a href=\"https://blog.csdn.net/cool_summer_moon/article/details/78779530\" target=\"_blank\">Nexus3.6 window版私服搭建安装、配置教程</a>\n<a href=\"https://blog.csdn.net/clj198606061111/article/details/52200928\" target=\"_blank\">maven私库nexus3安装及使用</a>\n\n```\n#访问的仓库类型： \nhosted 宿主仓库：主要用于部署无法从公共仓库获取的构件以及自己或第三方的项目构件;\nproxy 代理仓库：代理公共的远程仓库;\ngroup 仓库组：Nexus 通过仓库组统一管理多个仓库,这样我们在项目中直接请求仓库组即可请求到仓库组管理的多个仓库.\n\n简单的说,可以上传私有的项目到hosted,以及配置proxy以获取第三方的依赖（比如可以配置中央仓库的地址）.前面两个都弄好了之后,在通过group聚合给客户提供统一的访问地址.\n\nNexus预定义了2个本地仓库,\nmaven-releases:可以存放自己项目中发布的构建, 通常是Release版本的.\nmaven-snapshots:可以发布那些非release版本, 非稳定版本.\n```\n\n```\nmvn package clean\nmvn deploy -e\n```\n\n<a href=\"https://blog.csdn.net/qq_34531925/article/details/80165977\" target=\"_blank\">Failed to transfer file 与 Return code is 处理</a>\npom.xml\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>{{项目名}}</groupId>\n    <artifactId>{{包名}}</artifactId>\n    <packaging>{{打包方式}}</packaging>\n    <version>1.0-SNAPSHOT</version>\n\n    <build>\n        <finalName>{{项目名}}</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>1.7</source>\n                    <target>1.7</target>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <configuration>\n                    <skip>true</skip>\n                </configuration>\n            </plugin>\n        </plugins>\n        <defaultGoal>compile</defaultGoal>\n    </build>\n\n    <distributionManagement>\n        <repository>\n            <id>nexus</id>\n            <name>Releases</name>\n            <url>http://localhost:8081/repository/maven-public/</url>\n        </repository>\n        <snapshotRepository>\n            <id>nexus</id>\n            <name>Snapshots</name>\n            <url>http://localhost:8081/repository/maven-snapshots/</url>\n        </snapshotRepository>\n    </distributionManagement>\n</project>\n```\n\nsettings.xml\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">\n\n    <localRepository>{{本地maven仓库地址}}</localRepository>\n    <pluginGroups>\n        <pluginGroup>org.sonatype.plugins</pluginGroup>\n    </pluginGroups>\n    <servers>\n        <server>\n            <!--这是server的id（注意不是用户登陆的id）,该id与distributionManagement中repository元素的id相匹配. -->\n            <id>nexus</id>\n            <username>admin</username>\n            <password>admin123</password>\n        </server>\n    </servers>\n\n    <mirrors>\n        <mirror>\n            <id>nexus</id>\n            <mirrorOf>*</mirrorOf>\n            <url>http://localhost:8081/repository/maven-public/</url>\n        </mirror>\n        <mirror>\n            <id>repo2</id>\n            <mirrorOf>central</mirrorOf>\n            <url>http://repo2.maven.org/maven2/</url>\n        </mirror>\n    </mirrors>\n\n    <profiles>\n        <profile>\n            <id>nexus</id>\n            <!--远程仓库列表,它是Maven用来填充构建系统本地仓库所使用的一组远程项目.  -->\n            <repositories>\n                <!--发布版本仓库-->\n                <repository>\n                    <id>nexus</id>\n                    <!--地址是nexus中repository（Releases/Snapshots）中对应的地址-->\n                    <url>http://127.0.0.1:8081/repository/maven-public/</url>\n                    <!--true或者false表示该仓库是否为下载某种类型构件（发布版,快照版）开启. -->\n                    <releases>\n                        <enabled>true</enabled>\n                    </releases>\n                    <snapshots>\n                        <enabled>true</enabled>\n                    </snapshots>\n                </repository>\n            </repositories>\n\n            <pluginRepositories>\n                <pluginRepository>\n                    <id>central</id>\n                    <url>http://repo2.maven.org/maven2/</url>\n                    <releases>\n                        <enabled>true</enabled>\n                    </releases>\n                    <snapshots>\n                        <enabled>true</enabled>\n                    </snapshots>\n                </pluginRepository>\n            </pluginRepositories>\n        </profile>\n    </profiles>\n\n    <!--激活配置-->\n    <activeProfiles>\n        <!--profile下的id-->\n        <activeProfile>nexus</activeProfile>\n    </activeProfiles>\n</settings>\n```","tags":["maven"]},{"title":"[maven] maven","url":"/2018/10/03//articles/2018/10/03/1538523137000.html/","content":"<a href=\"https://www.cnblogs.com/charlesblc/p/6104804.html\" target=\"_blank\">国内maven库镜像（阿里云）</a>\n<a href=\"https://www.cnblogs.com/xxt19970908/p/6685777.html\" target=\"_blank\">maven阿里云中央仓库</a>\npom使用repositories\n```\n    <repositories>\n        <repository>\n            <id>aliyunmaven</id>\n            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n        </repository>\n        <repository>\n            <id>spring-milestones</id>\n            <name>Spring Milestones</name>\n            <url>https://repo.spring.io/libs-milestone</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>spring-libs-snapshot</id>\n            <url>https://repo.spring.io/libs-snapshot</url>\n        </repository>\n    </repositories>\n    <pluginRepositories>\n        <pluginRepository>\n            <id>alfresco-public</id>\n            <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>\n        </pluginRepository>\n        <pluginRepository>\n            <id>alfresco-public-snapshots</id>\n            <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>daily</updatePolicy>\n            </snapshots>\n        </pluginRepository>\n        <!--<pluginRepository>-->\n            <!--<id>beardedgeeks-releases</id>-->\n            <!--<url>http://beardedgeeks.googlecode.com/svn/repository/releases</url>-->\n        <!--</pluginRepository>-->\n        <pluginRepository>\n            <id>spring-plugins-release</id>\n            <url>https://repo.spring.io/plugins-release</url>\n        </pluginRepository>\n    </pluginRepositories>\n```\n<a href=\"https://www.cnblogs.com/rexfang/p/7625696.html\" target=\"_blank\">Nexus 私有仓库搭建与 Maven 集成</a>\n<a href=\"https://blog.csdn.net/boling_cavalry/article/details/79059021\" target=\"_blank\">实战maven私有仓库三部曲之一：搭建和使用</a>\n\n```\nhttps://www.sonatype.com/download-oss-sonatype\ncd bin\nnexus install\n#安装完成后,浏览器访问:\nhttp://localhost:8081/nexus \n#默认账号:\nadmin\n#密码\nadmin123\n\n\n左边 Views/Repositories 菜单下的 Repositories\n->\n\n```\n","tags":["maven"]},{"title":"[ios] ios","url":"/2018/10/03//articles/2018/10/03/1538523280000.html/","content":"<a href=\"https://blog.csdn.net/qq_31810357?t=1\" target=\"_blank\">ios</a>","tags":["ios"]},{"title":"[python] python","url":"/2018/10/03//articles/2018/10/03/1538523270000.html/","content":"<a href=\"https://blog.csdn.net/yanbober\" target=\"_blank\">python</a>","tags":["python"]},{"title":"[springboot] springboot","url":"/2018/10/03//articles/2018/10/03/1538523250000.html/","content":"<a href=\"https://github.com/ityouknow/spring-boot-examples\" target=\"_blank\">Spring Boot Examples</a>\n<a href=\"https://gitee.com/y_project/RuoYi\" target=\"_blank\">RuoYi</a>","tags":["springboot"]},{"title":"[cocos] CocosCreator教程","url":"/2018/10/03//articles/2018/10/03/1538523240000.html/","content":"<a href=\"https://www.byjth.com/CocosCreator/66.html\" target=\"_blank\">CocosCreator教程</a>","tags":["cocos"]},{"title":"[npm] cnpmjc和sinopia搭建私有仓库","url":"/2018/10/03//articles/2018/10/03/1538523230000.html/","content":"<a href=\"https://blog.csdn.net/achenyuan/article/details/82813512\" target=\"_blank\">cnpmjc和sinopia搭建私有仓库</a>","tags":["npm"]},{"title":"[js] js实现map","url":"/2018/10/03//articles/2018/10/03/1538523220000.html/","content":"<a href=\"https://www.cnblogs.com/mingforyou/p/7153706.html\" target=\"_blank\">js实现map</a>\n<a href=\"https://blog.csdn.net/zhangli865621030/article/details/45307087\" target=\"_blank\">JS中的Map基本操作</a>\n<a href=\"https://github.com/BrighterEyer/Chess/blob/master/js/commons.js\" target=\"_blank\">JS中的Map基本操作</a>\n\n\n小程序HashMap.js\n```\nvar app = getApp();\n\n/** js实现hashmap数据结构 */\nclass HashMap {\n\n  constructor() {\n    /** 存放键的数组(遍历用到) */\n    this.keys = new Array();\n    /** 存放数据 */\n    this.data = new Object();\n  }\n\n  /**\n   * 放入一个键值对   \n   * @param {String} key   \n   * @param {Object} value   \n   */\n  put(key, value) {\n    if (this.data[key] == null) {\n      this.keys.push(key);\n    }\n    this.data[key] = value;\n  }\n\n  /**   \n   * 获取某键对应的值   \n   * @param {String} key   \n   * @return {Object} value   \n   */\n  get(key) {\n    return this.data[key];\n  }\n\n  /**   \n   * 删除一个键值对   \n   * @param {String} key   \n   */\n  remove(key) {\n    this.keys.remove(key);\n    this.data[key] = null;\n    //\t\tdelete this.data[key];\n  }\n\n  /**   \n   * 遍历Map,执行处理函数   \n   * @param {Function} 回调函数 function(key,value,index){..}   \n   */\n  each(fn) {\n    if (typeof fn != 'function') {\n      return;\n    }\n    var len = this.keys.length;\n    for (var i = 0; i < len; i++) {\n      var k = this.keys[i];\n      fn(k, this.data[k], i);\n    }\n  }\n\n  /**   \n   * 获取键值数组(类似Java的entrySet())   \n   * @return 键值对象{key,value}的数组   \n   */\n  entrys() {\n    var len = this.keys.length;\n    var entrys = new Array(len);\n    for (var i = 0; i < len; i++) {\n      entrys[i] = {\n        key: this.keys[i],\n        value: this.data[i]\n      };\n    }\n    return entrys;\n  }\n\n  /**   \n   * 判断Map是否为空   \n   */\n  isEmpty() {\n    return this.keys.length == 0;\n  }\n\n  /**   \n   * 获取键值对数量   \n   */\n  size() {\n    return this.keys.length;\n  }\n\n  /**   \n   * 重写toString    \n   */\n  toString() {\n    var s = \"{\";\n    for (var i = 0; i < this.keys.length; i++, s += ',') {\n      var k = this.keys[i];\n      s += k + \"=\" + this.data[k];\n    }\n    s += \"}\";\n    return s;\n  }\n}\n\nexport default HashMap;\n```","tags":["js"]},{"title":"[简历] java程序员简历","url":"/2018/10/03//articles/2018/10/03/1538523210000.html/","content":"<a href=\"https://github.com/chenxingxing6/readmecxx/blob/master/README.md\" target=\"_blank\">README.md|蓝星花</a>\n<a href=\"https://blog.csdn.net/m0_37499059/\" target=\"_blank\">csdn|蓝星花</a>\n<a href=\"https://gitee.com/chenxingxing6/pms\" target=\"_blank\">蓝星花</a>\n\n","tags":["简历"]},{"title":"[npm] ionic2","url":"/2018/10/03//articles/2018/10/03/1538523200000.html/","content":"<a href=\"https://blog.csdn.net/aiyishengyishi/article/details/78045240\" target=\"_blank\">ionic2</a>","tags":["npm"]},{"title":"[jsp] jsp","url":"/2018/10/03//articles/2018/10/03/1538523190000.html/","content":"<a href=\"https://blog.csdn.net/column/details/13938.html\" target=\"_blank\">jsp</a>\n","tags":["jsp"]},{"title":"[svn] svn获取指定版本号","url":"/2018/10/03//articles/2018/10/03/1538523180000.html/","content":"```\nsvn update -r r<版本数字> <文件名>\n```","tags":["svn"]},{"title":"[git] gitbash闪退","url":"/2018/10/03//articles/2018/10/03/1538523160000.html/","content":"```\n#报错:\n#fatal: open /dev/null or dup failed: No Such file or directory\n若以下方法解决不了,应当重装电脑\n```\n<a href=\"https://pan.baidu.com/s/11N_Dtnv5Twn9LFQFoIytjg\" target=\"_blank\">null.sys</a>\n提取码:\n```\nctrn\n```\n\n```\n#非即插即用驱动文件null.sys问题\n#null.sys位置:C:\\Windows\\System32\\drivers\\null.sys\ncd C:\\Windows\\System32\n#以管理员身份运行cmd.exe\n#sfc /scannow\nDISM.exe /Online /Cleanup-image /Scanhealth\nDISM.exe /Online /Cleanup-image /Restorehealth\nsfc /scannow\n\nhttps://blog.csdn.net/sdhongjun/article/details/52134172\n右键点击\"我的电脑\"->管理->计算机管理(本地)->系统工具->设备管理器，勾选显示隐藏的设备： \n```","tags":["git"]},{"title":"[java] websocket","url":"/2018/10/03//articles/2018/10/03/1538523150000.html/","content":"<a href=\"https://blog.csdn.net/yjc_1111/article/details/78831610\" target=\"_blank\">WebSocket的两种简单实现，Html5与STOMP</a>","tags":["java"]},{"title":"[ngrok] ngrok搭建","url":"/2018/10/03//articles/2018/10/03/1538523140000.html/","content":"<a href=\"https://blog.csdn.net/zhangguo5/article/details/77848658\" target=\"_blank\">一分钟实现内网穿透（ngrok服务器搭建）</a>\n<a href=\"https://blog.csdn.net/yjc_1111/article/details/79353718\" target=\"_blank\">10分钟教你搭建自己的ngrok服务器</a>\n<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\">frp</a>\n<a href=\"http://ngrok.ciqiuwl.cn/\" target=\"_blank\">小米球</a>\n<a href=\"http://www.ngrok.cn/\" target=\"_blank\">ngrok中文</a>\n<a href=\"https://www.ngrok.cc/\" target=\"_blank\">Sunny-Ngrok</a>\n<a href=\"\" target=\"_blank\"></a>\n\n```\n#https://github.com/inconshreveable/ngrok\n\nmkdir ngrok\napt-get update\napt-get install git golang\ngit clone https://github.com/inconshreveable/ngrok.git ngrok\n\n\n域名添加A记录\n将*.ngrok与ngrok指向服务器公网ip\n\n#设置环境变量，Go语言的安装位置\nexport GOPATH=/usr/local/ngrok/\nexport NGROK_DOMAIN=\"ngrok.<域名>\"\n#为域名生成证书\nopenssl genrsa -out rootCA.key 2048\nopenssl req -x509 -new -nodes -key rootCA.key -subj \"/CN=$NGROK_DOMAIN\" -days 5000 -out rootCA.pem\nopenssl genrsa -out server.key 2048\nopenssl req -new -key server.key -subj \"/CN=$NGROK_DOMAIN\" -out server.csr\nopenssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000\n\n#拷贝证书到指定位置\ncp rootCA.pem assets/client/tls/ngrokroot.crt\ncp server.crt assets/server/tls/snakeoil.crt\ncp server.key assets/server/tls/snakeoil.key\n\n#########   编译 start   #########\n#86位\n#win服务端\nGOOS=windows GOARCH=386 make release-server \n#win客户端\nGOOS=windows GOARCH=386 make release-client\n#linux服务端\nGOOS=linux GOARCH=386 make release-server\n#linux客户端\nGOOS=linux GOARCH=386 make release-client\n\n#64位\n#win服务端\nGOOS=windows GOARCH=amd64 make release-server \n#win客户端\nGOOS=windows GOARCH=amd64 make release-client\n#linux服务端\nGOOS=linux GOARCH=amd64 make release-server\n#linux客户端\nGOOS=linux GOARCH=amd64 make release-client\n\n#########   编译 end   #########\nls bin\n\n\n#编辑服务端启动脚本\nvim start_ngrokd.sh\n#!/bin/bash\n./bin/ngrokd -tlsKey=\"snakeoil.key\" -tlsCrt=\"snakeoil.crt\" -domain=\"ngrok.<域名>\" -httpAddr=\":801\" -httpsAddr=\":802\" #-tunnelAddr=\":4443\"\n\n\n#一键部署ngrok服务器（CentOS、Debian、Ubuntu）\nhttps://github.com/clangcn/ngrok-one-key-install\n\n\n#编辑ngrok配置文件\nnotepad ngrok.cfg\nserver_addr: \"ngrok.<域名>:4443\"\ntrust_host_root_certs: false\n#\nngrok.exe -subdomain <二级域名> -config=ngrok.cfg <客户端端口>\n```\n<a href=\"http://freenat.win/\" target=\"_blank\">免费frp内网穿透服务</a>\n<a href=\"https://www.jianshu.com/p/405fed75486c\" target=\"_blank\">Ngrok配置和使用</a>\n\n\n","tags":["ngrok"]},{"title":"[linux] Linux禁止IP、解封IP的方法","url":"/2018/10/03//articles/2018/10/03/1538523130000.html/","content":"```\n#屏蔽单个IP的命令是\niptables -I INPUT -s 123.45.6.7 -j DROP\n#封IP段即从123.45.6.1到123.45.6.254的命令是\niptables -I INPUT -s 123.45.6.0/24 -j DROP\n#封IP段即从123.45.0.1到123.45.255.254的命令\niptables -I INPUT -s 124.45.0.0/16 -j DROP\n#封整个段即从123.0.0.1到123.255.255.254的命令\niptables -I INPUT -s 123.0.0.0/8 -j DROP\n#指令I是insert指令\niptables-save\n```","tags":["linux"]},{"title":"[前端] 常用框架","url":"/2018/10/03//articles/2018/10/03/1538523120000.html/","content":"<a href=\"https://www.layui.com/doc/\" target=\"_blank\">layui</a>\namaze ~ 妹子 UI\nHTML5 跨屏前端框架\n<a href=\"http://amazeui.org/\" target=\"_blank\">amaze</a>\n<a href=\"http://echarts.baidu.com/examples/\" target=\"_blank\">echarts</a>\n<a href=\"http://echarts.baidu.com/echarts2/doc/example/gauge1.html\">echarts仪表盘</a>\n<a href=\"https://blog.csdn.net/qq_36330228/article/details/79945928\">echarts柱状图</a>\n前端，Java，产品经理，微信小程序，Python等200g资源合集大放送\n```\nhttps://blog.csdn.net/qq_36538012/article/details/79852664\n```\n\n","tags":["前端"]},{"title":"[小程序] wxs时间戳转换日期","url":"/2018/10/03//articles/2018/10/03/1538523120000.html/","content":"<a href=\"https://blog.csdn.net/u010651383/article/details/82810185\" target=\"_blank\">\n微信小程序-wxs实现时间格式化过滤器（正则）</a>\n","tags":["小程序"]},{"title":"[小程序] 微信小程序","url":"/2018/10/03//articles/2018/10/03/1538523120000.html/","content":"<a href=\"https://blog.csdn.net/nideshijian/article/details/54693323\" target=\"_blank\">小程序搭建</a>\n\n微信小程序java后台接口\n```\nhttps://blog.csdn.net/weixin_40099554/article/details/80003058\n```\n\n\n微信小程序获取当前页面的路径的方式\n```\n#使用getCurrentPages可以获取当前加载中所有的页面对象的一个数组，数组最后一个就是当前页面。\n\n#获取加载的页面\nvar pages = getCurrentPages();\n#获取当前页面的对象\nvar currentPage = pages[pages.length-1];\n#当前页面url\nvar url = currentPage.route;\n#如果要获取url中所带的参数可以查看options\nvar options = currentPage.options;\n```\n<a href=\"http://www.wxapp-union.com\" targer=\"_blank\">小程序社区</a>\n<a href=\"http://pan.baidu.com/s/1c2qTFUw\" targer=\"_blank\">小程序手册</a>\n提取码：\nikms\n\n<a href=\"http://www.lanrenmb.com/x/wenhuajiaoyu/4785.html\" targer=\"_blank\">小程序懒人模板</a>\n<a href=\"https://blog.csdn.net/tommenx/article/details/79773101\" targer=\"_blank\">CSDN|考勤签到小程序</a>\n<a href=\"http://www.cnblogs.com/kevinCoder/p/8961748.html\" targer=\"_blank\">小程序：如何在wxml页面中调用JavaScript函数</a>\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxs/\" targer=\"_blank\">小程序官方:WXS</a>\n<a href=\"https://github.com/Tencent/weui-wxss\" targer=\"_blank\">官方github小程序样式库</a>\n<a href=\"https://help.aliyun.com/document_detail/59210.html?spm=5176.sms-account.108.3.22ed1cbefyaGGJ\" target=\"_blank\">阿里云短信服务文档使用指引</a>\n<a href=\"https://github.com/BeijiYang/minaSmsVerification\" target=\"_blank\">基于阿里云的 微信小程序 短信验证 功能模块</a>\n\n<a href=\"https://mp.weixin.qq.com/\" target=\"_blank\">微信公众平台</a>\n<a href=\"https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_3&index=1\" target=\"_blank\">小程序支付开发步骤</a>\n<a href=\"https://blog.csdn.net/zhuming3834/article/details/73168056\" target=\"_blank\">微信小程序开发(五)小程序支付-统一下单</a>\n<a href=\"https://blog.csdn.net/futruejet/article/details/72965429\" target=\"_blank\">微信小程序例子——获取用户唯一标识openid</a>\n","tags":["小程序"]},{"title":"[前端] 技巧","url":"/2018/10/03//articles/2018/10/03/1538523120000.html/","content":"h5语音\n```\n<!DOCTYPE html>\n<html>\n<head>\n\t<title></title>\n\t<meta charset=\"utf-8\">\n</head>\n<body>\n    <input type=\"text\" id=\"ttsText\" value=\"你好我的男朋友\">\n    <input type=\"button\" id=\"tts_btn\" onclick=\"doTTS()\" value=\"播放\">\n    <script>\n    function doTTS() {\n        var mess = document.getElementById('ttsText').value;\n        var msg = new SpeechSynthesisUtterance(mess);\n        msg.volume = 100;\n        msg.rate = 1;\n        msg.pitch = 1.5;\n        console.log(msg);\n        window.speechSynthesis.speak(msg);\n    }\n    </script>\n</body>\n</html>\n```\n<a href=\"http://www.jq22.com/jquery/jquery.html\">让IE浏览器支持HTML5标准</a>\nhtml div等比例缩小\n```\ndiv{transform: scale(0.5,0.5);-ms-transform: scale(0.5,0.5);}\n```\n百度语音合成接口demo\n```\nhttp://ai.baidu.com/aidemo?type=tns&spd=5&pit=5&vol=5&per=0&tex=thanks you\n```\n<a href=\"https://blog.csdn.net/lhc1105/article/details/44754259\">H5 利用navigator+Video调用摄像头进行录像</a>\n<a href=\"http://naotu.baidu.com/home\">百度脑图</a>\n<a href=\"https://blog.csdn.net/csdn_xuexiaoqiang/article/details/53502529\">HTML复选框checkbox默认样式修改</a>\n<a href=\"https://www.html5tricks.com/\">html5tricks</a>\n","tags":["前端"]},{"title":"[工具] 在线工具","url":"/2018/10/02//articles/2018/10/02/1538438401000.html/","content":"<a href=\"http://www.it1352.com/OnLineTools/Index\" target=\"_blank\">IT屋</a>\n<a href=\"https://tool.lu/\" target=\"_blank\">在线工具</a>\n\n","tags":["工具"]},{"title":"[博客] 博客收集","url":"/2018/10/01//articles/2018/10/01/1538366260581.html/","content":"<a href=\"http://www.stormjie.top/\" target=\"_blank\">java设计模式|stormjie</a>\n<a href=\"https://www.jellythink.com/\" target=\"_blank\">果冻想</a>\n<a href=\"https://www.jellythink.com/archives/category/tool-tutorials/postman\" target=\"_blank\">postman</a>\n<a href=\"https://blog.csdn.net/acmman\" target=\"_blank\">程序员之洞</a>\n<a href=\"https://blog.csdn.net/column/details/15759.html\" target=\"_blank\">Java Web开发的基本原理剖析</a>\n<a href=\"http://www.sunqizheng.com/\" target=\"_blank\">一名90后博主</a>\n<a href=\"https://blog.csdn.net/sinat_31057219?t=1\" target=\"_blank\">Android|原创较多|火星男孩</a>\n<a href=\"https://blog.csdn.net/itcast_cn?t=1\" target=\"_blank\">CSDN|传智播客</a>\n<a href=\"https://blog.csdn.net/vv_bug/article/details/79551403\" target=\"_blank\">React|vv_小虫</a>\n<a href=\"https://bougieblog.cn/spider/Qk9VMzc3NkdJRQ.html\" target=\"_blank\">Bougie's Blog</a>\n<a href=\"https://me.csdn.net/chwshuang\" target=\"_blank\">大大的微笑的专栏</a>","tags":["博客"]},{"title":"[hexo] github + hexo","url":"/2018/10/01//articles/2018/10/01/1538358849873.html/","content":"<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\">hexo中文官网</a>\n<a href=\"https://www.cnblogs.com/visugar/p/6821777.html\" target=\"_blank\">hexo</a>\n<a href=\"https://blog.csdn.net/Greenovia/article/details/60576985\" target=\"_blank\">解决用Hexo和GitHub搭建博客时hexo d命令报错问题</a>\n```\ngit config --global user.name \"用户名\"\ngit config --global user.email \"邮箱地址\"\nssh-keygen -t rsa -C \"邮箱地址\"\ncd ~/.ssh\nssh -T git@github.com\n\n#hexo配置\nnpm install hexo-deployer-git --save\nvim _config.yml\n#\ndeploy:\n type: git\n #这里的repo需要设置成git仓库的ssh链接,github用户名注意区分大小写\n repo: git@github.com:<github用户名>/<github用户名>.github.io.git\n branch: master\n\n#网站部署\nhexo clean  #清除缓存文件db.json和已生成的静态文件public\nhexo g   #生成网站静态文件到默认设置的public文件夹\nhexo d   #部署网站到设定的仓库\n```\n\n<a href=\"http://visugar.com/2017/08/01/20170801HexoPlugins/\" target=\"_blank\">Hexo博客添加SEO-评论系统-阅读统计-站长统计</a>\n<a href=\"https://ziyuan.baidu.com\" target=\"_blank\">百度站长统计</a>\n<a href=\"https://www.jianshu.com/p/465830080ea9\" target=\"_blank\">hexo+github,搭建属于自己的博客</a>\n<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\">hexo主题</a>\n[Cover](https://link.jianshu.com?t=https://github.com/daisygao/hexo-themes-cover)- A chic theme with facebook-like cover photo\n[Oishi](https://link.jianshu.com?t=https://github.com/henryhuang/oishi)- A white theme based on Landscape plus and Writing.\n[Sidebar](https://link.jianshu.com?t=https://github.com/hardywu/hexo-theme-sidebar)- Another theme based on Light with a simple sidebar\n[TKL](https://link.jianshu.com?t=https://github.com/SuperKieran/TKL)- A responsive design theme for Hexo. 一个设计优雅的响应式主题\n[Tinnypp](https://link.jianshu.com?t=https://github.com/levonlin/Tinnypp)- A clean, simple theme based on Tinny\n[Writing](https://link.jianshu.com?t=https://github.com/yunlzheng/hexo-themes-writing)- A small and simple hexo theme based on Light\n[Yilia](https://link.jianshu.com?t=https://github.com/litten/hexo-theme-yilia)- Responsive and simple style 优雅简洁响应式主题，我用得就是这个\n[Pacman voidy](https://link.jianshu.com?t=https://github.com/Voidly/pacman)- A theme with dynamic tagcloud and dynamic snow\n\n\n","tags":["hexo"]},{"title":"[github]windows github ssh-key","url":"/2018/10/01//articles/2018/10/01/1538358532907.html/","content":"\n<a href=\"https://git-scm.com/downloads\" target=\"_blank\">git bash</a>\n```\ngit config --global user.name \"用户名\"\ngit config --global user.email \"邮箱地址\"\nssh-keygen -t rsa -C \"邮箱地址\"\ncd ~/.ssh\nssh -T git@github.com\n\necho \"# hexo\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/<github用户名>/hexo.git\ngit push -u origin master\n```","tags":["github"]},{"title":"[工具] 时间戳转换","url":"/2018/10/01//articles/2018/10/01/1538352002000.html/","content":"<a href=\"http://tool.chinaz.com/Tools/unixtime.aspx\" target=\"_blank\">站长工具</a>","tags":["工具"]},{"title":"[二维码] 微信二维码生成","url":"/2018/10/01//articles/2018/10/01/1538352001000.html/","content":"\n\n<a href=\"https://cli.im/weixin\" target=\"_blank\">草料二维码</a>","tags":["二维码"]},{"title":"[chrome] 插件大全","url":"/2018/10/01//articles/2018/10/01/1538326137822.html/","content":"\n```\nhttp://chromecj.com/\n```\n<a href=\"http://www.cnplugins.com/devtool/postman/\" target=\"_blank\">postman插件</a>\n\n详解\n```\nhttps://www.jianshu.com/p/35678284ce78\nhttps://www.cnblogs.com/mafly/p/postman.html\nhttp://chromecj.com/utilities/2015-04/423/download.html\nhttp://dl.google.com/dl/edgedl/chrome/policy/policy_templates.zip\nhttp://chromecj.com/Handler/Download/423\n```\n\n```\nhttps://gitee.com/oschina/GitCodeTree\nhttps://gitee.com/oschina/GitCodeTree/tree/master/dist\n```","tags":["chrome"]},{"title":"[vpn] ssserver","url":"/2018/09/30//articles/2018/09/30/1538322120355.html/","content":"\n<a href=\"https://blog.csdn.net/dongdingzhuo/article/details/79537900\" target=\"_blank\">CentOS 7 安装 shadowsocks</a>\n```\n#客户端下载\nhttps://github.com/shadowsocks/shadowsocks-windows/releases\n\n#一键安装\nbash <(curl -s http://morning.work/examples/2015-12/install-shadowsocks.sh)\n```\n<a href=\"https://jingyan.baidu.com/article/0aa22375866c8988cc0d648c.html\" target=\"_blank\">windows设置代理</a>\n","tags":["vpn"]},{"title":"[服务器] 服务器","url":"/2018/09/30//articles/2018/09/30/1538316890381.html/","content":"<a href=\"http://www.laozuo.org/\" target=\"_blank\">老左</a>","tags":["服务器"]},{"title":"[react-native] react-native expo create-react-native-app","url":"/2018/09/30//articles/2018/09/30/1538306511939.html/","content":"<a href=\"https://www.jianshu.com/p/6e3b5fb60211\" target=\"_blank\">React Native高效开发</a>\n<a href=\"https://expo.io/learn\" target=\"_blank\">React Native之expo</a>\n<a href=\"https://snack.expo.io/\" target=\"_blank\">expo在线运行</a>\n<a href=\"https://nodejs.org/\" target=\"_blank\">nodejs</a>\n<a href=\"https://github.com/expo/xde/releases\" target=\"_blank\">xde</a>\n<a href=\"https://github.com/expo/expo-cli/releases\" target=\"_blank\">expo-cli</a>\n\n```\n#因为版本号是2.0.1+，到后期运行react-native项目会报错\n#npm install -g react-native-cli\n#卸载已经安装的react-native-cli\nnpm uninstall -g react-native-cli\nnpm install react-native@0.55.4\nnpm install -g react-native-cli@1.2.0\n```\n\n<a href=\"https://www.jianshu.com/p/dfec60a479ec\" target=\"_blank\">React Native 开发之IDE</a>\n```\n#react-native\nnpm config set registry https://registry.npm.taobao.org --global\nnpm config set disturl https://npm.taobao.org/dist --global\nnpm install -g yarn react-native-cli\nyarn config set registry https://registry.npm.taobao.org --global\nyarn config set disturl https://npm.taobao.org/dist --global\nreact-native init AwesomeProject\ncd AwesomeProject\nreact-native run-android\n\n#expo\nnpm install expo-cli --global\nexpo init demo\ncd demo\nexpo start\n\n#create-react-native-app,版本:node >= 6.0、npm >= 4.0、react-native-cli、git\nnpm i -g create-react-native-app\n#dos终端下执行\ncreate-react-native-app demo\ncd demo\nnpm start\n```\n\n","tags":["react-native"]},{"title":"[genymotion] genymotion2.12","url":"/2018/09/30//articles/2018/09/30/1538296725436.html/","content":"<a href=\"https://dl.genymotion.com/releases/genymotion-2.12.2/genymotion-2.12.2.exe\" target=\"_blank\">genymotion2.12</a>\n<a href=\"https://pan.baidu.com/s/1lkNDElk0BsJ-REHV-PQC1A\" target=\"_blank\">crack</a>\n密码:frnq\n\n\n安装步骤:\n1. 先安装<a href=\"http://download.virtualbox.org/virtualbox/5.1.22/VirtualBox-5.1.22-115126-Win.exe\" target=\"_blank\">VirtualBox-5.1.22</a>\n2. 再安装 Genymotion   genymotion-2.12.0.exe\n3. 覆盖文件  genymotion.exe genyshell.exe player.exe\n4. 帐号登录,下载模拟器\n\n\n<a href=\"https://www.jianshu.com/p/48b5d731adfb\" target=\"_blank\">Android Studio与Genymotion的配置</a>","tags":["genymotion"]},{"title":"[react-native] windows配置react-native","url":"/2018/09/30//articles/2018/09/30/1538295697450.html/","content":"\n<a href=\"https://reactnative.cn/docs/getting-started.html\" target=\"_blank\">官网</a>\n<a href=\"https://www.cnblogs.com/yuying0527/archive/2017/07/24/7230203.html\" target=\"_blank\">参考</a>\n<a href=\"https://blog.csdn.net/raojinwei/article/details/70237783\" target=\"_blank\">android</a>\n<a href=\"http://services.gradle.org/distributions/\" target=\"_blank\">gradle</a>\n","tags":["react-native"]},{"title":"[工具] sublime text3","url":"/2018/09/30//articles/2018/09/30/1538295403924.html/","content":"<a href=\"http://www.sublimetext.com/\" target=\"_blank\">sublime text3</a>\n<a href=\"https://packagecontrol.io/\" target=\"_blank\">插件</a>\nPackage Control\n```\nimport urllib.request,os; pf = 'PackageControl.sublime-package'; ipp = sublime.installed_packages_path();urllib.request.install_opener( urllib.request.build_opener(urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf),'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace('','%20')).read())\n```\n","tags":["工具"]},{"title":"我的github","url":"/2018/09/25//articles/2018/09/25/1537857714941.html/","content":"<a href=\"https://github.com/BrighterEyer\" target=\"_blank\">我的github</a>\n<a href=\"https://brightereyer.github.io/Chess\" target=\"_blank\">象棋</a>\n","tags":["github"]},{"title":"centos7+jdk8+maven3.5+tomcat8.5+solo","url":"/2018/09/25//articles/2018/09/25/1537857557716.html/","content":"#jdk8\n```\nrpm -qa | grep jdk\n#yum install java-1.8.0-openjdk.x86_64\nyum remove java-1.8.0-openjdk\n\nwget http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz?AuthParam=1537775743_4940afcb8606087f72fcfb730c09aae1\n\nmv jdk-8* jdk8.tar.gz\ntar zxvf jdk8.tar.gz\nmv jdk-8u181 /usr/lib/jvm/jdk8\n```\n\n#下载maven\n```\nhttp://maven.apache.org/download.cgi\n\nwget http://mirrors.shu.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz\ntar zxvf apache-maven-3.5.4-bin.tar.gz\nmv apache-maven-3.5.4 /usr/local/maven\nchmod -R 755 /usr/local/maven\n```\n\n#tomcat\n```\nwget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz\ntar zxvf apache-tomcat-8.5.34.tar.gz \nmv apache-tomcat-8.5.34 /usr/local/tomcat8\nchmod -R 755 /usr/local/tomcat8\n```\n#环境变量\n```\nvim /etc/profile\nexport JAVA_HOME=/usr/lib/jvm/jdk8\nexport JRE_HOME=/usr/lib/jvm/jdk8/jre\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH\n\nCATALINA_HOME=/usr/local/tomcat8\nPATH=$CATALINA_HOME/bin:$PATH\nexport PATH CATALINA_HOME\n\nexport MAVEN_HOME=/usr/local/maven\nexport PATH=$MAVEN_HOME/bin:$PATH\n#:wq\nsource /etc/profile\n```\n\n#solo+solo皮肤部署\n```\ngit clone https://github.com/b3log/solo.git\ncd solo/src/main/webapp/\ngit clone https://github.com/b3log/solo-skins.git skins\ncd ..\nmvn install -Dmaven.test.skip=true\ncp target/solo.war /usr/local/tomcat8/webapps/\ncd /usr/local/tomcat8/webapps/solo/WEB-INF/classes\nvim latke.properties\nserverHost=域名\nserverPort=80\n\nvim /usr/local/tomcat8/conf/server.xml\n#8080改为80\n```\n#启动tomcat\n```\nstartup.sh\n```","tags":["solo"]}]